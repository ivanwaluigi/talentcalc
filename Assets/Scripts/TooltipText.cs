using UnityEngine;
using System.Collections;

public class TooltipText : MonoBehaviour
{   // Find a better way for this
    public static class Arms
    {

        public static readonly string[] AbilityNames = {
            "Improved Heroic Strike",
            "Deflection",
            "Improved Rend",
            "Improved Charge",
            "Tactical Mastery",
            "Improved Thunder Clap",
            "Improved Overpower",
            "Anger Management",
            "Deep Wounds",
            "Two-Handed Weapon Specialization",
            "Impale",
            "Axe Specialization",
            "Sweeping Strikes",
            "Mace Specialization",
            "Sword Specialization",
            "Polearm Specialization",
            "Improved Hamstring",
            "Mortal Strike"
        };

        public static readonly string[] HeroicStrikeDescriptions = {
            "Reduces the cost of your Heroic Strike ability by 1 rage points.",
            "Reduces the cost of your Heroic Strike ability by 2 rage points.",
            "Reduces the cost of your Heroic Strike ability by 3 rage points."
        };

        public static readonly string[] DeflectionDescriptions = {
            "Increases your Parry chance by 1%.",
            "Increases your Parry chance by 2%.",
            "Increases your Parry chance by 3%.",
            "Increases your Parry chance by 4%.",
            "Increases your Parry chance by 5%."
        };

        public static readonly string[] RendDescriptions = {
            "Increases the bleed damage done by your Rend ability by 15%.",
            "Increases the bleed damage done by your Rend ability by 25%.",
            "Increases the bleed damage done by your Rend ability by 35%."
        };

        public static readonly string[] ChargeDescriptions = {
            "Increases the amount of rage generated by your Charge ability by 3.",
            "Increases the amount of rage generated by your Charge ability by 6."
        };

        public static readonly string[] TacticalMasteryDescriptions = {
            "You retain up to 5 rage points when you change stances.",
            "You retain up to 10 rage points when you change stances.",
            "You retain up to 15 rage points when you change stances.",
            "You retain up to 20 rage points when you change stances.",
            "You retain up to 25 rage points when you change stances."
        };

        public static readonly string[] ThunderClapDescriptions = {
            "Reduces the cost of your Thunder Clap ability by 1 rage points.",
            "Reduces the cost of your Thunder Clap ability by 2 rage points.",
            "Reduces the cost of your Thunder Clap ability by 4 rage points."
        };

        public static readonly string[] OverpowerDescriptions = {
            "Increases the critical strike chance of your Overpower ability by 25%.",
            "Increases the critical strike chance of your Overpower ability by 50%."
        };

        public static readonly string[] AngerManagementDescriptions = {
            "Increases the time required for your rage to decay while out of combat by 30%."
        };

        public static readonly string[] DeepWoundsDescriptions = {
            "Your critical strikes cause the opponent to bleed, dealing 20% of your melee weapon's average damage over 12 sec.",
            "Your critical strikes cause the opponent to bleed, dealing 40% of your melee weapon's average damage over 12 sec.",
            "Your critical strikes cause the opponent to bleed, dealing 60% of your melee weapon's average damage over 12 sec."
        };

        public static readonly string[] THWeaponSpecializationDescriptions = {
            "Increases the damage you deal with two-handed melee weapons by 1%.",
            "Increases the damage you deal with two-handed melee weapons by 2%.",
            "Increases the damage you deal with two-handed melee weapons by 3%.",
            "Increases the damage you deal with two-handed melee weapons by 4%.",
            "Increases the damage you deal with two-handed melee weapons by 5%."
        };

        public static readonly string[] ImpaleDescriptions = {
            "Increases the critical strike damage bonus of your abilities in Battle, Defensive and Berserker stance by 10%.",
            "Increases the critical strike damage bonus of your abilities in Battle, Defensive and Berserker stance by 20%."
        };

        public static readonly string[] AxeSpecializationDescriptions = {
            "Increases your chance to get a critical strike with Axes by 1%.",
            "Increases your chance to get a critical strike with Axes by 2%.",
            "Increases your chance to get a critical strike with Axes by 3%.",
            "Increases your chance to get a critical strike with Axes by 4%.",
            "Increases your chance to get a critical strike with Axes by 5%."
        };

        public static readonly string[] SweepingStrikesDescriptions = {
            "Your next 5 melee attacks strike an additional nearby opponent."
        };

        public static readonly string[] MaceSpecializationDescriptions = {
            "Gives you a 1% chance to stun your target for 3 sec with a Mace.",
            "Gives you a 2% chance to stun your target for 3 sec with a Mace.",
            "Gives you a 3% chance to stun your target for 3 sec with a Mace.",
            "Gives you a 4% chance to stun your target for 3 sec with a Mace.",
            "Gives you a 6% chance to stun your target for 3 sec with a Mace."
        };

        public static readonly string[] SwordSpecializationDescriptions = {
            "Gives you a 1% chance to get an extra attack on the same target after dealing damage with your Sword.",
            "Gives you a 2% chance to get an extra attack on the same target after dealing damage with your Sword.",
            "Gives you a 3% chance to get an extra attack on the same target after dealing damage with your Sword.",
            "Gives you a 4% chance to get an extra attack on the same target after dealing damage with your Sword.",
            "Gives you a 5% chance to get an extra attack on the same target after dealing damage with your Sword."
        };

        public static readonly string[] PolearmSpecializationDescriptions = {
            "Increases your chance to get a critical strike with Polearms by 1%.",
            "Increases your chance to get a critical strike with Polearms by 2%.",
            "Increases your chance to get a critical strike with Polearms by 3%.",
            "Increases your chance to get a critical strike with Polearms by 4%.",
            "Increases your chance to get a critical strike with Polearms by 5%."
        };

        public static readonly string[] HamstringDescriptions = {
            "Gives your Hamstring ability a 5% chance to immobilize the target for 5 sec.",
            "Gives your Hamstring ability a 10% chance to immobilize the target for 5 sec.",
            "Gives your Hamstring ability a 15% chance to immobilize the target for 5 sec."
        };

        public static readonly string[] MortalStrikeDescriptions = {
            "A vicious strike that deals weapon damage plus 85 and wounds the target, reducing the effectiveness of any healing by 50% for 10 sec."
        };

        public static string GetAbilityDesc(int abilityPosition, int abilityPoints)
        {
            if (abilityPosition == 0)
            {
                if (abilityPoints < HeroicStrikeDescriptions.Length)
                {
                    return HeroicStrikeDescriptions[abilityPoints];
                }
                else
                {
                    return HeroicStrikeDescriptions[HeroicStrikeDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 1)
            {
                if (abilityPoints < DeflectionDescriptions.Length)
                {
                    return DeflectionDescriptions[abilityPoints];
                }
                else
                {
                    return DeflectionDescriptions[DeflectionDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 2)
            {
                if (abilityPoints < RendDescriptions.Length)
                {
                    return RendDescriptions[abilityPoints];
                }
                else
                {
                    return RendDescriptions[RendDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 3)
            {
                if (abilityPoints < ChargeDescriptions.Length)
                {
                    return ChargeDescriptions[abilityPoints];
                }
                else
                {
                    return ChargeDescriptions[ChargeDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 4)
            {
                if (abilityPoints < TacticalMasteryDescriptions.Length)
                {
                    return TacticalMasteryDescriptions[abilityPoints];
                }
                else
                {
                    return TacticalMasteryDescriptions[TacticalMasteryDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 5)
            {
                if (abilityPoints < ThunderClapDescriptions.Length)
                {
                    return ThunderClapDescriptions[abilityPoints];
                }
                else
                {
                    return ThunderClapDescriptions[ThunderClapDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 6)
            {
                if (abilityPoints < OverpowerDescriptions.Length)
                {
                    return OverpowerDescriptions[abilityPoints];
                }
                else
                {
                    return OverpowerDescriptions[OverpowerDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 7)
            {
                if (abilityPoints < AngerManagementDescriptions.Length)
                {
                    return AngerManagementDescriptions[abilityPoints];
                }
                else
                {
                    return AngerManagementDescriptions[AngerManagementDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 8)
            {
                if (abilityPoints < DeepWoundsDescriptions.Length)
                {
                    return DeepWoundsDescriptions[abilityPoints];
                }
                else
                {
                    return DeepWoundsDescriptions[DeepWoundsDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 9)
            {
                if (abilityPoints < THWeaponSpecializationDescriptions.Length)
                {
                    return THWeaponSpecializationDescriptions[abilityPoints];
                }
                else
                {
                    return THWeaponSpecializationDescriptions[THWeaponSpecializationDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 10)
            {
                if (abilityPoints < ImpaleDescriptions.Length)
                {
                    return ImpaleDescriptions[abilityPoints];
                }
                else
                {
                    return ImpaleDescriptions[ImpaleDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 11)
            {
                if (abilityPoints < AxeSpecializationDescriptions.Length)
                {
                    return AxeSpecializationDescriptions[abilityPoints];
                }
                else
                {
                    return AxeSpecializationDescriptions[AxeSpecializationDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 12)
            {
                if (abilityPoints < SweepingStrikesDescriptions.Length)
                {
                    return SweepingStrikesDescriptions[abilityPoints];
                }
                else
                {
                    return SweepingStrikesDescriptions[SweepingStrikesDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 13)
            {
                if (abilityPoints < MaceSpecializationDescriptions.Length)
                {
                    return MaceSpecializationDescriptions[abilityPoints];
                }
                else
                {
                    return MaceSpecializationDescriptions[MaceSpecializationDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 14)
            {
                if (abilityPoints < SwordSpecializationDescriptions.Length)
                {
                    return SwordSpecializationDescriptions[abilityPoints];
                }
                else
                {
                    return SwordSpecializationDescriptions[SwordSpecializationDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 15)
            {
                if (abilityPoints < PolearmSpecializationDescriptions.Length)
                {
                    return PolearmSpecializationDescriptions[abilityPoints];
                }
                else
                {
                    return PolearmSpecializationDescriptions[PolearmSpecializationDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 16)
            {
                if (abilityPoints < HamstringDescriptions.Length)
                {
                    return HamstringDescriptions[abilityPoints];
                }
                else
                {
                    return HamstringDescriptions[HamstringDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 17)
            {
                if (abilityPoints < MortalStrikeDescriptions.Length)
                {
                    return MortalStrikeDescriptions[abilityPoints];
                }
                else
                {
                    return MortalStrikeDescriptions[MortalStrikeDescriptions.Length - 1];
                }
            }
            else
            {
                return "No Description available";
            }
        }
    }

    public static class Fury
    {

        public static readonly string[] AbilityNames = {
            "Booming Voice",
            "Cruelty",
            "Improved Demoralizing Shout",
            "Unbridled Wrath",
            "Improved Cleave",
            "Piercing Howl",
            "Blood Craze",
            "Improved Battle Shout",
            "Dual Wield Specialization",
            "Improved Execute",
            "Enrage",
            "Improved Slam",
            "Death Wish",
            "Improved Intercept",
            "Improved Berserker Rage",
            "Flurry",
            "Bloodthirst"
        };

        public static readonly string[] BoomingVoiceDescriptions = {
            "Increases the area of effect and duration of your Battle Shout and Demoralizing Shout by 10%.",
            "Increases the area of effect and duration of your Battle Shout and Demoralizing Shout by 20%.",
            "Increases the area of effect and duration of your Battle Shout and Demoralizing Shout by 30%.",
            "Increases the area of effect and duration of your Battle Shout and Demoralizing Shout by 40%.",
            "Increases the area of effect and duration of your Battle Shout and Demoralizing Shout by 50%."
        };

        public static readonly string[] CrueltyDescriptions = {
            "Increases your chance to get a critical strike with melee weapons by 1%.",
            "Increases your chance to get a critical strike with melee weapons by 2%.",
            "Increases your chance to get a critical strike with melee weapons by 3%.",
            "Increases your chance to get a critical strike with melee weapons by 4%.",
            "Increases your chance to get a critical strike with melee weapons by 5%."
        };

        public static readonly string[] DemoShoutDescriptions = {
            "Increases the melee attack power reduction of your Demoralizing Shout by 8%",
            "Increases the melee attack power reduction of your Demoralizing Shout by 16%",
            "Increases the melee attack power reduction of your Demoralizing Shout by 24%",
            "Increases the melee attack power reduction of your Demoralizing Shout by 32%",
            "Increases the melee attack power reduction of your Demoralizing Shout by 40%"
        };

        public static readonly string[] UnbridledWrathDescriptions = {
            "Gives you a 8% chance to generate an additional Rage point when you deal melee damage with a weapon.",
            "Gives you a 16% chance to generate an additional Rage point when you deal melee damage with a weapon.",
            "Gives you a 24% chance to generate an additional Rage point when you deal melee damage with a weapon.",
            "Gives you a 32% chance to generate an additional Rage point when you deal melee damage with a weapon.",
            "Gives you a 40% chance to generate an additional Rage point when you deal melee damage with a weapon."
        };

        public static readonly string[] ImprovedCleaveDescriptions = {
            "Increases the bonus damage done by your Cleave ability by 40%",
            "Increases the bonus damage done by your Cleave ability by 80%",
            "Increases the bonus damage done by your Cleave ability by 120%"
        };

        public static readonly string[] PiercingHowlDescriptions = {
            "Causes all enemies near the warrior to be dazed, reducing movement speed by 50% for 6 sec."
        };

        public static readonly string[] BloodCrazeDescriptions = {
            "Regenerates 1% of your total Health over 6 sec after being the victim of a critical strike.",
            "Regenerates 2% of your total Health over 6 sec after being the victim of a critical strike.",
            "Regenerates 3% of your total Health over 6 sec after being the victim of a critical strike."
        };

        public static readonly string[] BattleShoutDescriptions = {
            "Increases the melee attack power bonus of your Battle Shout by 5%.",
            "Increases the melee attack power bonus of your Battle Shout by 10%.",
            "Increases the melee attack power bonus of your Battle Shout by 15%.",
            "Increases the melee attack power bonus of your Battle Shout by 20%.",
            "Increases the melee attack power bonus of your Battle Shout by 25%."
        };

        public static readonly string[] DualWieldDescriptions = {
            "Increases the damage done by your offhand weapon by 5%.",
            "Increases the damage done by your offhand weapon by 10%.",
            "Increases the damage done by your offhand weapon by 15%.",
            "Increases the damage done by your offhand weapon by 20%.",
            "Increases the damage done by your offhand weapon by 25%."
        };

        public static readonly string[] ExecuteDescriptions = {
            "Reduces the Rage cost of your Execute ability by 2",
            "Reduces the Rage cost of your Execute ability by 5"
        };

        public static readonly string[] EnrageDescriptions = {
            "Gives you a 5% melee damage bonus for 12 sec up to a maximum of 12 swings after being the victim of a critical strike.",
            "Gives you a 10% melee damage bonus for 12 sec up to a maximum of 12 swings after being the victim of a critical strike.",
            "Gives you a 15% melee damage bonus for 12 sec up to a maximum of 12 swings after being the victim of a critical strike.",
            "Gives you a 20% melee damage bonus for 12 sec up to a maximum of 12 swings after being the victim of a critical strike.",
            "Gives you a 25% melee damage bonus for 12 sec up to a maximum of 12 swings after being the victim of a critical strike."
        };

        public static readonly string[] SlamDescriptions = {
            "Decreases the casting time of your Slam ability by 0.1 sec.",
            "Decreases the casting time of your Slam ability by 0.2 sec.",
            "Decreases the casting time of your Slam ability by 0.3 sec.",
            "Decreases the casting time of your Slam ability by 0.4 sec.",
            "Decreases the casting time of your Slam ability by 0.5 sec."
        };

        public static readonly string[] DeathWishDescriptions = {
            "When activated, increases your physical damage by 20% and makes you immne to Fear effects, but lowers your armor and all resistances by 20%. Lasts 30 sec."
        };

        public static readonly string[] InterceptDescriptions = {
            "Reduces the cooldown of your Intercept ability by 5 sec.",
            "Reduces the cooldown of your Intercept ability by 10 sec."
        };

        public static readonly string[] BerserkerRageDescriptions = {
            "The Berserker Rage ability will generate 5 rage when used.",
            "The Berserker Rage ability will generate 10 rage when used."
        };

        public static readonly string[] FlurryDescriptions = {
            "Increases your attack speed by 10% for your next 3 swings after dealing a melee critical strike.",
            "Increases your attack speed by 15% for your next 3 swings after dealing a melee critical strike.",
            "Increases your attack speed by 20% for your next 3 swings after dealing a melee critical strike.",
            "Increases your attack speed by 25% for your next 3 swings after dealing a melee critical strike.",
            "Increases your attack speed by 30% for your next 3 swings after dealing a melee critical strike."
        };

        public static readonly string[] BloodthirstDescriptions = {
            "Instantly attack the target causing damage equal to 45% of your attack power. In addition, the next 5 successful melee attacks will restore 10 health. This effect lasts 8 sec."
        };

        public static string GetAbilityDesc(int abilityPosition, int abilityPoints)
        {
            if (abilityPosition == 0)
            {
                if (abilityPoints < BoomingVoiceDescriptions.Length)
                {
                    return BoomingVoiceDescriptions[abilityPoints];
                }
                else
                {
                    return BoomingVoiceDescriptions[BoomingVoiceDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 1)
            {
                if (abilityPoints < CrueltyDescriptions.Length)
                {
                    return CrueltyDescriptions[abilityPoints];
                }
                else
                {
                    return CrueltyDescriptions[CrueltyDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 2)
            {
                if (abilityPoints < DemoShoutDescriptions.Length)
                {
                    return DemoShoutDescriptions[abilityPoints];
                }
                else
                {
                    return DemoShoutDescriptions[DemoShoutDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 3)
            {
                if (abilityPoints < UnbridledWrathDescriptions.Length)
                {
                    return UnbridledWrathDescriptions[abilityPoints];
                }
                else
                {
                    return UnbridledWrathDescriptions[UnbridledWrathDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 4)
            {
                if (abilityPoints < ImprovedCleaveDescriptions.Length)
                {
                    return ImprovedCleaveDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedCleaveDescriptions[ImprovedCleaveDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 5)
            {
                if (abilityPoints < PiercingHowlDescriptions.Length)
                {
                    return PiercingHowlDescriptions[abilityPoints];
                }
                else
                {
                    return PiercingHowlDescriptions[PiercingHowlDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 6)
            {
                if (abilityPoints < BloodCrazeDescriptions.Length)
                {
                    return BloodCrazeDescriptions[abilityPoints];
                }
                else
                {
                    return BloodCrazeDescriptions[BloodCrazeDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 7)
            {
                if (abilityPoints < BattleShoutDescriptions.Length)
                {
                    return BattleShoutDescriptions[abilityPoints];
                }
                else
                {
                    return BattleShoutDescriptions[BattleShoutDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 8)
            {
                if (abilityPoints < DualWieldDescriptions.Length)
                {
                    return DualWieldDescriptions[abilityPoints];
                }
                else
                {
                    return DualWieldDescriptions[DualWieldDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 9)
            {
                if (abilityPoints < ExecuteDescriptions.Length)
                {
                    return ExecuteDescriptions[abilityPoints];
                }
                else
                {
                    return ExecuteDescriptions[ExecuteDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 10)
            {
                if (abilityPoints < EnrageDescriptions.Length)
                {
                    return EnrageDescriptions[abilityPoints];
                }
                else
                {
                    return EnrageDescriptions[EnrageDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 11)
            {
                if (abilityPoints < SlamDescriptions.Length)
                {
                    return SlamDescriptions[abilityPoints];
                }
                else
                {
                    return SlamDescriptions[SlamDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 12)
            {
                if (abilityPoints < DeathWishDescriptions.Length)
                {
                    return DeathWishDescriptions[abilityPoints];
                }
                else
                {
                    return DeathWishDescriptions[DeathWishDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 13)
            {
                if (abilityPoints < InterceptDescriptions.Length)
                {
                    return InterceptDescriptions[abilityPoints];
                }
                else
                {
                    return InterceptDescriptions[InterceptDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 14)
            {
                if (abilityPoints < BerserkerRageDescriptions.Length)
                {
                    return BerserkerRageDescriptions[abilityPoints];
                }
                else
                {
                    return BerserkerRageDescriptions[BerserkerRageDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 15)
            {
                if (abilityPoints < FlurryDescriptions.Length)
                {
                    return FlurryDescriptions[abilityPoints];
                }
                else
                {
                    return FlurryDescriptions[FlurryDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 16)
            {
                if (abilityPoints < BloodthirstDescriptions.Length)
                {
                    return BloodthirstDescriptions[abilityPoints];
                }
                else
                {
                    return BloodthirstDescriptions[BloodthirstDescriptions.Length - 1];
                }
            }
            else
            {
                return "No Description available";
            }
        }
    }

    public static class Defensive
    {
        public static readonly string[] AbilityNames = {
            "Shield Specialization",
            "Anticipation",
            "Improved Bloodrage",
            "Toghness",
            "Iron Will",
            "Last Stand",
            "Improved Shield Block",
            "Improved Revenge",
            "Defiance",
            "Improved Sunder Armor",
            "Improved Disarm",
            "Improved Taunt",
            "Improved Shield Wall",
            "Concussion Blow",
            "Improved Shield Bash",
            "One-Handed Weapon Specialization",
            "Shield Slam"
        };

        public static readonly string[] ShieldSpecializationDescriptions = {
            "Increases your chance to block attacks with your shield by 1% and has a 20% chance to generate 1 rage when a block occurs",
            "Increases your chance to block attacks with your shield by 2% and has a 40% chance to generate 1 rage when a block occurs",
            "Increases your chance to block attacks with your shield by 3% and has a 60% chance to generate 1 rage when a block occurs",
            "Increases your chance to block attacks with your shield by 4% and has a 80% chance to generate 1 rage when a block occurs",
            "Increases your chance to block attacks with your shield by 5% and has a 100% chance to generate 1 rage when a block occurs"

        };

        public static readonly string[] AnticipationDescriptions = {
            "Increases your defense skill by 2.",
            "Increases your defense skill by 4.",
            "Increases your defense skill by 6.",
            "Increases your defense skill by 8.",
            "Increases your defense skill by 10."
        };

        public static readonly string[] ImrpovedBloodrageDescriptions = {
            "Increases the instant Rage generated by your bloodrage ability by 2",
            "Increases the instant Rage generated by your bloodrage ability by 5."
        };

        public static readonly string[] ToughnessDescriptions = {
            "Increases your armor value from items by 2%.",
            "Increases your armor value from items by 4%.",
            "Increases your armor value from items by 6%.",
            "Increases your armor value from items by 8%.",
            "Increases your armor value from items by 10%."
        };

        public static readonly string[] IronWillDescriptions = {
            "Increases your chance to resist Stun and Charm effects by additional 3%. ",
            "Increases your chance to resist Stun and Charm effects by additional 6%. ",
            "Increases your chance to resist Stun and Charm effects by additional 9%. ",
            "Increases your chance to resist Stun and Charm effects by additional 12%. ",
            "Increases your chance to resist Stun and Charm effects by additional 15%. "
        };

        public static readonly string[] LastStandDescriptions = {
            "When activated, this ability temporarily grants you 30% of your maximum hit points for 20 seconds. After the effect expires, the hit points are lost."
        };

        public static readonly string[] ImrpovedShieldBlockDescriptions = {
            "Allows your Shield Block ability to block an additional attack and increases the duration by 0.5 sec.",
            "Allows your Shield Block ability to block an additional attack and increases the duration by 1 sec.",
            "Allows your Shield Block ability to block an additional attack and increases the duration by 2 sec."
        };

        public static readonly string[] ImrpovedRevengeDescriptions = {
            "Gives your Revenge ability a 15% chance to stun the target for 3 sec.",
            "Gives your Revenge ability a 30% chance to stun the target for 3 sec.",
            "Gives your Revenge ability a 45% chance to stun the target for 3 sec."
        };

        public static readonly string[] DefianceDescriptions = {
            "Increases the threat generated by your attacks by 3% while in Defensive Stance.",
            "Increases the threat generated by your attacks by 6% while in Defensive Stance.",
            "Increases the threat generated by your attacks by 9% while in Defensive Stance.",
            "Increases the threat generated by your attacks by 12% while in Defensive Stance.",
            "Increases the threat generated by your attacks by 15% while in Defensive Stance."
        };

        public static readonly string[] ImrpovedSunderArmorDescriptions = {
            "Reduces the cost of your Sunder Armor by 1 rage point.",
            "Reduces the cost of your Sunder Armor by 2 rage point.",
            "Reduces the cost of your Sunder Armor by 3 rage point."
        };

        public static readonly string[] ImrpovedDisarmDescriptions = {
            "Increases the duration of your Disarm ability by 1 sec.",
            "Increases the duration of your Disarm ability by 2 sec.",
            "Increases the duration of your Disarm ability by 3 sec."
        };

        public static readonly string[] ImrpovedTauntDescriptions = {
            "Reduces the cooldown of your taunt ability by 1 sec.",
            "Reduces the cooldown of your taunt ability by 2 sec."
        };

        public static readonly string[] ImrpovedSheildWallDescriptions = {
            "Increases the effect duration of your Shield Wall ability by 3 sec.",
             "Increases the effect duration of your Shield Wall ability by 5 sec."
        };

        public static readonly string[] ConcussionBlowDescriptions = {
            "Stuns the opponent for 5 sec."
        };

        public static readonly string[] ImrpovedShieldBashDescriptions = {
            "Gives your Shield Bash ability a 50% chance to silence the target for 3 sec.",
            "Gives your Shield Bash ability a 100% chance to silence the target for 3 sec."
        };

        public static readonly string[] OneHandedWeaponSpecializationDescriptions = {
            "Increases the damage you deal with One-Handed Melee weapons by 2%.",
            "Increases the damage you deal with One-Handed Melee weapons by 4%.",
            "Increases the damage you deal with One-Handed Melee weapons by 6%.",
            "Increases the damage you deal with One-Handed Melee weapons by 8%.",
            "Increases the damage you deal with One-Handed Melee weapons by 10%."
        };

        public static readonly string[] ShieldSlamDescriptions = {
            "Slams the target with your shield, causing 225 to 236 damage, modified by your shield block value, and has 50% chance of dispelling 1 magic effect on the target. Also causes high amount of threat."
        };

        public static string GetAbilityDesc(int abilityPosition, int abilityPoints)
        {
            if (abilityPosition == 0)
            {
                if (abilityPoints < ShieldSpecializationDescriptions.Length)
                {
                    return ShieldSpecializationDescriptions[abilityPoints];
                }
                else
                {
                    return ShieldSpecializationDescriptions[ShieldSpecializationDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 1)
            {
                if (abilityPoints < AnticipationDescriptions.Length)
                {
                    return AnticipationDescriptions[abilityPoints];
                }
                else
                {
                    return AnticipationDescriptions[AnticipationDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 2)
            {
                if (abilityPoints < ImrpovedBloodrageDescriptions.Length)
                {
                    return ImrpovedBloodrageDescriptions[abilityPoints];
                }
                else
                {
                    return ImrpovedBloodrageDescriptions[ImrpovedBloodrageDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 3)
            {
                if (abilityPoints < ToughnessDescriptions.Length)
                {
                    return ToughnessDescriptions[abilityPoints];
                }
                else
                {
                    return ToughnessDescriptions[ToughnessDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 4)
            {
                if (abilityPoints < IronWillDescriptions.Length)
                {
                    return IronWillDescriptions[abilityPoints];
                }
                else
                {
                    return IronWillDescriptions[IronWillDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 5)
            {
                if (abilityPoints < LastStandDescriptions.Length)
                {
                    return LastStandDescriptions[abilityPoints];
                }
                else
                {
                    return LastStandDescriptions[LastStandDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 6)
            {
                if (abilityPoints < ImrpovedShieldBlockDescriptions.Length)
                {
                    return ImrpovedShieldBlockDescriptions[abilityPoints];
                }
                else
                {
                    return ImrpovedShieldBlockDescriptions[ImrpovedShieldBlockDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 7)
            {
                if (abilityPoints < ImrpovedRevengeDescriptions.Length)
                {
                    return ImrpovedRevengeDescriptions[abilityPoints];
                }
                else
                {
                    return ImrpovedRevengeDescriptions[ImrpovedRevengeDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 8)
            {
                if (abilityPoints < DefianceDescriptions.Length)
                {
                    return DefianceDescriptions[abilityPoints];
                }
                else
                {
                    return DefianceDescriptions[DefianceDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 9)
            {
                if (abilityPoints < ImrpovedSunderArmorDescriptions.Length)
                {
                    return ImrpovedSunderArmorDescriptions[abilityPoints];
                }
                else
                {
                    return ImrpovedSunderArmorDescriptions[ImrpovedSunderArmorDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 10)
            {
                if (abilityPoints < ImrpovedDisarmDescriptions.Length)
                {
                    return ImrpovedDisarmDescriptions[abilityPoints];
                }
                else
                {
                    return ImrpovedDisarmDescriptions[ImrpovedDisarmDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 11)
            {
                if (abilityPoints < ImrpovedTauntDescriptions.Length)
                {
                    return ImrpovedTauntDescriptions[abilityPoints];
                }
                else
                {
                    return ImrpovedTauntDescriptions[ImrpovedTauntDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 12)
            {
                if (abilityPoints < ImrpovedSheildWallDescriptions.Length)
                {
                    return ImrpovedSheildWallDescriptions[abilityPoints];
                }
                else
                {
                    return ImrpovedSheildWallDescriptions[ImrpovedSheildWallDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 13)
            {
                if (abilityPoints < ConcussionBlowDescriptions.Length)
                {
                    return ConcussionBlowDescriptions[abilityPoints];
                }
                else
                {
                    return ConcussionBlowDescriptions[ConcussionBlowDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 14)
            {
                if (abilityPoints < ImrpovedShieldBashDescriptions.Length)
                {
                    return ImrpovedShieldBashDescriptions[abilityPoints];
                }
                else
                {
                    return ImrpovedShieldBashDescriptions[ImrpovedShieldBashDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 15)
            {
                if (abilityPoints < OneHandedWeaponSpecializationDescriptions.Length)
                {
                    return OneHandedWeaponSpecializationDescriptions[abilityPoints];
                }
                else
                {
                    return OneHandedWeaponSpecializationDescriptions[OneHandedWeaponSpecializationDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 16)
            {
                if (abilityPoints < ShieldSlamDescriptions.Length)
                {
                    return ShieldSlamDescriptions[abilityPoints];
                }
                else
                {
                    return ShieldSlamDescriptions[ShieldSlamDescriptions.Length - 1];
                }
            }
            else
            {
                return "No Description available";
            }
        }

    }

    public static class Affliction
    {
        public static readonly string[] AbilityNames = {
            "Suppression",
            "Improved Corruption",
            "Improved Curse of Weakness",
            "Improved Drain Soul",
            "Improved Life Tap",
            "Improved Drain Life",
            "Improved Curse of Agony",
            "Fel Concentration",
            "Amplify Curse",
            "Grim Reach",
            "Nightfall",
            "Improved Drain Mana",
            "Siphon Life",
            "Curse of Exhaustion",
            "Improved Curse of Exhaustion",
            "Shadow Mastery",
            "Dark Pact"
        };

        public static readonly string[] SuppressionDescriptions = {
            "Reduces the chance for enemies to resist your Affliction spells by 2%.",
            "Reduces the chance for enemies to resist your Affliction spells by 4%.",
            "Reduces the chance for enemies to resist your Affliction spells by 6%.",
            "Reduces the chance for enemies to resist your Affliction spells by 8%.",
            "Reduces the chance for enemies to resist your Affliction spells by 10%."
        };

        public static readonly string[] ImprovedCorruptionDescriptions = {
            "Reduces the casting time of your Corruption spell by 0.4 sec.",
            "Reduces the casting time of your Corruption spell by 0.8 sec.",
            "Reduces the casting time of your Corruption spell by 1.2 sec.",
            "Reduces the casting time of your Corruption spell by 1.6 sec.",
            "Reduces the casting time of your Corruption spell by 2 sec."
        };

        public static readonly string[] ImprovedCurseOfWeaknessDescriptions = {
            "Increases the effect of your Curse of Weakness by 6%.",
            "Increases the effect of your Curse of Weakness by 13%.",
            "Increases the effect of your Curse of Weakness by 20%."
        };

        public static readonly string[] ImprovedDrainSoulDescriptions = {
            "Gives you a 50% chance to get a 100% increase to your Mana regeneration for 10 sec if the target is killed by you while you drain its soul. In addition your Mana may continue to regenerate while casting at 50% of normal.",
            "Gives you a 100% chance to get a 100% increase to your Mana regeneration for 10 sec if the target is killed by you while you drain its soul. In addition your Mana may continue to regenerate while casting at 50% of normal."
        };

        public static readonly string[] ImprovedLifeTapDescriptions = {
            "Increases the amount of Mana awarded by your Life Tap spell by 10%.",
            "Increases the amount of Mana awarded by your Life Tap spell by 20%."
        };

        public static readonly string[] ImprovedDrainLifeDescriptions = {
            "Increases the the Health drained by your Drain Life spell by 2%.",
            "Increases the the Health drained by your Drain Life spell by 4%.",
            "Increases the the Health drained by your Drain Life spell by 6%.",
            "Increases the the Health drained by your Drain Life spell by 8%.",
            "Increases the the Health drained by your Drain Life spell by 10%."
        };

        public static readonly string[] ImprovedCurseOfAgonyDescriptions = {
            "Increases the damage done by your Curse of Agony by 2%.",
            "Increases the damage done by your Curse of Agony by 4%.",
            "Increases the damage done by your Curse of Agony by 6%."
        };

        public static readonly string[] FelConcentrationDescriptions = {
            "Gives you a 14% chance to avoid interruption caused by damage while channeling the Drain Life, Drain Mana or Drain Soul spell.",
            "Gives you a 28% chance to avoid interruption caused by damage while channeling the Drain Life, Drain Mana or Drain Soul spell.",
            "Gives you a 42% chance to avoid interruption caused by damage while channeling the Drain Life, Drain Mana or Drain Soul spell.",
            "Gives you a 56% chance to avoid interruption caused by damage while channeling the Drain Life, Drain Mana or Drain Soul spell.",
            "Gives you a 70% chance to avoid interruption caused by damage while channeling the Drain Life, Drain Mana or Drain Soul spell."
        };

        public static readonly string[] AmplifyCurseDescriptions = {
            "Increases the effect of your next Curse of Weakness or Curse of Agony by 50% or your next Curse of Exhaustion by 20%. Lasts 30 sec."
        };

        public static readonly string[] GrimReachDescriptions = {
            "Increases the range of your Affliction spells by 10%",
            "Increases the range of your Affliction spells by 20%"
        };

        public static readonly string[] NightfallDescriptions = {
            "Gives your Corruption and Drain Life spells a 2% chance to cause you to enter a Shadow Trance state after damaging the opponent. The Shadow Trance state reduces the casting time of your next Shadow Bolt spell by 100%",
            "Gives your Corruption and Drain Life spells a 4% chance to cause you to enter a Shadow Trance state after damaging the opponent. The Shadow Trance state reduces the casting time of your next Shadow Bolt spell by 100%"
        };

        public static readonly string[] ImprovedDrainManaDescriptions = {
            "Causes 15% of the Mana drained by your Drain Mana spell to damage the opponent.",
            "Causes 30% of the Mana drained by your Drain Mana spell to damage the opponent."
        };

        public static readonly string[] SiphonLifeDescriptions = {
            "Transfers 15 health from the target to the caster every 3 sec. Lasts 30 sec."
        };

        public static readonly string[] CurseOfExhaustionDescriptions = {
            "Reduces the target's movement speed by 10% for 12 sec. Only one Curse per Warlock can be active on any one target."
        };

        public static readonly string[] ImprovedCurseOfExhaustionDescriptions = {
            "Increases the speed reduction of your Curse of Exhaustion by 5%.",
            "Increases the speed reduction of your Curse of Exhaustion by 10%.",
            "Increases the speed reduction of your Curse of Exhaustion by 15%.",
            "Increases the speed reduction of your Curse of Exhaustion by 20%."
        };

        public static readonly string[] ShadowMasteryDescriptions = {
            "Increase the damage dealt or life drained by your Shadow spells by 2%.",
            "Increase the damage dealt or life drained by your Shadow spells by 4%.",
            "Increase the damage dealt or life drained by your Shadow spells by 6%.",
            "Increase the damage dealt or life drained by your Shadow spells by 8%.",
            "Increase the damage dealt or life drained by your Shadow spells by 10%."
        };

        public static readonly string[] DarkPactDescriptions = {
            "Drains 150 of your pet's Mana, returning 100% to you."
        };

        public static string GetAbilityDesc(int abilityPosition, int abilityPoints)
        {
            if (abilityPosition == 0)
            {
                if (abilityPoints < SuppressionDescriptions.Length)
                {
                    return SuppressionDescriptions[abilityPoints];
                }
                else
                {
                    return SuppressionDescriptions[SuppressionDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 1)
            {
                if (abilityPoints < ImprovedCorruptionDescriptions.Length)
                {
                    return ImprovedCorruptionDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedCorruptionDescriptions[ImprovedCorruptionDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 2)
            {
                if (abilityPoints < ImprovedCurseOfWeaknessDescriptions.Length)
                {
                    return ImprovedCurseOfWeaknessDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedCurseOfWeaknessDescriptions[ImprovedCurseOfWeaknessDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 3)
            {
                if (abilityPoints < ImprovedDrainSoulDescriptions.Length)
                {
                    return ImprovedDrainSoulDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedDrainSoulDescriptions[ImprovedDrainSoulDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 4)
            {
                if (abilityPoints < ImprovedLifeTapDescriptions.Length)
                {
                    return ImprovedLifeTapDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedLifeTapDescriptions[ImprovedLifeTapDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 5)
            {
                if (abilityPoints < ImprovedDrainLifeDescriptions.Length)
                {
                    return ImprovedDrainLifeDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedDrainLifeDescriptions[ImprovedDrainLifeDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 6)
            {
                if (abilityPoints < ImprovedCurseOfAgonyDescriptions.Length)
                {
                    return ImprovedCurseOfAgonyDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedCurseOfAgonyDescriptions[ImprovedCurseOfAgonyDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 7)
            {
                if (abilityPoints < FelConcentrationDescriptions.Length)
                {
                    return FelConcentrationDescriptions[abilityPoints];
                }
                else
                {
                    return FelConcentrationDescriptions[FelConcentrationDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 8)
            {
                if (abilityPoints < AmplifyCurseDescriptions.Length)
                {
                    return AmplifyCurseDescriptions[abilityPoints];
                }
                else
                {
                    return AmplifyCurseDescriptions[AmplifyCurseDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 9)
            {
                if (abilityPoints < GrimReachDescriptions.Length)
                {
                    return GrimReachDescriptions[abilityPoints];
                }
                else
                {
                    return GrimReachDescriptions[GrimReachDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 10)
            {
                if (abilityPoints < NightfallDescriptions.Length)
                {
                    return NightfallDescriptions[abilityPoints];
                }
                else
                {
                    return NightfallDescriptions[NightfallDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 11)
            {
                if (abilityPoints < ImprovedDrainManaDescriptions.Length)
                {
                    return ImprovedDrainManaDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedDrainManaDescriptions[ImprovedDrainManaDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 12)
            {
                if (abilityPoints < SiphonLifeDescriptions.Length)
                {
                    return SiphonLifeDescriptions[abilityPoints];
                }
                else
                {
                    return SiphonLifeDescriptions[SiphonLifeDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 13)
            {
                if (abilityPoints < CurseOfExhaustionDescriptions.Length)
                {
                    return CurseOfExhaustionDescriptions[abilityPoints];
                }
                else
                {
                    return CurseOfExhaustionDescriptions[CurseOfExhaustionDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 14)
            {
                if (abilityPoints < ImprovedCurseOfExhaustionDescriptions.Length)
                {
                    return ImprovedCurseOfExhaustionDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedCurseOfExhaustionDescriptions[ImprovedCurseOfExhaustionDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 15)
            {
                if (abilityPoints < ShadowMasteryDescriptions.Length)
                {
                    return ShadowMasteryDescriptions[abilityPoints];
                }
                else
                {
                    return ShadowMasteryDescriptions[ShadowMasteryDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 16)
            {
                if (abilityPoints < DarkPactDescriptions.Length)
                {
                    return DarkPactDescriptions[abilityPoints];
                }
                else
                {
                    return DarkPactDescriptions[DarkPactDescriptions.Length - 1];
                }
            }
            else
            {
                return "No Description available";
            }
        }

    }

    public static class Demonology
    {
        public static readonly string[] AbilityNames = {
            "Improved Healthstone",
            "Improved Imp",
            "Demonic Embrace",
            "Improved Health Funnel",
            "Improved Voidwalker",
            "Fel Intellect",
            "Improved Succubus",
            "Fel Domination",
            "Fel Stamina",
            "Master Summoner",
            "Unholy Power",
            "Improved Enslave Demon",
            "Demonic Sacrifice",
            "Improved Firestone",
            "Master Demonologist",
            "Soul Link",
            "Improved Spellstone"
        };

        public static readonly string[] ImprovedHealthstoneDescriptions = {
            "Increases the amount of Health restored by your Healthstone by 10%.",
            "Increases the amount of Health restored by your Healthstone by 20%."
        };

        public static readonly string[] ImprovedImpDescriptions = {
            "Increases the effect of your Imp's Firebolt, Fire Shield and Blood Pact spells by 10%.",
            "Increases the effect of your Imp's Firebolt, Fire Shield and Blood Pact spells by 20%.",
            "Increases the effect of your Imp's Firebolt, Fire Shield and Blood Pact spells by 30%."
        };

        public static readonly string[] DemonicEmbraceDescriptions = {
            "Increases your total Stamina by 3% but reduces your total Spirit by 1%.",
            "Increases your total Stamina by 6% but reduces your total Spirit by 2%.",
            "Increases your total Stamina by 9% but reduces your total Spirit by 3%.",
            "Increases your total Stamina by 12% but reduces your total Spirit by 4%.",
            "Increases your total Stamina by 15% but reduces your total Spirit by 5%."
        };

        public static readonly string[] ImprovedHealthFunnelDescriptions = {
            "Increases the amount of Health transferred by your Health Funnel spell by 10%.",
            "Increases the amount of Health transferred by your Health Funnel spell by 20%."
        };

        public static readonly string[] ImprovedVoidwalkerDescriptions = {
            "Increases the effectiveness of your Voidwalker's Torment, Consume Shadows, Sacrifice and Suffering spells by 10%.",
            "Increases the effectiveness of your Voidwalker's Torment, Consume Shadows, Sacrifice and Suffering spells by 20%.",
            "Increases the effectiveness of your Voidwalker's Torment, Consume Shadows, Sacrifice and Suffering spells by 30%."
        };

        public static readonly string[] FelIntellectDescriptions = {
            "Increases the maximum Mana of your Imp, Voidwalker, Succubus and Felhunter by 3%.",
            "Increases the maximum Mana of your Imp, Voidwalker, Succubus and Felhunter by 6%.",
            "Increases the maximum Mana of your Imp, Voidwalker, Succubus and Felhunter by 9%.",
            "Increases the maximum Mana of your Imp, Voidwalker, Succubus and Felhunter by 12%.",
            "Increases the maximum Mana of your Imp, Voidwalker, Succubus and Felhunter by 15%."
        };

        public static readonly string[] ImprovedSuccubusDescriptions = {
            "Increases the effect of your Succubus' Lash of Pain and Soothing Kiss spell by 10% and increases the duration of your Succubus' Seduction and Lesser Invisibility spells by 10%.",
            "Increases the effect of your Succubus' Lash of Pain and Soothing Kiss spell by 20% and increases the duration of your Succubus' Seduction and Lesser Invisibility spells by 20%.",
            "Increases the effect of your Succubus' Lash of Pain and Soothing Kiss spell by 30% and increases the duration of your Succubus' Seduction and Lesser Invisibility spells by 30%."
        };

        public static readonly string[] FelDominationDescriptions = {
            "You next Imp, Voidwalker, Succubus or Felhunter Summon spell has its casting time reduced by 5.5 sec and its Mana cost reduced by 50%."
        };

        public static readonly string[] FelStaminaDescriptions = {
            "Increases the maximum Health of you Imp, Voidwalker, Succubus and Felhunter by 3%.",
            "Increases the maximum Health of you Imp, Voidwalker, Succubus and Felhunter by 6%.",
            "Increases the maximum Health of you Imp, Voidwalker, Succubus and Felhunter by 9%.",
            "Increases the maximum Health of you Imp, Voidwalker, Succubus and Felhunter by 12%.",
            "Increases the maximum Health of you Imp, Voidwalker, Succubus and Felhunter by 15%."
        };

        public static readonly string[] MasterSummonerDescriptions = {
            "Reduces the casting time of your Imp, Voidwalker, Succubus and Felhunter Summoning spell by 2 sec and Mana cost by 20%.",
            "Reduces the casting time of your Imp, Voidwalker, Succubus and Felhunter Summoning spell by 4 sec and Mana cost by 40%."
        };

        public static readonly string[] UnholyPowerDescriptions = {
            "Increases the damage done by your Voidwalker, Succubus and Felhunter's melee attacks by 4%.",
            "Increases the damage done by your Voidwalker, Succubus and Felhunter's melee attacks by 8%.",
            "Increases the damage done by your Voidwalker, Succubus and Felhunter's melee attacks by 12%.",
            "Increases the damage done by your Voidwalker, Succubus and Felhunter's melee attacks by 16%.",
            "Increases the damage done by your Voidwalker, Succubus and Felhunter's melee attacks by 20%."
        };

        public static readonly string[] ImprovedEnslaveDemonDescriptions = {
            "Reduces the Attack Speed and Casting Speed penalty of your Enslave Demon spell by 2% and reduces the resist chance by 2%.",
            "Reduces the Attack Speed and Casting Speed penalty of your Enslave Demon spell by 2% and reduces the resist chance by 4%.",
            "Reduces the Attack Speed and Casting Speed penalty of your Enslave Demon spell by 2% and reduces the resist chance by 6%.",
            "Reduces the Attack Speed and Casting Speed penalty of your Enslave Demon spell by 2% and reduces the resist chance by 8%.",
            "Reduces the Attack Speed and Casting Speed penalty of your Enslave Demon spell by 2% and reduces the resist chance by 10%."
        };

        public static readonly string[] DemonicSacrificeDescriptions = {
            "When activated, sacrifices your summoned demon to grant you an effect that lasts 30 min. The effect is canceled if any Demon is summoned. Imp: Increases your Fire damage by 15%. Voidwalker: Restores 3% of total Health every 4 sec. Succubus: Increases your Shadow damage by 15%. Felhunter: Restores 2% of total Mana every 4 sec."
        };

        public static readonly string[] ImprovedFirestoneDescriptions = {
            "Increases the Fire damage from Firestones and the Firestone effect by 15%.",
            "Increases the Fire damage from Firestones and the Firestone effect by 30%."
        };

        public static readonly string[] MasterDemonologistDescriptions = {
            "Grants both the Warlock and the summoned demon and effect as long as that demon is active. Imp: Reduces thread caused by 4%. Voidwalker: Reduces physical damage taken 2%. Succubus: Increases all damage caused by 2%. Felhunter: Increases all resistances by .2 per level.",
            "Grants both the Warlock and the summoned demon and effect as long as that demon is active. Imp: Reduces thread caused by 8%. Voidwalker: Reduces physical damage taken 4%. Succubus: Increases all damage caused by 4%. Felhunter: Increases all resistances by .4 per level.",
            "Grants both the Warlock and the summoned demon and effect as long as that demon is active. Imp: Reduces thread caused by 12%. Voidwalker: Reduces physical damage taken 6%. Succubus: Increases all damage caused by 6%. Felhunter: Increases all resistances by .6 per level.",
            "Grants both the Warlock and the summoned demon and effect as long as that demon is active. Imp: Reduces thread caused by 16%. Voidwalker: Reduces physical damage taken 8%. Succubus: Increases all damage caused by 8%. Felhunter: Increases all resistances by .8 per level.",
            "Grants both the Warlock and the summoned demon and effect as long as that demon is active. Imp: Reduces thread caused by 20%. Voidwalker: Reduces physical damage taken 10%. Succubus: Increases all damage caused by 10%. Felhunter: Increases all resistances by 1 per level."
        };

        public static readonly string[] SoulLinkDescriptions = {
            "When active, 30% of all damage taken by the caster is taken by your Imp, Voidwalker, Succubus or Felhunter demon instead. In addition, both the demon and master will inflict 3% more damage. Lasts as long as the demon is active."
        };

        public static readonly string[] ImprovedSpellstoneDescriptions = {
            "Increases the amount of damage absorbed by your Spellstone by 15%.",
            "Increases the amount of damage absorbed by your Spellstone by 30%."
        };

        public static string GetAbilityDesc(int abilityPosition, int abilityPoints)
        {
            if (abilityPosition == 0)
            {
                if (abilityPoints < ImprovedHealthstoneDescriptions.Length)
                {
                    return ImprovedHealthstoneDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedHealthstoneDescriptions[ImprovedHealthstoneDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 1)
            {
                if (abilityPoints < ImprovedImpDescriptions.Length)
                {
                    return ImprovedImpDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedImpDescriptions[ImprovedImpDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 2)
            {
                if (abilityPoints < DemonicEmbraceDescriptions.Length)
                {
                    return DemonicEmbraceDescriptions[abilityPoints];
                }
                else
                {
                    return DemonicEmbraceDescriptions[DemonicEmbraceDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 3)
            {
                if (abilityPoints < ImprovedHealthFunnelDescriptions.Length)
                {
                    return ImprovedHealthFunnelDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedHealthFunnelDescriptions[ImprovedHealthFunnelDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 4)
            {
                if (abilityPoints < ImprovedVoidwalkerDescriptions.Length)
                {
                    return ImprovedVoidwalkerDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedVoidwalkerDescriptions[ImprovedVoidwalkerDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 5)
            {
                if (abilityPoints < FelIntellectDescriptions.Length)
                {
                    return FelIntellectDescriptions[abilityPoints];
                }
                else
                {
                    return FelIntellectDescriptions[FelIntellectDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 6)
            {
                if (abilityPoints < ImprovedSuccubusDescriptions.Length)
                {
                    return ImprovedSuccubusDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedSuccubusDescriptions[ImprovedSuccubusDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 7)
            {
                if (abilityPoints < FelDominationDescriptions.Length)
                {
                    return FelDominationDescriptions[abilityPoints];
                }
                else
                {
                    return FelDominationDescriptions[FelDominationDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 8)
            {
                if (abilityPoints < FelStaminaDescriptions.Length)
                {
                    return FelStaminaDescriptions[abilityPoints];
                }
                else
                {
                    return FelStaminaDescriptions[FelStaminaDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 9)
            {
                if (abilityPoints < MasterSummonerDescriptions.Length)
                {
                    return MasterSummonerDescriptions[abilityPoints];
                }
                else
                {
                    return MasterSummonerDescriptions[MasterSummonerDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 10)
            {
                if (abilityPoints < UnholyPowerDescriptions.Length)
                {
                    return UnholyPowerDescriptions[abilityPoints];
                }
                else
                {
                    return UnholyPowerDescriptions[UnholyPowerDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 11)
            {
                if (abilityPoints < ImprovedEnslaveDemonDescriptions.Length)
                {
                    return ImprovedEnslaveDemonDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedEnslaveDemonDescriptions[ImprovedEnslaveDemonDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 12)
            {
                if (abilityPoints < DemonicSacrificeDescriptions.Length)
                {
                    return DemonicSacrificeDescriptions[abilityPoints];
                }
                else
                {
                    return DemonicSacrificeDescriptions[DemonicSacrificeDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 13)
            {
                if (abilityPoints < ImprovedFirestoneDescriptions.Length)
                {
                    return ImprovedFirestoneDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedFirestoneDescriptions[ImprovedFirestoneDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 14)
            {
                if (abilityPoints < MasterDemonologistDescriptions.Length)
                {
                    return MasterDemonologistDescriptions[abilityPoints];
                }
                else
                {
                    return MasterDemonologistDescriptions[MasterDemonologistDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 14)
            {
                if (abilityPoints < SoulLinkDescriptions.Length)
                {
                    return SoulLinkDescriptions[abilityPoints];
                }
                else
                {
                    return SoulLinkDescriptions[SoulLinkDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 15)
            {
                if (abilityPoints < ImprovedSpellstoneDescriptions.Length)
                {
                    return ImprovedSpellstoneDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedSpellstoneDescriptions[ImprovedSpellstoneDescriptions.Length - 1];
                }
            }
            else
            {
                return "No Description available";
            }
        }

    }

    public static class Destruction
    {
        public static readonly string[] AbilityNames = {
            "Improved Shadow Bolt",
            "Cataclysm",
            "Bane",
            "Aftermath",
            "Improved Firebolt",
            "Improved Lash of Pain",
            "Devastation",
            "Shadowburn",
            "Intensity",
            "Destructive Reach",
            "Improved Searing Pain",
            "Pyroclasm",
            "Improved Immolate",
            "Ruin",
            "Emberstorm",
            "Conflagrate"
        };

        public static readonly string[] ImprovedShadowBoltDescriptions = {
            "Your Shadow Bolt critical strikes increase Shadow damage dealt to the target by 4% until 4 non-periodic damage sources are applied.  Effect lasts a maximum of 12 sec.",
            "Your Shadow Bolt critical strikes increase Shadow damage dealt to the target by 8% until 4 non-periodic damage sources are applied.  Effect lasts a maximum of 12 sec.",
            "Your Shadow Bolt critical strikes increase Shadow damage dealt to the target by 12% until 4 non-periodic damage sources are applied.  Effect lasts a maximum of 12 sec.",
            "Your Shadow Bolt critical strikes increase Shadow damage dealt to the target by 16% until 4 non-periodic damage sources are applied.  Effect lasts a maximum of 12 sec.",
            "Your Shadow Bolt critical strikes increase Shadow damage dealt to the target by 20% until 4 non-periodic damage sources are applied.  Effect lasts a maximum of 12 sec."
        };

        public static readonly string[] CataclysmDescriptions = {
            "Reduces the Mana cost of your Destruction spells by 1%.",
            "Reduces the Mana cost of your Destruction spells by 2%.",
            "Reduces the Mana cost of your Destruction spells by 3%.",
            "Reduces the Mana cost of your Destruction spells by 4%.",
            "Reduces the Mana cost of your Destruction spells by 5%."
        };

        public static readonly string[] BaneDescriptions = {
            "Reduces the casting time of your Shadow Bolt and Immolate spells by 0.1 sec and your Soul Fire spell by 0.4 sec.",
            "Reduces the casting time of your Shadow Bolt and Immolate spells by 0.2 sec and your Soul Fire spell by 0.8 sec.",
            "Reduces the casting time of your Shadow Bolt and Immolate spells by 0.3 sec and your Soul Fire spell by 1.2 sec.",
            "Reduces the casting time of your Shadow Bolt and Immolate spells by 0.4 sec and your Soul Fire spell by 1.6 sec.",
            "Reduces the casting time of your Shadow Bolt and Immolate spells by 0.5 sec and your Soul Fire spell by 2 sec."
        };

        public static readonly string[] AftermathDescriptions = {
            "Gives your Destruction spells a 2% chance to daze the target for 5 sec.",
            "Gives your Destruction spells a 4% chance to daze the target for 5 sec.",
            "Gives your Destruction spells a 6% chance to daze the target for 5 sec.",
            "Gives your Destruction spells a 8% chance to daze the target for 5 sec.",
            "Gives your Destruction spells a 10% chance to daze the target for 5 sec."
        };

        public static readonly string[] ImprovedFireboltDescriptions = {
            "Reduces the casting time of your Imp's Firebolt spell by 0.5 sec.",
            "Reduces the casting time of your Imp's Firebolt spell by 1 sec."
        };

        public static readonly string[] ImprovedLashOfPainDescriptions = {
            "Reduces the cooldown of your Succubus' Lash of Pain spell by 3 sec.",
            "Reduces the cooldown of your Succubus' Lash of Pain spell by 6 sec."
        };

        public static readonly string[] DevastationDescriptions = {
            "Increases the critical strike chance of your Destruction spells by 1%.",
            "Increases the critical strike chance of your Destruction spells by 2%.",
            "Increases the critical strike chance of your Destruction spells by 3%.",
            "Increases the critical strike chance of your Destruction spells by 4%.",
            "Increases the critical strike chance of your Destruction spells by 5%."
        };

        public static readonly string[] ShadowburnDescriptions = {
            "Instantly blasts the target for 87 to 100 Shadow damage. If the target dies within 5 sec of Shadowburn, and yields experience or honor, the caster gains a Soul Shard."
        };

        public static readonly string[] IntensityDescriptions = {
            "Gives you a 35% chance to resist interruption caused by damage while channeling the Rain of Fire, Hellfire or Soul Fire spell.",
            "Gives you a 70% chance to resist interruption caused by damage while channeling the Rain of Fire, Hellfire or Soul Fire spell."
        };

        public static readonly string[] DestructiveReachDescriptions = {
            "Increases the range of your Destruction spells by 10%",
            "Increases the range of your Destruction spells by 20%"
        };

        public static readonly string[] ImprovedSearingPainDescriptions = {
            "Increases the critical strike chance of your Searing Pain spell by 2%.",
            "Increases the critical strike chance of your Searing Pain spell by 4%.",
            "Increases the critical strike chance of your Searing Pain spell by 6%.",
            "Increases the critical strike chance of your Searing Pain spell by 8%.",
            "Increases the critical strike chance of your Searing Pain spell by 10%."
        };

        public static readonly string[] PyroclasmDescriptions = {
            "Gives your Rain of Fire, Hellfire and Soul Fire spells a 13% chance to stun the target for 3 sec.",
            "Gives your Rain of Fire, Hellfire and Soul Fire spells a 26% chance to stun the target for 3 sec."
        };

        public static readonly string[] ImprovedImmolateDescriptions = {
            "Increases the initial damage of your Immolate spell by 5%",
            "Increases the initial damage of your Immolate spell by 10%",
            "Increases the initial damage of your Immolate spell by 15%",
            "Increases the initial damage of your Immolate spell by 20%",
            "Increases the initial damage of your Immolate spell by 25%"
        };

        public static readonly string[] RuinDescriptions = {
            "Increases the critical strike damage bonus of your Destruction spells by 100%."
        };

        public static readonly string[] EmberstormDescriptions = {
            "Increases the damage done by your Fire spells by 2%.",
            "Increases the damage done by your Fire spells by 4%.",
            "Increases the damage done by your Fire spells by 6%.",
            "Increases the damage done by your Fire spells by 8%.",
            "Increases the damage done by your Fire spells by 10%."
        };

        public static readonly string[] ConflagrateDescriptions = {
            "Ignites a target that is already afflicted by Immolate, dealing 240 to 307 Fire damage and consuming the Immolate spell."
        };

        public static string GetAbilityDesc(int abilityPosition, int abilityPoints)
        {
            if (abilityPosition == 0)
            {
                if (abilityPoints < ImprovedShadowBoltDescriptions.Length)
                {
                    return ImprovedShadowBoltDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedShadowBoltDescriptions[ImprovedShadowBoltDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 1)
            {
                if (abilityPoints < CataclysmDescriptions.Length)
                {
                    return CataclysmDescriptions[abilityPoints];
                }
                else
                {
                    return CataclysmDescriptions[CataclysmDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 2)
            {
                if (abilityPoints < BaneDescriptions.Length)
                {
                    return BaneDescriptions[abilityPoints];
                }
                else
                {
                    return BaneDescriptions[BaneDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 3)
            {
                if (abilityPoints < AftermathDescriptions.Length)
                {
                    return AftermathDescriptions[abilityPoints];
                }
                else
                {
                    return AftermathDescriptions[AftermathDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 4)
            {
                if (abilityPoints < ImprovedFireboltDescriptions.Length)
                {
                    return ImprovedFireboltDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedFireboltDescriptions[ImprovedFireboltDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 5)
            {
                if (abilityPoints < ImprovedLashOfPainDescriptions.Length)
                {
                    return ImprovedLashOfPainDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedLashOfPainDescriptions[ImprovedLashOfPainDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 6)
            {
                if (abilityPoints < DevastationDescriptions.Length)
                {
                    return DevastationDescriptions[abilityPoints];
                }
                else
                {
                    return DevastationDescriptions[DevastationDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 7)
            {
                if (abilityPoints < ShadowburnDescriptions.Length)
                {
                    return ShadowburnDescriptions[abilityPoints];
                }
                else
                {
                    return ShadowburnDescriptions[ShadowburnDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 8)
            {
                if (abilityPoints < IntensityDescriptions.Length)
                {
                    return IntensityDescriptions[abilityPoints];
                }
                else
                {
                    return IntensityDescriptions[IntensityDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 9)
            {
                if (abilityPoints < DestructiveReachDescriptions.Length)
                {
                    return DestructiveReachDescriptions[abilityPoints];
                }
                else
                {
                    return DestructiveReachDescriptions[DestructiveReachDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 10)
            {
                if (abilityPoints < ImprovedSearingPainDescriptions.Length)
                {
                    return ImprovedSearingPainDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedSearingPainDescriptions[ImprovedSearingPainDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 11)
            {
                if (abilityPoints < PyroclasmDescriptions.Length)
                {
                    return PyroclasmDescriptions[abilityPoints];
                }
                else
                {
                    return PyroclasmDescriptions[PyroclasmDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 12)
            {
                if (abilityPoints < ImprovedImmolateDescriptions.Length)
                {
                    return ImprovedImmolateDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedImmolateDescriptions[ImprovedImmolateDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 13)
            {
                if (abilityPoints < RuinDescriptions.Length)
                {
                    return RuinDescriptions[abilityPoints];
                }
                else
                {
                    return RuinDescriptions[RuinDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 14)
            {
                if (abilityPoints < EmberstormDescriptions.Length)
                {
                    return EmberstormDescriptions[abilityPoints];
                }
                else
                {
                    return EmberstormDescriptions[EmberstormDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 15)
            {
                if (abilityPoints < ConflagrateDescriptions.Length)
                {
                    return ConflagrateDescriptions[abilityPoints];
                }
                else
                {
                    return ConflagrateDescriptions[ConflagrateDescriptions.Length - 1];
                }
            }
            else
            {
                return "No Description available";
            }
        }
    }

    public static class Elemental
    {
        public static readonly string[] AbilityNames = {
            "Convection",
            "Concussion",
            "Earth's Grasp",
            "Elemental Warding",
            "Call of Flame",
            "Elemental Focus",
            "Reverberation",
            "Call of Thunder",
            "Improved Fire Totems",
            "Eye of the Storm",
            "Elemental Devastation",
            "Storm Reach",
            "Elemental Fury",
            "Lightning Mastery",
            "Elemental Mastery"
        };

        public static readonly string[] ConvectionDescriptions = {
            "Reduces the mana cost of your Shock, Lightning Bolt and Chain Lightning spells by 2%.",
            "Reduces the mana cost of your Shock, Lightning Bolt and Chain Lightning spells by 4%.",
            "Reduces the mana cost of your Shock, Lightning Bolt and Chain Lightning spells by 6%.",
            "Reduces the mana cost of your Shock, Lightning Bolt and Chain Lightning spells by 8%.",
            "Reduces the mana cost of your Shock, Lightning Bolt and Chain Lightning spells by 10%."
        };

        public static readonly string[] ConcussionDescriptions = {
            "Increases the damage done Shock, Lightning Bolt and Chain Lightning spells by 1%.",
            "Increases the damage done Shock, Lightning Bolt and Chain Lightning spells by 2%.",
            "Increases the damage done Shock, Lightning Bolt and Chain Lightning spells by 3%.",
            "Increases the damage done Shock, Lightning Bolt and Chain Lightning spells by 4%.",
            "Increases the damage done Shock, Lightning Bolt and Chain Lightning spells by 5%."
        };

        public static readonly string[] EarthsGraspDescriptions = {
            "Increases the health of your Stoneclaw Totem by 25% and the radius of your Earthbinding Totem by 10%.",
            "Increases the health of your Stoneclaw Totem by 50% and the radius of your Earthbinding Totem by 20%."
        };

        public static readonly string[] ElementalWardingDescriptions = {
            "Reduces damage taken from Fire, Frost and Nature effects by 4%.",
            "Reduces damage taken from Fire, Frost and Nature effects by 7%.",
            "Reduces damage taken from Fire, Frost and Nature effects by 10%."
        };

        public static readonly string[] CallOfFlameDescriptions = {
            "Increases the damage done by your Fire Totems by 5%.",
            "Increases the damage done by your Fire Totems by 10%.",
            "Increases the damage done by your Fire Totems by 15%."
        };

        public static readonly string[] ElementalFocusDescriptions = {
            "Gives you a 10% chance to enter Clearcasting state after casting any Fire, Frost or Nature damage spell. The Clearcasting state reduces the mana cost of your next damage spell by 100%."
        };

        public static readonly string[] ReverberationDescriptions = {
            "Reduces the cooldown of your Shock spells by 0.2 sec.",
            "Reduces the cooldown of your Shock spells by 0.4 sec.",
            "Reduces the cooldown of your Shock spells by 0.6 sec.",
            "Reduces the cooldown of your Shock spells by 0.8 sec.",
            "Reduces the cooldown of your Shock spells by 1 sec."
        };

        public static readonly string[] CallOfThunderDescriptions = {
            "Increase the critical strike chance of your Lightning Bolt and Chain Lightning spells by additinal 1%.",
            "Increase the critical strike chance of your Lightning Bolt and Chain Lightning spells by additinal 2%.",
            "Increase the critical strike chance of your Lightning Bolt and Chain Lightning spells by additinal 3%.",
            "Increase the critical strike chance of your Lightning Bolt and Chain Lightning spells by additinal 4%.",
            "Increase the critical strike chance of your Lightning Bolt and Chain Lightning spells by additinal 5%."
        };

        public static readonly string[] ImprovedFireTotemsDescriptions = {
           "Reduces the delay before your Fire Nova Totem activates by 1 sec. and decreases the threat generated by your Magma Totem by 25%.",
           "Reduces the delay before your Fire Nova Totem activates by 2 sec. and decreases the threat generated by your Magma Totem by 50%."
        };

        public static readonly string[] EyeOfTheStormDescriptions = {
          "Gives you a 33% chance to gain the Focused Casting effect that lasts for 6 sec after being the victim of a melee or ranged critical strike. The Focused Casting effect prevents you from losing casting time when taking damage.",
          "Gives you a 66% chance to gain the Focused Casting effect that lasts for 6 sec after being the victim of a melee or ranged critical strike. The Focused Casting effect prevents you from losing casting time when taking damage.",
          "Gives you a 100% chance to gain the Focused Casting effect that lasts for 6 sec after being the victim of a melee or ranged critical strike. The Focused Casting effect prevents you from losing casting time when taking damage."
        };

        public static readonly string[] ElementalDevastationDescriptions = {
           "You offensive spell crits will increase your chance to get a critical strike with melee attack by 3% for 10 sec.",
           "You offensive spell crits will increase your chance to get a critical strike with melee attack by 6% for 10 sec.",
           "You offensive spell crits will increase your chance to get a critical strike with melee attack by 9% for 10 sec."
        };

        public static readonly string[] StormReachDescriptions = {
            "Increases the range of your Lightning Bold and Chain Lightning spells by 3 yards.",
            "Increases the range of your Lightning Bold and Chain Lightning spells by 6 yards."
        };

        public static readonly string[] ElementalFuryDescriptions = {
            "Increases the critical strike damage bonus of your Searing, Magma and Fire Totems and your Fire, Frost and Nature spells by 100%."
        };

        public static readonly string[] LightningMasteryDescriptions = {
            "Reduces the cast time of your Lightning Bold and Chain Lightning spells by 0.2 sec.",
            "Reduces the cast time of your Lightning Bold and Chain Lightning spells by 0.4 sec.",
            "Reduces the cast time of your Lightning Bold and Chain Lightning spells by 0.6 sec.",
            "Reduces the cast time of your Lightning Bold and Chain Lightning spells by 0.8 sec.",
            "Reduces the cast time of your Lightning Bold and Chain Lightning spells by 1 sec."
        };

        public static readonly string[] ElementalMasteryDescriptions = {
            "When activated, this spell gives your next Fire, Frost or Nature damage spell a 100% critical strike chance and reduces the mana cost by 100%."
        };

        public static string GetAbilityDesc(int abilityPosition, int abilityPoints)
        {
            if (abilityPosition == 0)
            {
                if (abilityPoints < ConvectionDescriptions.Length)
                {
                    return ConvectionDescriptions[abilityPoints];
                }
                else
                {
                    return ConvectionDescriptions[ConvectionDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 1)
            {
                if (abilityPoints < ConcussionDescriptions.Length)
                {
                    return ConcussionDescriptions[abilityPoints];
                }
                else
                {
                    return ConcussionDescriptions[ConcussionDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 2)
            {
                if (abilityPoints < EarthsGraspDescriptions.Length)
                {
                    return EarthsGraspDescriptions[abilityPoints];
                }
                else
                {
                    return EarthsGraspDescriptions[EarthsGraspDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 3)
            {
                if (abilityPoints < ElementalWardingDescriptions.Length)
                {
                    return ElementalWardingDescriptions[abilityPoints];
                }
                else
                {
                    return ElementalWardingDescriptions[ElementalWardingDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 4)
            {
                if (abilityPoints < CallOfFlameDescriptions.Length)
                {
                    return CallOfFlameDescriptions[abilityPoints];
                }
                else
                {
                    return CallOfFlameDescriptions[CallOfFlameDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 5)
            {
                if (abilityPoints < ElementalFocusDescriptions.Length)
                {
                    return ElementalFocusDescriptions[abilityPoints];
                }
                else
                {
                    return ElementalFocusDescriptions[ElementalFocusDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 6)
            {
                if (abilityPoints < ReverberationDescriptions.Length)
                {
                    return ReverberationDescriptions[abilityPoints];
                }
                else
                {
                    return ReverberationDescriptions[ReverberationDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 7)
            {
                if (abilityPoints < CallOfThunderDescriptions.Length)
                {
                    return CallOfThunderDescriptions[abilityPoints];
                }
                else
                {
                    return CallOfThunderDescriptions[CallOfThunderDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 8)
            {
                if (abilityPoints < ImprovedFireTotemsDescriptions.Length)
                {
                    return ImprovedFireTotemsDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedFireTotemsDescriptions[ImprovedFireTotemsDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 9)
            {
                if (abilityPoints < EyeOfTheStormDescriptions.Length)
                {
                    return EyeOfTheStormDescriptions[abilityPoints];
                }
                else
                {
                    return EyeOfTheStormDescriptions[EyeOfTheStormDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 10)
            {
                if (abilityPoints < ElementalDevastationDescriptions.Length)
                {
                    return ElementalDevastationDescriptions[abilityPoints];
                }
                else
                {
                    return ElementalDevastationDescriptions[ElementalDevastationDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 11)
            {
                if (abilityPoints < StormReachDescriptions.Length)
                {
                    return StormReachDescriptions[abilityPoints];
                }
                else
                {
                    return StormReachDescriptions[StormReachDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 12)
            {
                if (abilityPoints < ElementalFuryDescriptions.Length)
                {
                    return ElementalFuryDescriptions[abilityPoints];
                }
                else
                {
                    return ElementalFuryDescriptions[ElementalFuryDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 13)
            {
                if (abilityPoints < LightningMasteryDescriptions.Length)
                {
                    return LightningMasteryDescriptions[abilityPoints];
                }
                else
                {
                    return LightningMasteryDescriptions[LightningMasteryDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 14)
            {
                if (abilityPoints < ElementalMasteryDescriptions.Length)
                {
                    return ElementalMasteryDescriptions[abilityPoints];
                }
                else
                {
                    return ElementalMasteryDescriptions[ElementalMasteryDescriptions.Length - 1];
                }
            }
            else
            {
                return "No Description available";
            }
        }
    }

    public static class Enhancement
    {
        public static readonly string[] AbilityNames = {
            "Ancestral Knowledge",
            "Shield Specialization",
            "Guardian Totems",
            "Thundering Strikes",
            "Improved Ghost Wolf",
            "Improved Lightning Shield",
            "Enhancing Totems",
            "Two-Handed Axes and Maces",
            "Anticipation",
            "Flurry",
            "Toughness",
            "Improved Weapon Totems",
            "Elemental Weapons",
            "Parry",
            "Weapon Mastery",
            "Stormstrike"
        };

        public static readonly string[] AncestralKnowledgeDescriptions = {
            "Increases your maximum Mana by 1%.",
            "Increases your maximum Mana by 2%.",
            "Increases your maximum Mana by 3%.",
            "Increases your maximum Mana by 4%.",
            "Increases your maximum Mana by 5%."
        };

        public static readonly string[] ShieldSpecializationDescriptions = {
            "Increases your chance to block attacks with a shield by 1% and increases the amount blocked by 5%.",
            "Increases your chance to block attacks with a shield by 2% and increases the amount blocked by 10%.",
            "Increases your chance to block attacks with a shield by 3% and increases the amount blocked by 15%.",
            "Increases your chance to block attacks with a shield by 4% and increases the amount blocked by 20%.",
            "Increases your chance to block attacks with a shield by 5% and increases the amount blocked by 25%."
        };

        public static readonly string[] GuardianTotemsDescriptions = {
            "Increases the amount of damage reduced by your Stoneskin Totem and Windwall Totem by 10% and reduces the cooldown of your Grounding Totem by 1 sec.",
            "Increases the amount of damage reduced by your Stoneskin Totem and Windwall Totem by 20% and reduces the cooldown of your Grounding Totem by 2 sec."
        };

        public static readonly string[] ThunderingStrikesDescriptions = {
            "Improves your chance to get a critical strike with your weapon attacks by 1%.",
            "Improves your chance to get a critical strike with your weapon attacks by 2%.",
            "Improves your chance to get a critical strike with your weapon attacks by 3%.",
            "Improves your chance to get a critical strike with your weapon attacks by 4%.",
            "Improves your chance to get a critical strike with your weapon attacks by 5%."
        };

        public static readonly string[] ImprovedGhostWolfDescriptions = {
            "Reduces the cast time of your Ghost Wolf spell by 1 sec.",
            "Reduces the cast time of your Ghost Wolf spell by 2 sec."
        };

        public static readonly string[] ImprovedLightningShieldDescriptions = {
            "Increases the damage done by your Lightning Shield orbs by 5%.",
            "Increases the damage done by your Lightning Shield orbs by 10%.",
            "Increases the damage done by your Lightning Shield orbs by 15%."
        };

        public static readonly string[] EnhancingTotemsDescriptions = {
            "Increases the effect of your Strenght of Earth and Grace of Air Totems by 8%.",
            "Increases the effect of your Strenght of Earth and Grace of Air Totems by 15%."
        };

        public static readonly string[] TwoHandedAxesAndMacesDescriptions = {
            "Allows you to use Two-Handed Axes and Two-Handed Maces."
        };

        public static readonly string[] AnticipationDescriptions = {
            "Increases your chance to dodge by additinal 1%.",
            "Increases your chance to dodge by additinal 2%.",
            "Increases your chance to dodge by additinal 3%.",
            "Increases your chance to dodge by additinal 4%.",
            "Increases your chance to dodge by additinal 5%."
        };

        public static readonly string[] FlurryDescriptions = {
            "Increases your attack speed by 10% for your next 3 swings after dealing a critical strike.",
            "Increases your attack speed by 15% for your next 3 swings after dealing a critical strike.",
            "Increases your attack speed by 20% for your next 3 swings after dealing a critical strike.",
            "Increases your attack speed by 25% for your next 3 swings after dealing a critical strike.",
            "Increases your attack speed by 30% for your next 3 swings after dealing a critical strike."
        };

        public static readonly string[] ToughnessDescriptions = {
            "Increases your armor value from items by 2%.",
            "Increases your armor value from items by 4%.",
            "Increases your armor value from items by 6%.",
            "Increases your armor value from items by 8%.",
            "Increases your armor value from items by 10%."
        };

        public static readonly string[] ImprovedWeaponTotemsDescriptions = {
            "Increases the melee attack power bonus of your Windfury Totem by 15% and increases the damage cause by your Flametongue Totem by 6%.",
            "Increases the melee attack power bonus of your Windfury Totem by 30% and increases the damage cause by your Flametongue Totem by 12%."
        };

        public static readonly string[] ElementalWeaponsDescriptions = {
            "Increases the melee attack power bonus of your Rockbiter Weapon by 7%, your Windfury Weapon effect by 13% and increases the damage caused by your Flametongue Weapon and Frostbrand Weapon by 5%.",
            "Increases the melee attack power bonus of your Rockbiter Weapon by 14%, your Windfury Weapon effect by 27% and increases the damage caused by your Flametongue Weapon and Frostbrand Weapon by 10%.",
            "Increases the melee attack power bonus of your Rockbiter Weapon by 20%, your Windfury Weapon effect by 40% and increases the damage caused by your Flametongue Weapon and Frostbrand Weapon by 15%."
        };

        public static readonly string[] ParryDescriptions = {
            "Give a chance to parry enemy melee attacks."
        };

        public static readonly string[] WeaponMasteryDescriptions = {
            "Increases the damge you deal with all weapons by 2%.",
            "Increases the damge you deal with all weapons by 4%.",
            "Increases the damge you deal with all weapons by 6%.",
            "Increases the damge you deal with all weapons by 8%.",
            "Increases the damge you deal with all weapons by 10%."
        };

        public static readonly string[] StormstrikeDescriptions = {
            "Gives you an extra attack. In addition, the next 2 sources of Nature damage dealt to the target are increased by 20%. Lasts 12 sec."
        };

        public static string GetAbilityDesc(int abilityPosition, int abilityPoints)
        {
            if (abilityPosition == 0)
            {
                if (abilityPoints < AncestralKnowledgeDescriptions.Length)
                {
                    return AncestralKnowledgeDescriptions[abilityPoints];
                }
                else
                {
                    return AncestralKnowledgeDescriptions[AncestralKnowledgeDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 1)
            {
                if (abilityPoints < ShieldSpecializationDescriptions.Length)
                {
                    return ShieldSpecializationDescriptions[abilityPoints];
                }
                else
                {
                    return ShieldSpecializationDescriptions[ShieldSpecializationDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 2)
            {
                if (abilityPoints < GuardianTotemsDescriptions.Length)
                {
                    return GuardianTotemsDescriptions[abilityPoints];
                }
                else
                {
                    return GuardianTotemsDescriptions[GuardianTotemsDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 3)
            {
                if (abilityPoints < ThunderingStrikesDescriptions.Length)
                {
                    return ThunderingStrikesDescriptions[abilityPoints];
                }
                else
                {
                    return ThunderingStrikesDescriptions[ThunderingStrikesDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 4)
            {
                if (abilityPoints < ImprovedGhostWolfDescriptions.Length)
                {
                    return ImprovedGhostWolfDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedGhostWolfDescriptions[ImprovedGhostWolfDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 5)
            {
                if (abilityPoints < ImprovedLightningShieldDescriptions.Length)
                {
                    return ImprovedLightningShieldDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedLightningShieldDescriptions[ImprovedLightningShieldDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 6)
            {
                if (abilityPoints < EnhancingTotemsDescriptions.Length)
                {
                    return EnhancingTotemsDescriptions[abilityPoints];
                }
                else
                {
                    return EnhancingTotemsDescriptions[EnhancingTotemsDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 7)
            {
                if (abilityPoints < TwoHandedAxesAndMacesDescriptions.Length)
                {
                    return TwoHandedAxesAndMacesDescriptions[abilityPoints];
                }
                else
                {
                    return TwoHandedAxesAndMacesDescriptions[TwoHandedAxesAndMacesDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 8)
            {
                if (abilityPoints < AnticipationDescriptions.Length)
                {
                    return AnticipationDescriptions[abilityPoints];
                }
                else
                {
                    return AnticipationDescriptions[AnticipationDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 9)
            {
                if (abilityPoints < FlurryDescriptions.Length)
                {
                    return FlurryDescriptions[abilityPoints];
                }
                else
                {
                    return FlurryDescriptions[FlurryDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 10)
            {
                if (abilityPoints < ToughnessDescriptions.Length)
                {
                    return ToughnessDescriptions[abilityPoints];
                }
                else
                {
                    return ToughnessDescriptions[ToughnessDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 11)
            {
                if (abilityPoints < ImprovedWeaponTotemsDescriptions.Length)
                {
                    return ImprovedWeaponTotemsDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedWeaponTotemsDescriptions[ImprovedWeaponTotemsDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 12)
            {
                if (abilityPoints < ElementalWeaponsDescriptions.Length)
                {
                    return ElementalWeaponsDescriptions[abilityPoints];
                }
                else
                {
                    return ElementalWeaponsDescriptions[ElementalWeaponsDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 13)
            {
                if (abilityPoints < ParryDescriptions.Length)
                {
                    return ParryDescriptions[abilityPoints];
                }
                else
                {
                    return ParryDescriptions[ParryDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 14)
            {
                if (abilityPoints < WeaponMasteryDescriptions.Length)
                {
                    return WeaponMasteryDescriptions[abilityPoints];
                }
                else
                {
                    return WeaponMasteryDescriptions[WeaponMasteryDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 15)
            {
                if (abilityPoints < StormstrikeDescriptions.Length)
                {
                    return StormstrikeDescriptions[abilityPoints];
                }
                else
                {
                    return StormstrikeDescriptions[StormstrikeDescriptions.Length - 1];
                }
            }
            else
            {
                return "No Description available";
            }
        }
    }

    public static class Restoration
    {
        public static readonly string[] AbilityNames = {
            "Improved Healing Wave",
            "Tidal Focus",
            "Improved Reincarnation",
            "Ancestral Healing",
            "Totemic Focus",
            "Nature's Guidance",
            "Healing Focus",
            "Totemic Mastery",
            "Healing Grace",
            "Restorative Totems",
            "Tidal Mastery",
            "Healing Way",
            "Nature's Swiftness",
            "Purification",
            "Mana Tide Totem"
        };

        public static readonly string[] ImprovedHealingWaveDescriptions = {
            "Reduces the casting time of your Healing Wave spell by 0.1 sec.",
            "Reduces the casting time of your Healing Wave spell by 0.2 sec.",
            "Reduces the casting time of your Healing Wave spell by 0.3 sec.",
            "Reduces the casting time of your Healing Wave spell by 0.4 sec.",
            "Reduces the casting time of your Healing Wave spell by 0.5 sec."
        };

        public static readonly string[] TidalFocusDescriptions = {
            "Reduces the Mana costs of your healing spells by 1%.",
            "Reduces the Mana costs of your healing spells by 2%.",
            "Reduces the Mana costs of your healing spells by 3%.",
            "Reduces the Mana costs of your healing spells by 4%.",
            "Reduces the Mana costs of your healing spells by 5%."
        };

        public static readonly string[] ImprovedReincarnationDescriptions = {
            "Reduces the cooldown of your Reincarnation spell by 10 min and increases the amount of health and mana you reincarnate with by an additional 10%.",
            "Reduces the cooldown of your Reincarnation spell by 20 min and increases the amount of health and mana you reincarnate with by an additional 20%."
        };

        public static readonly string[] AncestralHealingDescriptions = {
            "Increases your target's armor value by 8% for 15 sec after getting a critical effect from one of your healing spells.",
            "Increases your target's armor value by 16% for 15 sec after getting a critical effect from one of your healing spells.",
            "Increases your target's armor value by 25% for 15 sec after getting a critical effect from one of your healing spells."
        };

        public static readonly string[] TotemicFocusDescriptions = {
            "Reduces the Mana cost of your totems by 5%.",
            "Reduces the Mana cost of your totems by 10%.",
            "Reduces the Mana cost of your totems by 15%.",
            "Reduces the Mana cost of your totems by 20%.",
            "Reduces the Mana cost of your totems by 25%."
        };

        public static readonly string[] NaturesGuidanceDescriptions = {
            "Increases your chance to hit with melee attacks and spells by 1%.",
            "Increases your chance to hit with melee attacks and spells by 2%.",
            "Increases your chance to hit with melee attacks and spells by 3%."
        };

        public static readonly string[] HealingFocusDescriptions = {
            "Gives you a 14% chance to avoid interruption caused by damage while casting any healing spell.",
            "Gives you a 28% chance to avoid interruption caused by damage while casting any healing spell.",
            "Gives you a 42% chance to avoid interruption caused by damage while casting any healing spell.",
            "Gives you a 56% chance to avoid interruption caused by damage while casting any healing spell.",
            "Gives you a 70% chance to avoid interruption caused by damage while casting any healing spell."
        };

        public static readonly string[] TotemicMasteryDescriptions = {
            "The radius of your totems that affect friendly targets is increased to 30 yards."
        };

        public static readonly string[] HealingGraceDescriptions = {
            "Reduces the threat generated by your healing spells by 5%.",
            "Reduces the threat generated by your healing spells by 10%.",
            "Reduces the threat generated by your healing spells by 15%."
        };

        public static readonly string[] RestorativeTotemsDescriptions = {
            "Increases the effect of your Mana Spring and Healing Stream Totems by 5%.",
            "Increases the effect of your Mana Spring and Healing Stream Totems by 10%.",
            "Increases the effect of your Mana Spring and Healing Stream Totems by 15%.",
            "Increases the effect of your Mana Spring and Healing Stream Totems by 20%.",
            "Increases the effect of your Mana Spring and Healing Stream Totems by 25%."
        };

        public static readonly string[] TidalMasteryDescriptions = {
            "Increases the critical effect chance of your healing and lightning spells by 1%.",
            "Increases the critical effect chance of your healing and lightning spells by 2%.",
            "Increases the critical effect chance of your healing and lightning spells by 3%.",
            "Increases the critical effect chance of your healing and lightning spells by 4%.",
            "Increases the critical effect chance of your healing and lightning spells by 5%."
        };

        public static readonly string[] HealingWayDescriptions = {
            "Your Healing Wave spells have a 33% chance to increase the effect of subsequent Healing Wave spells on that target by 6% for 15 sec. This effect will stack up to 5 times.",
            "Your Healing Wave spells have a 66% chance to increase the effect of subsequent Healing Wave spells on that target by 6% for 15 sec. This effect will stack up to 5 times.",
            "Your Healing Wave spells have a 100% chance to increase the effect of subsequent Healing Wave spells on that target by 6% for 15 sec. This effect will stack up to 5 times.",
        };

        public static readonly string[] NaturesSwiftnessDescriptions = {
            "When activated, your next Nature spell with a casting time less than 10 sec becomes an instant cast spell."
        };

        public static readonly string[] PurificationDescriptions = {
            "Increases the effectiveness of your healing spells by 2%.",
            "Increases the effectiveness of your healing spells by 4%.",
            "Increases the effectiveness of your healing spells by 6%.",
            "Increases the effectiveness of your healing spells by 8%.",
            "Increases the effectiveness of your healing spells by 10%."
        };

        public static readonly string[] ManaTideTotemDescriptions = {
            "Summons a Mana Tide Totem with 5 at the feet of the caster for 12 sec that restores 170 mana every 3 sec to group members within 20 yards."
        };

        public static string GetAbilityDesc(int abilityPosition, int abilityPoints)
        {
            if (abilityPosition == 0)
            {
                if (abilityPoints < ImprovedHealingWaveDescriptions.Length)
                {
                    return ImprovedHealingWaveDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedHealingWaveDescriptions[ImprovedHealingWaveDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 1)
            {
                if (abilityPoints < TidalFocusDescriptions.Length)
                {
                    return TidalFocusDescriptions[abilityPoints];
                }
                else
                {
                    return TidalFocusDescriptions[TidalFocusDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 2)
            {
                if (abilityPoints < ImprovedReincarnationDescriptions.Length)
                {
                    return ImprovedReincarnationDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedReincarnationDescriptions[ImprovedReincarnationDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 3)
            {
                if (abilityPoints < AncestralHealingDescriptions.Length)
                {
                    return AncestralHealingDescriptions[abilityPoints];
                }
                else
                {
                    return AncestralHealingDescriptions[AncestralHealingDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 4)
            {
                if (abilityPoints < TotemicFocusDescriptions.Length)
                {
                    return TotemicFocusDescriptions[abilityPoints];
                }
                else
                {
                    return TotemicFocusDescriptions[TotemicFocusDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 5)
            {
                if (abilityPoints < NaturesGuidanceDescriptions.Length)
                {
                    return NaturesGuidanceDescriptions[abilityPoints];
                }
                else
                {
                    return NaturesGuidanceDescriptions[NaturesGuidanceDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 6)
            {
                if (abilityPoints < HealingFocusDescriptions.Length)
                {
                    return HealingFocusDescriptions[abilityPoints];
                }
                else
                {
                    return HealingFocusDescriptions[HealingFocusDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 7)
            {
                if (abilityPoints < TotemicMasteryDescriptions.Length)
                {
                    return TotemicMasteryDescriptions[abilityPoints];
                }
                else
                {
                    return TotemicMasteryDescriptions[TotemicMasteryDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 8)
            {
                if (abilityPoints < HealingGraceDescriptions.Length)
                {
                    return HealingGraceDescriptions[abilityPoints];
                }
                else
                {
                    return HealingGraceDescriptions[HealingGraceDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 9)
            {
                if (abilityPoints < RestorativeTotemsDescriptions.Length)
                {
                    return RestorativeTotemsDescriptions[abilityPoints];
                }
                else
                {
                    return RestorativeTotemsDescriptions[RestorativeTotemsDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 10)
            {
                if (abilityPoints < TidalMasteryDescriptions.Length)
                {
                    return TidalMasteryDescriptions[abilityPoints];
                }
                else
                {
                    return TidalMasteryDescriptions[TidalMasteryDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 11)
            {
                if (abilityPoints < HealingWayDescriptions.Length)
                {
                    return HealingWayDescriptions[abilityPoints];
                }
                else
                {
                    return HealingWayDescriptions[HealingWayDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 12)
            {
                if (abilityPoints < NaturesSwiftnessDescriptions.Length)
                {
                    return NaturesSwiftnessDescriptions[abilityPoints];
                }
                else
                {
                    return NaturesSwiftnessDescriptions[NaturesSwiftnessDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 13)
            {
                if (abilityPoints < PurificationDescriptions.Length)
                {
                    return PurificationDescriptions[abilityPoints];
                }
                else
                {
                    return PurificationDescriptions[PurificationDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 14)
            {
                if (abilityPoints < ManaTideTotemDescriptions.Length)
                {
                    return ManaTideTotemDescriptions[abilityPoints];
                }
                else
                {
                    return ManaTideTotemDescriptions[ManaTideTotemDescriptions.Length - 1];
                }
            }
            else
            {
                return "No Description available";
            }
        }
    }

    public static class Assassination
    {
        public static readonly string[] AbilityNames = {
            "Improved Eviscerate",
            "Remorseless Attacks",
            "Malice",
            "Ruthlessness",
            "Murder",
            "Improved Slice and Dice",
            "Relentless Strikes",
            "Improved Expose Armor",
            "Lethality",
            "Vile Poisons",
            "Improved Poisons",
            "Cold Blood",
            "Improved Kidney Shot",
            "Seal Fate",
            "Vigor"
        };

        public static readonly string[] ImprovedEviscerateDescriptions = {
            "Increases the damage done by your Eviscerate ability by 5%.",
            "Increases the damage done by your Eviscerate ability by 10%.",
            "Increases the damage done by your Eviscerate ability by 15%."
        };

        public static readonly string[] RemorselessAttacksDescriptions = {
            "After killing an opponent that yields experience or honor, gives you a 20% increased critical strike chance on your next Sinister Strike, Backstab, Ambush or Ghostly Strike. Lasts 20 sec.",
            "After killing an opponent that yields experience or honor, gives you a 40% increased critical strike chance on your next Sinister Strike, Backstab, Ambush or Ghostly Strike. Lasts 20 sec."
        };

        public static readonly string[] MaliceDescriptions = {
            "Increases your critical strike chance by 1%.",
            "Increases your critical strike chance by 2%.",
            "Increases your critical strike chance by 3%.",
            "Increases your critical strike chance by 4%.",
            "Increases your critical strike chance by 5%."
        };

        public static readonly string[] RuthlessnessDescriptions = {
            "Gives your finishing moves a 20% to add a combo point to your target.",
            "Gives your finishing moves a 40% to add a combo point to your target.",
            "Gives your finishing moves a 60% to add a combo point to your target."
        };

        public static readonly string[] MurderDescriptions = {
            "Increases all damage caused against Humanoid, Giant, Beast and Dragonkin targets by 1%.",
            "Increases all damage caused against Humanoid, Giant, Beast and Dragonkin targets by 2%."
        };

        public static readonly string[] ImprovedSliceAndDiceDescriptions = {
            "Increases the duration of your Slice and Dice ability by 15%.",
            "Increases the duration of your Slice and Dice ability by 30%.",
            "Increases the duration of your Slice and Dice ability by 45%."
        };

        public static readonly string[] RelentlessStrikesDescriptions = {
            "Your finishing moves have a 20% chance per combo point to restore 25 energy."
        };

        public static readonly string[] ImprovedExposeArmorDescriptions = {
            "Increases the armor reduced by your Expose Armor ability by 25%.",
            "Increases the armor reduced by your Expose Armor ability by 50%."
        };

        public static readonly string[] LethalityDescriptions = {
            "Increases the critical damage bonus of your Sinister Strike, Gouge, Backstab, Ghostly Strike and Hemorrhage abilities by 6%.",
            "Increases the critical damage bonus of your Sinister Strike, Gouge, Backstab, Ghostly Strike and Hemorrhage abilities by 12%.",
            "Increases the critical damage bonus of your Sinister Strike, Gouge, Backstab, Ghostly Strike and Hemorrhage abilities by 18%.",
            "Increases the critical damage bonus of your Sinister Strike, Gouge, Backstab, Ghostly Strike and Hemorrhage abilities by 24%.",
            "Increases the critical damage bonus of your Sinister Strike, Gouge, Backstab, Ghostly Strike and Hemorrhage abilities by 30%."
        };

        public static readonly string[] VilePoisonsDescriptions = {
            "Increases the damage dealth by your poisons by 4% and gives your poisons an additional 8% to resist dispel effects.",
            "Increases the damage dealth by your poisons by 8% and gives your poisons an additional 16% to resist dispel effects.",
            "Increases the damage dealth by your poisons by 12% and gives your poisons an additional 24% to resist dispel effects.",
            "Increases the damage dealth by your poisons by 16% and gives your poisons an additional 32% to resist dispel effects.",
            "Increases the damage dealth by your poisons by 20% and gives your poisons an additional 40% to resist dispel effects."
        };

        public static readonly string[] ImprovedPoisonsDescriptions = {
            "Increases the chance to apply poisons to your target by 2%.",
            "Increases the chance to apply poisons to your target by 4%.",
            "Increases the chance to apply poisons to your target by 6%.",
            "Increases the chance to apply poisons to your target by 8%.",
            "Increases the chance to apply poisons to your target by 10%.",
        };

        public static readonly string[] ColdBloodDescriptions = {
            "When activated, increases the critical strike chance of your next Sinister Strike, Backstab, Ambush or Eviscerate by 100%."
        };

        public static readonly string[] ImprovedKidneyShotDescriptions = {
            "While affected by your Kidney Shot ability, the target receives an additional 3% damage from all sources.",
            "While affected by your Kidney Shot ability, the target receives an additional 6% damage from all sources.",
            "While affected by your Kidney Shot ability, the target receives an additional 9% damage from all sources."
        };

        public static readonly string[] SealFateDescriptions = {
            "Your critical strikes from abilities that add combo points have a 20% chance to add an additional combo point.",
            "Your critical strikes from abilities that add combo points have a 40% chance to add an additional combo point.",
            "Your critical strikes from abilities that add combo points have a 60% chance to add an additional combo point.",
            "Your critical strikes from abilities that add combo points have a 80% chance to add an additional combo point.",
            "Your critical strikes from abilities that add combo points have a 100% chance to add an additional combo point."
        };

        public static readonly string[] VigorDescriptions = {
            "Increases your maximum Energy by 10."
        };

        public static string GetAbilityDesc(int abilityPosition, int abilityPoints)
        {
            if (abilityPosition == 0)
            {
                if (abilityPoints < ImprovedEviscerateDescriptions.Length)
                {
                    return ImprovedEviscerateDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedEviscerateDescriptions[ImprovedEviscerateDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 1)
            {
                if (abilityPoints < RemorselessAttacksDescriptions.Length)
                {
                    return RemorselessAttacksDescriptions[abilityPoints];
                }
                else
                {
                    return RemorselessAttacksDescriptions[RemorselessAttacksDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 2)
            {
                if (abilityPoints < MaliceDescriptions.Length)
                {
                    return MaliceDescriptions[abilityPoints];
                }
                else
                {
                    return MaliceDescriptions[MaliceDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 3)
            {
                if (abilityPoints < RuthlessnessDescriptions.Length)
                {
                    return RuthlessnessDescriptions[abilityPoints];
                }
                else
                {
                    return RuthlessnessDescriptions[RuthlessnessDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 4)
            {
                if (abilityPoints < MurderDescriptions.Length)
                {
                    return MurderDescriptions[abilityPoints];
                }
                else
                {
                    return MurderDescriptions[MurderDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 5)
            {
                if (abilityPoints < ImprovedSliceAndDiceDescriptions.Length)
                {
                    return ImprovedSliceAndDiceDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedSliceAndDiceDescriptions[ImprovedSliceAndDiceDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 6)
            {
                if (abilityPoints < RelentlessStrikesDescriptions.Length)
                {
                    return RelentlessStrikesDescriptions[abilityPoints];
                }
                else
                {
                    return RelentlessStrikesDescriptions[RelentlessStrikesDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 7)
            {
                if (abilityPoints < ImprovedExposeArmorDescriptions.Length)
                {
                    return ImprovedExposeArmorDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedExposeArmorDescriptions[ImprovedExposeArmorDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 8)
            {
                if (abilityPoints < LethalityDescriptions.Length)
                {
                    return LethalityDescriptions[abilityPoints];
                }
                else
                {
                    return LethalityDescriptions[LethalityDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 9)
            {
                if (abilityPoints < VilePoisonsDescriptions.Length)
                {
                    return VilePoisonsDescriptions[abilityPoints];
                }
                else
                {
                    return VilePoisonsDescriptions[VilePoisonsDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 10)
            {
                if (abilityPoints < ImprovedPoisonsDescriptions.Length)
                {
                    return ImprovedPoisonsDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedPoisonsDescriptions[ImprovedPoisonsDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 11)
            {
                if (abilityPoints < ColdBloodDescriptions.Length)
                {
                    return ColdBloodDescriptions[abilityPoints];
                }
                else
                {
                    return ColdBloodDescriptions[ColdBloodDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 12)
            {
                if (abilityPoints < ImprovedKidneyShotDescriptions.Length)
                {
                    return ImprovedKidneyShotDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedKidneyShotDescriptions[ImprovedKidneyShotDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 13)
            {
                if (abilityPoints < SealFateDescriptions.Length)
                {
                    return SealFateDescriptions[abilityPoints];
                }
                else
                {
                    return SealFateDescriptions[SealFateDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 14)
            {
                if (abilityPoints < VigorDescriptions.Length)
                {
                    return VigorDescriptions[abilityPoints];
                }
                else
                {
                    return VigorDescriptions[VigorDescriptions.Length - 1];
                }
            }
            else
            {
                return "No Description available";
            }
        }
    }

    public static class Combat
    {
        public static readonly string[] AbilityNames = {
            "Improved Gouge",
            "Improved Sinister Strike",
            "Lightning Reflexes",
            "Improved Backstab",
            "Deflection",
            "Precision",
            "Endurance",
            "Riposte",
            "Improved Sprint",
            "Improved Kick",
            "Dagger Specialization",
            "Dual Wield Specialization",
            "Mace Specialization",
            "Blade Flurry",
            "Sword Specilization",
            "Fist Weapon Specialization",
            "Weapon Expertise",
            "Aggression",
            "Adrenaline Rush"
        };


        public static readonly string[] ImprovedGougeDescriptions = {
            "Increases the effect duration of your Gouge ability by 0.5 sec.",
            "Increases the effect duration of your Gouge ability by 1 sec.",
            "Increases the effect duration of your Gouge ability by 1.5 sec."
        };

        public static readonly string[] ImprovedSinisterStrikeDescriptions = {
            "Reduces the Energy cost of your Sinister Strike ability by 3.",
            "Reduces the Energy cost of your Sinister Strike ability by 5."
        };

        public static readonly string[] LightningReflexesDescriptions = {
            "Increases your Dodge chance by 1%.",
            "Increases your Dodge chance by 2%.",
            "Increases your Dodge chance by 3%.",
            "Increases your Dodge chance by 4%.",
            "Increases your Dodge chance by 5%."
        };

        public static readonly string[] ImprovedBackstabDescriptions = {
            "Increases the critical chance of your Backstab ability by 10%.",
            "Increases the critical chance of your Backstab ability by 20%.",
            "Increases the critical chance of your Backstab ability by 30%."
        };

        public static readonly string[] DeflectionDescriptions = {
            "Increases your Parry chance by 1%.",
            "Increases your Parry chance by 2%.",
            "Increases your Parry chance by 3%.",
            "Increases your Parry chance by 4%.",
            "Increases your Parry chance by 5%."
        };

        public static readonly string[] PrecisionDescriptions = {
            "Increases your chance to hit with melee weapons by 1%.",
            "Increases your chance to hit with melee weapons by 2%.",
            "Increases your chance to hit with melee weapons by 3%.",
            "Increases your chance to hit with melee weapons by 4%.",
            "Increases your chance to hit with melee weapons by 5%."
        };

        public static readonly string[] EnduranceDescriptions = {
            "Reduces the cooldown of your Sprint and Evasion abilities by 45 sec.",
            "Reduces the cooldown of your Sprint and Evasion abilities by 1.5 min."
        };

        public static readonly string[] RiposteDescriptions = {
            "A strike that becomes active after parrying an opponent's attack. This attack deals 150% weapon damage and disarms the target for 6 sec."
        };

        public static readonly string[] ImprovedSprintDescriptions = {
            "Gives a 50% chance to remove all movement impairing effects when you activate your Sprint ability.",
            "Gives a 100% chance to remove all movement impairing effects when you activate your Sprint ability."
        };

        public static readonly string[] ImprovedKickDescriptions = {
            "Gives your Kick ability a 50% chance to silence the target for 2 sec.",
            "Gives your Kick ability a 100% chance to silence the target for 2 sec."
        };

        public static readonly string[] DaggerSpecializationDescriptions = {
            "Increases your chance to get a critical strike with Daggers by 1%.",
            "Increases your chance to get a critical strike with Daggers by 2%.",
            "Increases your chance to get a critical strike with Daggers by 3%.",
            "Increases your chance to get a critical strike with Daggers by 4%.",
            "Increases your chance to get a critical strike with Daggers by 5%."
        };

        public static readonly string[] DualWieldSpecializationDescriptions = {
            "Increaes the damage done by your offhand weapon by 10%.",
            "Increaes the damage done by your offhand weapon by 20%.",
            "Increaes the damage done by your offhand weapon by 30%.",
            "Increaes the damage done by your offhand weapon by 40%.",
            "Increaes the damage done by your offhand weapon by 50%."
        };

        public static readonly string[] MaceSpecializationDescriptions = {
            "Increases your skill with Maces by 1 and gives you a 1% chance to stun your target for 3 sec with a mace.",
            "Increases your skill with Maces by 2 and gives you a 2% chance to stun your target for 3 sec with a mace.",
            "Increases your skill with Maces by 3 and gives you a 3% chance to stun your target for 3 sec with a mace.",
            "Increases your skill with Maces by 4 and gives you a 4% chance to stun your target for 3 sec with a mace.",
            "Increases your skill with Maces by 5 and gives you a 6% chance to stun your target for 3 sec with a mace."
        };

        public static readonly string[] BladeFlurryDescriptions = {
            "Increases your attack speed by 20%. In addition, attacks strike an additional nearby opponent. Lasts 15 sec."
        };

        public static readonly string[] SwordSpecilizationDescriptions = {
            "Gives your a 1% chance to get an extra attack on the same target after dealing damage with your Sword.",
            "Gives your a 2% chance to get an extra attack on the same target after dealing damage with your Sword.",
            "Gives your a 3% chance to get an extra attack on the same target after dealing damage with your Sword.",
            "Gives your a 4% chance to get an extra attack on the same target after dealing damage with your Sword.",
            "Gives your a 5% chance to get an extra attack on the same target after dealing damage with your Sword."
        };

        public static readonly string[] FistWeaponSpecializationDescriptions = {
            "Increases your chance to get a crtitical strike with Fist Weapons by 1%.",
            "Increases your chance to get a crtitical strike with Fist Weapons by 2%.",
            "Increases your chance to get a crtitical strike with Fist Weapons by 3%.",
            "Increases your chance to get a crtitical strike with Fist Weapons by 4%.",
            "Increases your chance to get a crtitical strike with Fist Weapons by 5%."
        };

        public static readonly string[] WeaponExpertiseDescriptions = {
            "Increases your skill with Sword, Fist and Dagger weapons by 3.",
            "Increases your skill with Sword, Fist and Dagger weapons by 5."
        };

        public static readonly string[] AggressionDescriptions = {
            "Increases the damage of your Sinister Strike and Eviscerate abilities by 2%.",
            "Increases the damage of your Sinister Strike and Eviscerate abilities by 4%.",
            "Increases the damage of your Sinister Strike and Eviscerate abilities by 6%."
        };

        public static readonly string[] AdrenalineRushDescriptions = {
            "Increases your Energy regeneration rate by 100%. Lasts 15 sec."
        };

        public static string GetAbilityDesc(int abilityPosition, int abilityPoints)
        {
            if (abilityPosition == 0)
            {
                if (abilityPoints < ImprovedGougeDescriptions.Length)
                {
                    return ImprovedGougeDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedGougeDescriptions[ImprovedGougeDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 1)
            {
                if (abilityPoints < ImprovedSinisterStrikeDescriptions.Length)
                {
                    return ImprovedSinisterStrikeDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedSinisterStrikeDescriptions[ImprovedSinisterStrikeDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 2)
            {
                if (abilityPoints < LightningReflexesDescriptions.Length)
                {
                    return LightningReflexesDescriptions[abilityPoints];
                }
                else
                {
                    return LightningReflexesDescriptions[LightningReflexesDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 3)
            {
                if (abilityPoints < ImprovedBackstabDescriptions.Length)
                {
                    return ImprovedBackstabDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedBackstabDescriptions[ImprovedBackstabDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 4)
            {
                if (abilityPoints < DeflectionDescriptions.Length)
                {
                    return DeflectionDescriptions[abilityPoints];
                }
                else
                {
                    return DeflectionDescriptions[DeflectionDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 5)
            {
                if (abilityPoints < PrecisionDescriptions.Length)
                {
                    return PrecisionDescriptions[abilityPoints];
                }
                else
                {
                    return PrecisionDescriptions[PrecisionDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 6)
            {
                if (abilityPoints < EnduranceDescriptions.Length)
                {
                    return EnduranceDescriptions[abilityPoints];
                }
                else
                {
                    return EnduranceDescriptions[EnduranceDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 7)
            {
                if (abilityPoints < RiposteDescriptions.Length)
                {
                    return RiposteDescriptions[abilityPoints];
                }
                else
                {
                    return RiposteDescriptions[RiposteDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 8)
            {
                if (abilityPoints < ImprovedSprintDescriptions.Length)
                {
                    return ImprovedSprintDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedSprintDescriptions[ImprovedSprintDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 9)
            {
                if (abilityPoints < ImprovedKickDescriptions.Length)
                {
                    return ImprovedKickDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedKickDescriptions[ImprovedKickDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 10)
            {
                if (abilityPoints < DaggerSpecializationDescriptions.Length)
                {
                    return DaggerSpecializationDescriptions[abilityPoints];
                }
                else
                {
                    return DaggerSpecializationDescriptions[DaggerSpecializationDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 11)
            {
                if (abilityPoints < DualWieldSpecializationDescriptions.Length)
                {
                    return DualWieldSpecializationDescriptions[abilityPoints];
                }
                else
                {
                    return DualWieldSpecializationDescriptions[DualWieldSpecializationDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 12)
            {
                if (abilityPoints < MaceSpecializationDescriptions.Length)
                {
                    return MaceSpecializationDescriptions[abilityPoints];
                }
                else
                {
                    return MaceSpecializationDescriptions[MaceSpecializationDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 13)
            {
                if (abilityPoints < BladeFlurryDescriptions.Length)
                {
                    return BladeFlurryDescriptions[abilityPoints];
                }
                else
                {
                    return BladeFlurryDescriptions[BladeFlurryDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 14)
            {
                if (abilityPoints < SwordSpecilizationDescriptions.Length)
                {
                    return SwordSpecilizationDescriptions[abilityPoints];
                }
                else
                {
                    return SwordSpecilizationDescriptions[SwordSpecilizationDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 15)
            {
                if (abilityPoints < FistWeaponSpecializationDescriptions.Length)
                {
                    return FistWeaponSpecializationDescriptions[abilityPoints];
                }
                else
                {
                    return FistWeaponSpecializationDescriptions[FistWeaponSpecializationDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 16)
            {
                if (abilityPoints < WeaponExpertiseDescriptions.Length)
                {
                    return WeaponExpertiseDescriptions[abilityPoints];
                }
                else
                {
                    return WeaponExpertiseDescriptions[WeaponExpertiseDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 17)
            {
                if (abilityPoints < AggressionDescriptions.Length)
                {
                    return AggressionDescriptions[abilityPoints];
                }
                else
                {
                    return AggressionDescriptions[AggressionDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 18)
            {
                if (abilityPoints < AdrenalineRushDescriptions.Length)
                {
                    return AdrenalineRushDescriptions[abilityPoints];
                }
                else
                {
                    return AdrenalineRushDescriptions[AdrenalineRushDescriptions.Length - 1];
                }
            }
            else
            {
                return "No Description available";
            }
        }
    }

    public static class Subtlety
    {
        public static readonly string[] AbilityNames = {
            "Master of Deception",
            "Opportunity",
            "Sleight of Hand",
            "Elusiveness",
            "Camouflage",
            "Initiative",
            "Ghostly Strike",
            "Improved Ambush",
            "Setup",
            "Improved Sap",
            "Serrated Blades",
            "Heightened Senses",
            "Preparation",
            "Dirty Deeds",
            "Hemorrhage",
            "Deadliness",
            "Premeditation"
        };

        public static readonly string[] MasterOfDeceptionDescriptions = {
            "Reduces the chance enemies have to detect you while in Stealth mode.",
            "Reduces the chance enemies have to detect you while in Stealth mode. More effective than Master of Deception (Rank 1).",
            "Reduces the chance enemies have to detect you while in Stealth mode. More effective than Master of Deception (Rank 2).",
            "Reduces the chance enemies have to detect you while in Stealth mode. More effective than Master of Deception (Rank 3).",
            "Reduces the chance enemies have to detect you while in Stealth mode. More effective than Master of Deception (Rank 4)."
        };

        public static readonly string[] OpportunityDescriptions = {
            "Increases the damage dealt when striking from behind with your Backstab, Garrote or Ambush abilities by 4%.",
            "Increases the damage dealt when striking from behind with your Backstab, Garrote or Ambush abilities by 8%.",
            "Increases the damage dealt when striking from behind with your Backstab, Garrote or Ambush abilities by 12%.",
            "Increases the damage dealt when striking from behind with your Backstab, Garrote or Ambush abilities by 16%.",
            "Increases the damage dealt when striking from behind with your Backstab, Garrote or Ambush abilities by 20%."
        };

        public static readonly string[] SleightOfHandDescriptions = {
            "Reduces the chance you are critically hit by melee and ranged attacks by 1% and increases the threat reduction of your Feint ability by 10%.",
            "Reduces the chance you are critically hit by melee and ranged attacks by 2% and increases the threat reduction of your Feint ability by 20%."
        };

        public static readonly string[] ElusivenessDescriptions = {
            "Reduces the cooldown of your Vanish and Blind abilities by 45 sec.",
            "Reduces the cooldown of your Vanish and Blind abilities by 1.5 min."
        };

        public static readonly string[] CamouflageDescriptions = {
            "Increases your speed while stealthed by 3% and reduces the cooldown of your Stealth ability by 1 sec.",
            "Increases your speed while stealthed by 6% and reduces the cooldown of your Stealth ability by 2 sec.",
            "Increases your speed while stealthed by 9% and reduces the cooldown of your Stealth ability by 3 sec.",
            "Increases your speed while stealthed by 12% and reduces the cooldown of your Stealth ability by 4 sec.",
            "Increases your speed while stealthed by 15% and reduces the cooldown of your Stealth ability by 5 sec."
        };

        public static readonly string[] InitiativeDescriptions = {
            "Gives you a 25% chance to add an additional combo point to your target when using your Ambush, Garrot or Cheap Shot ability.",
            "Gives you a 50% chance to add an additional combo point to your target when using your Ambush, Garrot or Cheap Shot ability.",
            "Gives you a 75% chance to add an additional combo point to your target when using your Ambush, Garrot or Cheap Shot ability."
        };

        public static readonly string[] GhostlyStrikeDescriptions = {
            "A strike that deals 125% weapon damage and increases your chance to dodge by 15% for 7 sec. Awards 1 combo point."
        };

        public static readonly string[] ImprovedAmbushDescriptions = {
            "Increases the critical strike chance of your Ambush ability by 15%.",
            "Increases the critical strike chance of your Ambush ability by 30%.",
            "Increases the critical strike chance of your Ambush ability by 45%."
        };

        public static readonly string[] SetupDescriptions = {
            "Gives you a 15% chance to add a combo point to your target after dodging their attack or fully resisting one of their spells.",
            "Gives you a 30% chance to add a combo point to your target after dodging their attack or fully resisting one of their spells.",
            "Gives you a 45% chance to add a combo point to your target after dodging their attack or fully resisting one of their spells."
        };

        public static readonly string[] ImprovedSapDescriptions = {
            "Gives you a 30% chance to return to stealth mode after using your Sap ability.",
            "Gives you a 60% chance to return to stealth mode after using your Sap ability.",
            "Gives you a 90% chance to return to stealth mode after using your Sap ability."
        };

        public static readonly string[] SerratedBladesDescriptions = {
            "Causes your attacks to ignore 1.67% per your level of your target's Armor and increases the damage dealt by your Rapture ability by 10%. The amount of Armor reduced increases with your level.",
            "Causes your attacks to ignore 3.34% per your level of your target's Armor and increases the damage dealt by your Rapture ability by 20%. The amount of Armor reduced increases with your level.",
            "Causes your attacks to ignore 5% per your level of your target's Armor and increases the damage dealt by your Rapture ability by 30%. The amount of Armor reduced increases with your level."
        };

        public static readonly string[] HeightenedSensesDescriptions = {
            "Increases your Stealth detection and reduces the chance you are hit by spells and ranged attacks by 2%.",
            "Increases your Stealth detection and reduces the chance you are hit by spells and ranged attacks by 4%. More effective than Heightened Senses (Rank 1)."
        };

        public static readonly string[] PreparationDescriptions = {
            "When activated, this ability immediately finishes the cooldown on your other Rogue abilities."
        };

        public static readonly string[] DirtyDeedsDescriptions = {
            "Reduces the energy cost of your Cheap Shot and Garrote abilities by 10.",
            "Reduces the energy cost of your Cheap Shot and Garrote abilities by 20."
        };

        public static readonly string[] HemorrhageDescriptions = {
            "An instant strike that damages the opponent and causes the target to hemorrhage, increasing any Physical damage dealt to the target by up to 3. Lasts 30 charges or 15 sec. Awards 1 combo point."
        };

        public static readonly string[] DeadlinessDescriptions = {
            "Increases your Attack Power by 2%.",
            "Increases your Attack Power by 4%.",
            "Increases your Attack Power by 6%.",
            "Increases your Attack Power by 8%.",
            "Increases your Attack Power by 10%."
        };

        public static readonly string[] PremeditationDescriptions = {
            "When used, adds 2 combo points to your target. You must add to or use those combo points within 10 sec or the combo points are lost."
        };

        public static string GetAbilityDesc(int abilityPosition, int abilityPoints)
        {
            if (abilityPosition == 0)
            {
                if (abilityPoints < MasterOfDeceptionDescriptions.Length)
                {
                    return MasterOfDeceptionDescriptions[abilityPoints];
                }
                else
                {
                    return MasterOfDeceptionDescriptions[MasterOfDeceptionDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 1)
            {
                if (abilityPoints < OpportunityDescriptions.Length)
                {
                    return OpportunityDescriptions[abilityPoints];
                }
                else
                {
                    return OpportunityDescriptions[OpportunityDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 2)
            {
                if (abilityPoints < SleightOfHandDescriptions.Length)
                {
                    return SleightOfHandDescriptions[abilityPoints];
                }
                else
                {
                    return SleightOfHandDescriptions[SleightOfHandDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 3)
            {
                if (abilityPoints < ElusivenessDescriptions.Length)
                {
                    return ElusivenessDescriptions[abilityPoints];
                }
                else
                {
                    return ElusivenessDescriptions[ElusivenessDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 4)
            {
                if (abilityPoints < CamouflageDescriptions.Length)
                {
                    return CamouflageDescriptions[abilityPoints];
                }
                else
                {
                    return CamouflageDescriptions[CamouflageDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 5)
            {
                if (abilityPoints < InitiativeDescriptions.Length)
                {
                    return InitiativeDescriptions[abilityPoints];
                }
                else
                {
                    return InitiativeDescriptions[InitiativeDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 6)
            {
                if (abilityPoints < GhostlyStrikeDescriptions.Length)
                {
                    return GhostlyStrikeDescriptions[abilityPoints];
                }
                else
                {
                    return GhostlyStrikeDescriptions[GhostlyStrikeDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 7)
            {
                if (abilityPoints < ImprovedAmbushDescriptions.Length)
                {
                    return ImprovedAmbushDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedAmbushDescriptions[ImprovedAmbushDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 8)
            {
                if (abilityPoints < SetupDescriptions.Length)
                {
                    return SetupDescriptions[abilityPoints];
                }
                else
                {
                    return SetupDescriptions[SetupDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 9)
            {
                if (abilityPoints < ImprovedSapDescriptions.Length)
                {
                    return ImprovedSapDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedSapDescriptions[ImprovedSapDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 10)
            {
                if (abilityPoints < SerratedBladesDescriptions.Length)
                {
                    return SerratedBladesDescriptions[abilityPoints];
                }
                else
                {
                    return SerratedBladesDescriptions[SerratedBladesDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 11)
            {
                if (abilityPoints < HeightenedSensesDescriptions.Length)
                {
                    return HeightenedSensesDescriptions[abilityPoints];
                }
                else
                {
                    return HeightenedSensesDescriptions[HeightenedSensesDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 12)
            {
                if (abilityPoints < PreparationDescriptions.Length)
                {
                    return PreparationDescriptions[abilityPoints];
                }
                else
                {
                    return PreparationDescriptions[PreparationDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 13)
            {
                if (abilityPoints < DirtyDeedsDescriptions.Length)
                {
                    return DirtyDeedsDescriptions[abilityPoints];
                }
                else
                {
                    return DirtyDeedsDescriptions[DirtyDeedsDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 14)
            {
                if (abilityPoints < HemorrhageDescriptions.Length)
                {
                    return HemorrhageDescriptions[abilityPoints];
                }
                else
                {
                    return HemorrhageDescriptions[HemorrhageDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 15)
            {
                if (abilityPoints < DeadlinessDescriptions.Length)
                {
                    return DeadlinessDescriptions[abilityPoints];
                }
                else
                {
                    return DeadlinessDescriptions[DeadlinessDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 16)
            {
                if (abilityPoints < PremeditationDescriptions.Length)
                {
                    return PremeditationDescriptions[abilityPoints];
                }
                else
                {
                    return PremeditationDescriptions[PremeditationDescriptions.Length - 1];
                }
            }
            else
            {
                return "No Description available";
            }
        }
    }

    public static class Discipline
    {
        public static readonly string[] AbilityNames = {
            "Unbreakable Will",
            "Wand Specialization",
            "Silent Resolve",
            "Improved Power Word: Fortitude",
            "Improved Power Word: Shield",
            "Martyrdom",
            "Inner Focus",
            "Meditation",
            "Improved Inner Fire",
            "Mental Agility",
            "Improved Mana Burn",
            "Mental Strenght",
            "Divine Spirit",
            "Force of Will",
            "Power Infusion"
        };

        public static readonly string[] UnbreakableWillDescriptions = {
            "Increases your chance to resist Stun, Fear and Silence effects by an additional 3%.",
            "Increases your chance to resist Stun, Fear and Silence effects by an additional 6%.",
            "Increases your chance to resist Stun, Fear and Silence effects by an additional 9%.",
            "Increases your chance to resist Stun, Fear and Silence effects by an additional 12%.",
            "Increases your chance to resist Stun, Fear and Silence effects by an additional 15%."
        };

        public static readonly string[] WandSpecializationDescriptions = {
            "Increases your damage with Wands by 5%.",
            "Increases your damage with Wands by 10%.",
            "Increases your damage with Wands by 15%.",
            "Increases your damage with Wands by 20%.",
            "Increases your damage with Wands by 25%."
        };

        public static readonly string[] SilentResolveDescriptions = {
            "Reduces the threat generated by your spells by 4%.",
            "Reduces the threat generated by your spells by 8%.",
            "Reduces the threat generated by your spells by 12%.",
            "Reduces the threat generated by your spells by 16%.",
            "Reduces the threat generated by your spells by 20%."
        };

        public static readonly string[] ImprovedPowerWordFortitudeDescriptions = {
            "Increases the effect of your Power Word: Fortitude and Prayer of Fortitude spells by 15%.",
            "Increases the effect of your Power Word: Fortitude and Prayer of Fortitude spells by 30%."
        };

        public static readonly string[] ImprovedPowerWordShieldDescriptions = {
            "Increases the damage absorbed by your Power Word: Shield by 5%.",
            "Increases the damage absorbed by your Power Word: Shield by 10%.",
            "Increases the damage absorbed by your Power Word: Shield by 15%."
        };

        public static readonly string[] MartyrdomDescriptions = {
            "Gives you a 50% chance to gain the Focused Casting effect that lasts for 6 sec after being the victim of a melee or ranged critical strike. The Focused Casting effect prevents you from losing casting time when taking damage and increases resistance to Interrupt effects by 10%.",
            "Gives you a 100% chance to gain the Focused Casting effect that lasts for 6 sec after being the victim of a melee or ranged critical strike. The Focused Casting effect prevents you from losing casting time when taking damage and increases resistance to Interrupt effects by 20%."
        };

        public static readonly string[] InnerFocusDescriptions = {
            "When activated, reduces the Mana cost of your next spell by 100% and increases its critical effect chance by 25% if it is capable of a critical effect."
        };

        public static readonly string[] MeditationDescriptions = {
            "Allows 5% of your Mana regeneration to continue while casting.",
            "Allows 10% of your Mana regeneration to continue while casting.",
            "Allows 15% of your Mana regeneration to continue while casting."
        };

        public static readonly string[] ImprovedInnerFireDescriptions = {
            "Increases the Armor bonus of your Inner Fire spell by 10%.",
            "Increases the Armor bonus of your Inner Fire spell by 20%.",
            "Increases the Armor bonus of your Inner Fire spell by 30%."
        };

        public static readonly string[] MentalAgilityDescriptions = {
            "Reduces the Mana cost of your instant cast spells by 2%.",
            "Reduces the Mana cost of your instant cast spells by 4%.",
            "Reduces the Mana cost of your instant cast spells by 6%.",
            "Reduces the Mana cost of your instant cast spells by 8%.",
            "Reduces the Mana cost of your instant cast spells by 10%."
        };

        public static readonly string[] ImprovedManaBurnDescriptions = {
            "Reduces the casting time of your Mana Burn spell by 0.25 sec.",
            "Reduces the casting time of your Mana Burn spell by 0.5 sec."
        };

        public static readonly string[] MentalStrenghtBurnDescriptions = {
            "Increases your maximum Mana by 2%.",
            "Increases your maximum Mana by 4%.",
            "Increases your maximum Mana by 6%.",
            "Increases your maximum Mana by 8%.",
            "Increases your maximum Mana by 10%."
        };

        public static readonly string[] DivineSpiritDescriptions = {
            "Holy power infuses the target, increasing their Spirit by 17 for 30 min."
        };

        public static readonly string[] ForceOfWillDescriptions = {
            "Increases your spell damage by 1% and the critical strike chance of your offensive spells by 1%.",
            "Increases your spell damage by 2% and the critical strike chance of your offensive spells by 2%.",
            "Increases your spell damage by 3% and the critical strike chance of your offensive spells by 3%.",
            "Increases your spell damage by 4% and the critical strike chance of your offensive spells by 4%.",
            "Increases your spell damage by 5% and the critical strike chance of your offensive spells by 5%."
        };

        public static readonly string[] PowerInfusionDescriptions = {
            "Infuses the target with power, increasing their spell damage and healing by 20%. Lasts 15 sec."
        };

        public static string GetAbilityDesc(int abilityPosition, int abilityPoints)
        {
            if (abilityPosition == 0)
            {
                if (abilityPoints < UnbreakableWillDescriptions.Length)
                {
                    return UnbreakableWillDescriptions[abilityPoints];
                }
                else
                {
                    return UnbreakableWillDescriptions[UnbreakableWillDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 1)
            {
                if (abilityPoints < WandSpecializationDescriptions.Length)
                {
                    return WandSpecializationDescriptions[abilityPoints];
                }
                else
                {
                    return WandSpecializationDescriptions[WandSpecializationDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 2)
            {
                if (abilityPoints < SilentResolveDescriptions.Length)
                {
                    return SilentResolveDescriptions[abilityPoints];
                }
                else
                {
                    return SilentResolveDescriptions[SilentResolveDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 3)
            {
                if (abilityPoints < ImprovedPowerWordFortitudeDescriptions.Length)
                {
                    return ImprovedPowerWordFortitudeDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedPowerWordFortitudeDescriptions[ImprovedPowerWordFortitudeDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 4)
            {
                if (abilityPoints < ImprovedPowerWordShieldDescriptions.Length)
                {
                    return ImprovedPowerWordShieldDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedPowerWordShieldDescriptions[ImprovedPowerWordShieldDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 5)
            {
                if (abilityPoints < MartyrdomDescriptions.Length)
                {
                    return MartyrdomDescriptions[abilityPoints];
                }
                else
                {
                    return MartyrdomDescriptions[MartyrdomDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 6)
            {
                if (abilityPoints < InnerFocusDescriptions.Length)
                {
                    return InnerFocusDescriptions[abilityPoints];
                }
                else
                {
                    return InnerFocusDescriptions[InnerFocusDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 7)
            {
                if (abilityPoints < MeditationDescriptions.Length)
                {
                    return MeditationDescriptions[abilityPoints];
                }
                else
                {
                    return MeditationDescriptions[MeditationDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 8)
            {
                if (abilityPoints < ImprovedInnerFireDescriptions.Length)
                {
                    return ImprovedInnerFireDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedInnerFireDescriptions[ImprovedInnerFireDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 9)
            {
                if (abilityPoints < MentalAgilityDescriptions.Length)
                {
                    return MentalAgilityDescriptions[abilityPoints];
                }
                else
                {
                    return MentalAgilityDescriptions[MentalAgilityDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 10)
            {
                if (abilityPoints < ImprovedManaBurnDescriptions.Length)
                {
                    return ImprovedManaBurnDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedManaBurnDescriptions[ImprovedManaBurnDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 11)
            {
                if (abilityPoints < MentalStrenghtBurnDescriptions.Length)
                {
                    return MentalStrenghtBurnDescriptions[abilityPoints];
                }
                else
                {
                    return MentalStrenghtBurnDescriptions[MentalStrenghtBurnDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 12)
            {
                if (abilityPoints < DivineSpiritDescriptions.Length)
                {
                    return DivineSpiritDescriptions[abilityPoints];
                }
                else
                {
                    return DivineSpiritDescriptions[DivineSpiritDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 13)
            {
                if (abilityPoints < ForceOfWillDescriptions.Length)
                {
                    return ForceOfWillDescriptions[abilityPoints];
                }
                else
                {
                    return ForceOfWillDescriptions[ForceOfWillDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 14)
            {
                if (abilityPoints < PowerInfusionDescriptions.Length)
                {
                    return PowerInfusionDescriptions[abilityPoints];
                }
                else
                {
                    return PowerInfusionDescriptions[PowerInfusionDescriptions.Length - 1];
                }
            }
            else
            {
                return "No Description available";
            }
        }
    }

    public static class Holy
    {
        public static readonly string[] AbilityNames = {
            "Healing Focus",
            "Improved Renew",
            "Holy Specialization",
            "Spell Warding",
            "Divine Fury",
            "Holy Nova",
            "Blessed Recovery",
            "Inspiration",
            "Holy Reach",
            "Improved Healing",
            "Searing Light",
            "Improved Prayer of Healing",
            "Spirit of Redemption",
            "Spiritual Guidance",
            "Spiritual Healing",
            "Lightwell"
        };

        public static readonly string[] HealingFocusDescriptions = {
            "Gives you a 35% chance to avoid interruption caused by damage while casting any healing spell.",
            "Gives you a 70% chance to avoid interruption caused by damage while casting any healing spell."
        };

        public static readonly string[] ImprovedRenewDescriptions = {
            "Increases the amount healed by your Renew spell by 5%.",
            "Increases the amount healed by your Renew spell by 10%.",
            "Increases the amount healed by your Renew spell by 15%."
        };

        public static readonly string[] HolySpecializationDescriptions = {
            "Increases the critical effect chance of your Holy spells by 1%.",
            "Increases the critical effect chance of your Holy spells by 2%.",
            "Increases the critical effect chance of your Holy spells by 3%.",
            "Increases the critical effect chance of your Holy spells by 4%.",
            "Increases the critical effect chance of your Holy spells by 5%."
        };

        public static readonly string[] SpellWardingDescriptions = {
            "Reduces all spell damage taken by 2%.",
            "Reduces all spell damage taken by 4%.",
            "Reduces all spell damage taken by 6%.",
            "Reduces all spell damage taken by 8%.",
            "Reduces all spell damage taken by 10%."
        };

        public static readonly string[] DivineFuryDescriptions = {
            "Reduces the casting time of your Smite, Holy Fire, Heal and Greater Heal spells by 0.1 sec.",
            "Reduces the casting time of your Smite, Holy Fire, Heal and Greater Heal spells by 0.2 sec.",
            "Reduces the casting time of your Smite, Holy Fire, Heal and Greater Heal spells by 0.3 sec.",
            "Reduces the casting time of your Smite, Holy Fire, Heal and Greater Heal spells by 0.4 sec.",
            "Reduces the casting time of your Smite, Holy Fire, Heal and Greater Heal spells by 0.5 sec."
        };

        public static readonly string[] HolyNovaDescriptions = {
            "Causes an explosion of holy light around the caster, causing 28 to 33 Holy damage to all enemy targets within 10 yards and healing all party members within 10 yards for 52 to 61. These effect causes no threat."
        };

        public static readonly string[] BlessedRecoveryDescriptions = {
            "After being struck by a melee or ranged critical hit, heal 8% of the damage taken over 6 sec.",
            "After being struck by a melee or ranged critical hit, heal 16% of the damage taken over 6 sec.",
            "After being struck by a melee or ranged critical hit, heal 25% of the damage taken over 6 sec."
        };

        public static readonly string[] InspirationDescriptions = {
            "Increases your target's armor by 8% for 15 sec after getting a critical effect from your Flash Heal, Heal, Greater Heal or Prayer of Healing spell.",
            "Increases your target's armor by 16% for 15 sec after getting a critical effect from your Flash Heal, Heal, Greater Heal or Prayer of Healing spell.",
            "Increases your target's armor by 25% for 15 sec after getting a critical effect from your Flash Heal, Heal, Greater Heal or Prayer of Healing spell."
        };

        public static readonly string[] HolyReachDescriptions = {
            "Increases the range of your Smite and Holy Fire spells and the radius of your Prayer of Healing and Holy Nova spells by 10%.",
            "Increases the range of your Smite and Holy Fire spells and the radius of your Prayer of Healing and Holy Nova spells by 20%."
        };

        public static readonly string[] ImprovedHealingDescriptions = {
            "Reduces the Mana cost of your Lesser Heal, Heal and Greater Heal spells by 5%.",
            "Reduces the Mana cost of your Lesser Heal, Heal and Greater Heal spells by 10%.",
            "Reduces the Mana cost of your Lesser Heal, Heal and Greater Heal spells by 15%."
        };

        public static readonly string[] SearingLightDescriptions = {
            "Increases the damage of your Smite and Hole Fire spells by 5%.",
            "Increases the damage of your Smite and Hole Fire spells by 10%."
        };

        public static readonly string[] ImprovedPrayerOfHealingDescriptions = {
            "Reduces the Mana cost of your Prayer of Healing spell by 10%.",
            "Reduces the Mana cost of your Prayer of Healing spell by 20%."
        };

        public static readonly string[] SpiritOfRedemptionDescriptions = {
            "Upon death, the priest becomes the Spirit of Redemption fo 10 sec. The Spirit of Redemption cannot move, attack, be attacked or targeted by any spells or effects. While in this form the priest can cast any healing spells free of cost. When the effect ends, the priest dies."
        };

        public static readonly string[] SpiritualGuidanceDescriptions = {
            "Increases spell damage and healing by up to 5% of your total Spirit.",
            "Increases spell damage and healing by up to 10% of your total Spirit.",
            "Increases spell damage and healing by up to 15% of your total Spirit.",
            "Increases spell damage and healing by up to 20% of your total Spirit.",
            "Increases spell damage and healing by up to 25% of your total Spirit."
        };

        public static readonly string[] SpiritualHealingDescriptions = {
            "Increases the amount healed by your healing spells by 2%.",
            "Increases the amount healed by your healing spells by 4%.",
            "Increases the amount healed by your healing spells by 6%.",
            "Increases the amount healed by your healing spells by 8%.",
            "Increases the amount healed by your healing spells by 10%."
        };

        public static readonly string[] LightwellDescriptions = {
            "Creates a holy Lightwell near the priest. Members of your raid or party can click the Lightwell to restore 160 health over 10 sec. Being attacked cancels the effect. Lightwell lasts for 180 sec or 5 charges."
        };

        public static string GetAbilityDesc(int abilityPosition, int abilityPoints)
        {
            if (abilityPosition == 0)
            {
                if (abilityPoints < HealingFocusDescriptions.Length)
                {
                    return HealingFocusDescriptions[abilityPoints];
                }
                else
                {
                    return HealingFocusDescriptions[HealingFocusDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 1)
            {
                if (abilityPoints < ImprovedRenewDescriptions.Length)
                {
                    return ImprovedRenewDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedRenewDescriptions[ImprovedRenewDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 2)
            {
                if (abilityPoints < HolySpecializationDescriptions.Length)
                {
                    return HolySpecializationDescriptions[abilityPoints];
                }
                else
                {
                    return HolySpecializationDescriptions[HolySpecializationDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 3)
            {
                if (abilityPoints < SpellWardingDescriptions.Length)
                {
                    return SpellWardingDescriptions[abilityPoints];
                }
                else
                {
                    return SpellWardingDescriptions[SpellWardingDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 4)
            {
                if (abilityPoints < DivineFuryDescriptions.Length)
                {
                    return DivineFuryDescriptions[abilityPoints];
                }
                else
                {
                    return DivineFuryDescriptions[DivineFuryDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 5)
            {
                if (abilityPoints < HolyNovaDescriptions.Length)
                {
                    return HolyNovaDescriptions[abilityPoints];
                }
                else
                {
                    return HolyNovaDescriptions[HolyNovaDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 6)
            {
                if (abilityPoints < BlessedRecoveryDescriptions.Length)
                {
                    return BlessedRecoveryDescriptions[abilityPoints];
                }
                else
                {
                    return BlessedRecoveryDescriptions[BlessedRecoveryDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 7)
            {
                if (abilityPoints < InspirationDescriptions.Length)
                {
                    return InspirationDescriptions[abilityPoints];
                }
                else
                {
                    return InspirationDescriptions[InspirationDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 8)
            {
                if (abilityPoints < HolyReachDescriptions.Length)
                {
                    return HolyReachDescriptions[abilityPoints];
                }
                else
                {
                    return HolyReachDescriptions[HolyReachDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 9)
            {
                if (abilityPoints < ImprovedHealingDescriptions.Length)
                {
                    return ImprovedHealingDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedHealingDescriptions[ImprovedHealingDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 10)
            {
                if (abilityPoints < SearingLightDescriptions.Length)
                {
                    return SearingLightDescriptions[abilityPoints];
                }
                else
                {
                    return SearingLightDescriptions[SearingLightDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 11)
            {
                if (abilityPoints < ImprovedPrayerOfHealingDescriptions.Length)
                {
                    return ImprovedPrayerOfHealingDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedPrayerOfHealingDescriptions[ImprovedPrayerOfHealingDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 12)
            {
                if (abilityPoints < SpiritOfRedemptionDescriptions.Length)
                {
                    return SpiritOfRedemptionDescriptions[abilityPoints];
                }
                else
                {
                    return SpiritOfRedemptionDescriptions[SpiritOfRedemptionDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 13)
            {
                if (abilityPoints < SpiritualGuidanceDescriptions.Length)
                {
                    return SpiritualGuidanceDescriptions[abilityPoints];
                }
                else
                {
                    return SpiritualGuidanceDescriptions[SpiritualGuidanceDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 14)
            {
                if (abilityPoints < SpiritualHealingDescriptions.Length)
                {
                    return SpiritualHealingDescriptions[abilityPoints];
                }
                else
                {
                    return SpiritualHealingDescriptions[SpiritualHealingDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 15)
            {
                if (abilityPoints < LightwellDescriptions.Length)
                {
                    return LightwellDescriptions[abilityPoints];
                }
                else
                {
                    return LightwellDescriptions[LightwellDescriptions.Length - 1];
                }
            }
            else
            {
                return "No Description available";
            }
        }
    }

    public static class Shadow
    {
        public static readonly string[] AbilityNames = {
            "Spirit Tap",
            "Blackout",
            "Shadow Affinity",
            "Improved Shadow Word: Pain",
            "Shadow Focus",
            "Improved Psychic Scream",
            "Improved Mind Blast",
            "Mind Flay",
            "Improved Fade",
            "Shadow Reach",
            "Shadow Weaving",
            "Silence",
            "Vampiric Embrace",
            "Improved Vampiric Embrace",
            "Darkness",
            "Shadowform"
        };

        public static readonly string[] SpiritTapDescriptions = {
            "Gives you a 20% chance to gain a 100% bonus to your Spirit after killing a target that yields experience. For the duration, your Mana will regenerate at a 50% rate while casting. Lasts 15 sec.",
            "Gives you a 40% chance to gain a 100% bonus to your Spirit after killing a target that yields experience. For the duration, your Mana will regenerate at a 50% rate while casting. Lasts 15 sec.",
            "Gives you a 60% chance to gain a 100% bonus to your Spirit after killing a target that yields experience. For the duration, your Mana will regenerate at a 50% rate while casting. Lasts 15 sec.",
            "Gives you a 80% chance to gain a 100% bonus to your Spirit after killing a target that yields experience. For the duration, your Mana will regenerate at a 50% rate while casting. Lasts 15 sec.",
            "Gives you a 100% chance to gain a 100% bonus to your Spirit after killing a target that yields experience. For the duration, your Mana will regenerate at a 50% rate while casting. Lasts 15 sec."
        };

        public static readonly string[] BlackoutDescriptions = {
            "Gives your Shadow damage spells a 2% chance to stun the target for 3 sec.",
            "Gives your Shadow damage spells a 4% chance to stun the target for 3 sec.",
            "Gives your Shadow damage spells a 6% chance to stun the target for 3 sec.",
            "Gives your Shadow damage spells a 8% chance to stun the target for 3 sec.",
            "Gives your Shadow damage spells a 10% chance to stun the target for 3 sec."
        };

        public static readonly string[] ShadowAffinityDescriptions = {
            "Reduces the threat generated by your Shadow spell by 8%.",
            "Reduces the threat generated by your Shadow spell by 16%.",
            "Reduces the threat generated by your Shadow spell by 25%."
        };

        public static readonly string[] ImprovedShadowWordPainDescriptions = {
            "Increases the duration of your Shadow Word: Pain spell by 3 sec.",
            "Increases the duration of your Shadow Word: Pain spell by 6 sec."
        };

        public static readonly string[] ShadowFocusDescriptions = {
            "Reduces your target's chance to resist your Shadow spells by 2%.",
            "Reduces your target's chance to resist your Shadow spells by 4%.",
            "Reduces your target's chance to resist your Shadow spells by 6%.",
            "Reduces your target's chance to resist your Shadow spells by 8%.",
            "Reduces your target's chance to resist your Shadow spells by 10%."
        };

        public static readonly string[] ImprovedPsychicScreamDescriptions = {
            "Reduces the cooldown of your Psychic Scream spell by 2 sec.",
            "Reduces the cooldown of your Psychic Scream spell by 4 sec."
        };

        public static readonly string[] ImprovedMindBlastDescriptions = {
            "Reduces the cooldown of your Mind Blast spell by 0.5 sec.",
            "Reduces the cooldown of your Mind Blast spell by 1 sec.",
            "Reduces the cooldown of your Mind Blast spell by 1.5 sec.",
            "Reduces the cooldown of your Mind Blast spell by 2 sec.",
            "Reduces the cooldown of your Mind Blast spell by 2.5 sec."
        };

        public static readonly string[] MindFlayDescriptions = {
            "Assaults the target's mind with Shadow energy, causing 75 Shadow damage over 3 sec and slowering their movement speed by 50%."
        };

        public static readonly string[] ImprovedFadeDescriptions = {
            "Decreases the cooldown of your Fade ability by 3 sec.",
            "Decreases the cooldown of your Fade ability by 6 sec."
        };

        public static readonly string[] ShadowReachDescriptions = {
            "Increases the reach of your Shadow damage spells by 6%.",
            "Increases the reach of your Shadow damage spells by 13%.",
            "Increases the reach of your Shadow damage spells by 20%."
        };

        public static readonly string[] ShadowWeavingDescriptions = {
            "Your Shadow damage spells have a 20% chance to cause your target to be vulnerable to Shadow damage. This vulnerability increases the Shadow damage dealt to your target by 3% and lasts 15 sec. Stacks up to 5 times.",
            "Your Shadow damage spells have a 40% chance to cause your target to be vulnerable to Shadow damage. This vulnerability increases the Shadow damage dealt to your target by 3% and lasts 15 sec. Stacks up to 5 times.",
            "Your Shadow damage spells have a 60% chance to cause your target to be vulnerable to Shadow damage. This vulnerability increases the Shadow damage dealt to your target by 3% and lasts 15 sec. Stacks up to 5 times.",
            "Your Shadow damage spells have a 80% chance to cause your target to be vulnerable to Shadow damage. This vulnerability increases the Shadow damage dealt to your target by 3% and lasts 15 sec. Stacks up to 5 times.",
            "Your Shadow damage spells have a 100% chance to cause your target to be vulnerable to Shadow damage. This vulnerability increases the Shadow damage dealt to your target by 3% and lasts 15 sec. Stacks up to 5 times."
        };

        public static readonly string[] SilenceDescriptions = {
            "Silences the target, preventing them from casting spells for 5 sec."
        };

        public static readonly string[] VampiricEmbraceDescriptions = {
            "Afflicts your target with Shadow energy that causes all party members to be healed for 20% of any Shadow spell damage you deal for 1 min."
        };

        public static readonly string[] ImprovedVampiricEmbraceDescriptions = {
            "Increases the percentage healed by Vampiric Embrace by an additional 5%.",
            "Increases the percentage healed by Vampiric Embrace by an additional 10%."
        };

        public static readonly string[] DarknessDescriptions = {
            "Increases your Shadow spell damage by 2%.",
            "Increases your Shadow spell damage by 4%.",
            "Increases your Shadow spell damage by 6%.",
            "Increases your Shadow spell damage by 8%.",
            "Increases your Shadow spell damage by 10%."
        };

        public static readonly string[] ShadowformDescriptions = {
            "Assume a Shadowform, increasing your Shadow damge by 15% and reducing Physical damage done to you by 15%. However, you may not cast Holy spells while in this form."
        };

        public static string GetAbilityDesc(int abilityPosition, int abilityPoints)
        {
            if (abilityPosition == 0)
            {
                if (abilityPoints < SpiritTapDescriptions.Length)
                {
                    return SpiritTapDescriptions[abilityPoints];
                }
                else
                {
                    return SpiritTapDescriptions[SpiritTapDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 1)
            {
                if (abilityPoints < BlackoutDescriptions.Length)
                {
                    return BlackoutDescriptions[abilityPoints];
                }
                else
                {
                    return BlackoutDescriptions[BlackoutDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 2)
            {
                if (abilityPoints < ShadowAffinityDescriptions.Length)
                {
                    return ShadowAffinityDescriptions[abilityPoints];
                }
                else
                {
                    return ShadowAffinityDescriptions[ShadowAffinityDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 3)
            {
                if (abilityPoints < ImprovedShadowWordPainDescriptions.Length)
                {
                    return ImprovedShadowWordPainDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedShadowWordPainDescriptions[ImprovedShadowWordPainDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 4)
            {
                if (abilityPoints < ShadowFocusDescriptions.Length)
                {
                    return ShadowFocusDescriptions[abilityPoints];
                }
                else
                {
                    return ShadowFocusDescriptions[ShadowFocusDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 5)
            {
                if (abilityPoints < ImprovedPsychicScreamDescriptions.Length)
                {
                    return ImprovedPsychicScreamDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedPsychicScreamDescriptions[ImprovedPsychicScreamDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 6)
            {
                if (abilityPoints < ImprovedMindBlastDescriptions.Length)
                {
                    return ImprovedMindBlastDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedMindBlastDescriptions[ImprovedMindBlastDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 7)
            {
                if (abilityPoints < MindFlayDescriptions.Length)
                {
                    return MindFlayDescriptions[abilityPoints];
                }
                else
                {
                    return MindFlayDescriptions[MindFlayDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 8)
            {
                if (abilityPoints < ImprovedFadeDescriptions.Length)
                {
                    return ImprovedFadeDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedFadeDescriptions[ImprovedFadeDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 9)
            {
                if (abilityPoints < ShadowReachDescriptions.Length)
                {
                    return ShadowReachDescriptions[abilityPoints];
                }
                else
                {
                    return ShadowReachDescriptions[ShadowReachDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 10)
            {
                if (abilityPoints < ShadowWeavingDescriptions.Length)
                {
                    return ShadowWeavingDescriptions[abilityPoints];
                }
                else
                {
                    return ShadowWeavingDescriptions[ShadowWeavingDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 11)
            {
                if (abilityPoints < SilenceDescriptions.Length)
                {
                    return SilenceDescriptions[abilityPoints];
                }
                else
                {
                    return SilenceDescriptions[SilenceDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 12)
            {
                if (abilityPoints < VampiricEmbraceDescriptions.Length)
                {
                    return VampiricEmbraceDescriptions[abilityPoints];
                }
                else
                {
                    return VampiricEmbraceDescriptions[VampiricEmbraceDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 13)
            {
                if (abilityPoints < ImprovedVampiricEmbraceDescriptions.Length)
                {
                    return ImprovedVampiricEmbraceDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedVampiricEmbraceDescriptions[ImprovedVampiricEmbraceDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 14)
            {
                if (abilityPoints < DarknessDescriptions.Length)
                {
                    return DarknessDescriptions[abilityPoints];
                }
                else
                {
                    return DarknessDescriptions[DarknessDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 15)
            {
                if (abilityPoints < ShadowformDescriptions.Length)
                {
                    return ShadowformDescriptions[abilityPoints];
                }
                else
                {
                    return ShadowformDescriptions[ShadowformDescriptions.Length - 1];
                }
            }
            else
            {
                return "No Description available";
            }
        }
    }

    public static class HolyPala
    {
        public static readonly string[] AbilityNames = {
            "Divine Strenght",
            "Divine Intellect",
            "Spiritual Focus",
            "Improved Seal of Righteousness",
            "Healing Light",
            "Consecration",
            "Improved Lay on Hands",
            "Unyielding Faith",
            "Illumination",
            "Improved Blessing of Wisdom",
            "Divine Favor",
            "Lasting Judgement",
            "Holy Power",
            "Holy Shock"
        };

        public static readonly string[] DivineStrenghtDescriptions = {
            "Increases your Strenght by 2%.",
            "Increases your Strenght by 4%.",
            "Increases your Strenght by 6%.",
            "Increases your Strenght by 8%.",
            "Increases your Strenght by 10%."
        };

        public static readonly string[] DivineIntellectDescriptions = {
            "Increases your total Intellect by 2%.",
            "Increases your total Intellect by 4%.",
            "Increases your total Intellect by 6%.",
            "Increases your total Intellect by 8%.",
            "Increases your total Intellect by 10%."
        };

        public static readonly string[] SpiritualFocusDescriptions = {
            "Gives your Flash of Light and Holy Light spells a 14% chance to not lose casting time when you take damage.",
            "Gives your Flash of Light and Holy Light spells a 28% chance to not lose casting time when you take damage.",
            "Gives your Flash of Light and Holy Light spells a 42% chance to not lose casting time when you take damage.",
            "Gives your Flash of Light and Holy Light spells a 56% chance to not lose casting time when you take damage.",
            "Gives your Flash of Light and Holy Light spells a 70% chance to not lose casting time when you take damage."
        };

        public static readonly string[] ImprovedSealOfRighteousnessDescriptions = {
           "Increases the damage done by your Seal of Righteousness and Judgement of Righteousness by 3%.",
           "Increases the damage done by your Seal of Righteousness and Judgement of Righteousness by 6%.",
           "Increases the damage done by your Seal of Righteousness and Judgement of Righteousness by 9%.",
           "Increases the damage done by your Seal of Righteousness and Judgement of Righteousness by 12%.",
           "Increases the damage done by your Seal of Righteousness and Judgement of Righteousness by 15%."
        };

        public static readonly string[] HealingLightDescriptions = {
           "Increases the amount healed by your Flash of Light and Holy Light spells by 4%.",
           "Increases the amount healed by your Flash of Light and Holy Light spells by 8%.",
           "Increases the amount healed by your Flash of Light and Holy Light spells by 12%."
        };

        public static readonly string[] ConsecrationDescriptions = {
           "Consecrates the land beneath the Paladin, doing 64 Holy damage over 8 sec to enemies who enter the area."
        };

        public static readonly string[] ImprovedLayOnHandsDescriptions = {
           "Gives the target of your Lay on Hands spell a 15% bonus to their armor value from items for 2 min. In addition, the cooldown for your Lay on Hands spell is reduced by 10 min.",
           "Gives the target of your Lay on Hands spell a 30% bonus to their armor value from items for 2 min. In addition, the cooldown for your Lay on Hands spell is reduced by 20 min."
        };

        public static readonly string[] UnyieldingFaithDescriptions = {
           "Increases your chance to resist Fear and Disorient effects by an additional 5%.",
           "Increases your chance to resist Fear and Disorient effects by an additional 10%."
        };

        public static readonly string[] IlluminationDescriptions = {
           "After getting a critical effect from your Flash of Light, Holy Light or Holy Shock heal spell, gives you a 20% chance to gain Mana equal to the base cost of the spell.",
           "After getting a critical effect from your Flash of Light, Holy Light or Holy Shock heal spell, gives you a 40% chance to gain Mana equal to the base cost of the spell.",
           "After getting a critical effect from your Flash of Light, Holy Light or Holy Shock heal spell, gives you a 60% chance to gain Mana equal to the base cost of the spell.",
           "After getting a critical effect from your Flash of Light, Holy Light or Holy Shock heal spell, gives you a 80% chance to gain Mana equal to the base cost of the spell.",
           "After getting a critical effect from your Flash of Light, Holy Light or Holy Shock heal spell, gives you a 100% chance to gain Mana equal to the base cost of the spell."
        };

        public static readonly string[] ImprovedBlessingOfWisdomDescriptions = {
           "Increases the effect of your Blessing of Wisdom spell by 10%.",
           "Increases the effect of your Blessing of Wisdom spell by 20%."
        };

        public static readonly string[] DivineFavorDescriptions = {
           "When activated, gives your next Flash of Light, Holy Light or Holy Shock spell a 100% critical effect chance."
        };

        public static readonly string[] LastingJudgementDescriptions = {
           "Increases the duration of your Judgement of Light and Judgement of Wisdom by 10 sec.",
           "Increases the duration of your Judgement of Light and Judgement of Wisdom by 20 sec."
        };

        public static readonly string[] HolyPowerDescriptions = {
           "Increases the critical effect chance of your Holy spells by 1%.",
           "Increases the critical effect chance of your Holy spells by 2%.",
           "Increases the critical effect chance of your Holy spells by 3%.",
           "Increases the critical effect chance of your Holy spells by 4%.",
           "Increases the critical effect chance of your Holy spells by 5%."
        };

        public static readonly string[] HolyShockDescriptions = {
           "Blasts the target with Holy energy, causing 204 to 221 Holy damage to an enemy or 204 to 221 healing to an ally."
        };

        public static string GetAbilityDesc(int abilityPosition, int abilityPoints)
        {
            if (abilityPosition == 0)
            {
                if (abilityPoints < DivineStrenghtDescriptions.Length)
                {
                    return DivineStrenghtDescriptions[abilityPoints];
                }
                else
                {
                    return DivineStrenghtDescriptions[DivineStrenghtDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 1)
            {
                if (abilityPoints < DivineIntellectDescriptions.Length)
                {
                    return DivineIntellectDescriptions[abilityPoints];
                }
                else
                {
                    return DivineIntellectDescriptions[DivineIntellectDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 2)
            {
                if (abilityPoints < SpiritualFocusDescriptions.Length)
                {
                    return SpiritualFocusDescriptions[abilityPoints];
                }
                else
                {
                    return SpiritualFocusDescriptions[SpiritualFocusDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 3)
            {
                if (abilityPoints < ImprovedSealOfRighteousnessDescriptions.Length)
                {
                    return ImprovedSealOfRighteousnessDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedSealOfRighteousnessDescriptions[ImprovedSealOfRighteousnessDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 4)
            {
                if (abilityPoints < HealingLightDescriptions.Length)
                {
                    return HealingLightDescriptions[abilityPoints];
                }
                else
                {
                    return HealingLightDescriptions[HealingLightDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 5)
            {
                if (abilityPoints < ConsecrationDescriptions.Length)
                {
                    return ConsecrationDescriptions[abilityPoints];
                }
                else
                {
                    return ConsecrationDescriptions[ConsecrationDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 6)
            {
                if (abilityPoints < ImprovedLayOnHandsDescriptions.Length)
                {
                    return ImprovedLayOnHandsDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedLayOnHandsDescriptions[ImprovedLayOnHandsDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 7)
            {
                if (abilityPoints < UnyieldingFaithDescriptions.Length)
                {
                    return UnyieldingFaithDescriptions[abilityPoints];
                }
                else
                {
                    return UnyieldingFaithDescriptions[UnyieldingFaithDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 8)
            {
                if (abilityPoints < IlluminationDescriptions.Length)
                {
                    return IlluminationDescriptions[abilityPoints];
                }
                else
                {
                    return IlluminationDescriptions[IlluminationDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 9)
            {
                if (abilityPoints < ImprovedBlessingOfWisdomDescriptions.Length)
                {
                    return ImprovedBlessingOfWisdomDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedBlessingOfWisdomDescriptions[ImprovedBlessingOfWisdomDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 10)
            {
                if (abilityPoints < DivineFavorDescriptions.Length)
                {
                    return DivineFavorDescriptions[abilityPoints];
                }
                else
                {
                    return DivineFavorDescriptions[DivineFavorDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 11)
            {
                if (abilityPoints < LastingJudgementDescriptions.Length)
                {
                    return LastingJudgementDescriptions[abilityPoints];
                }
                else
                {
                    return LastingJudgementDescriptions[LastingJudgementDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 12)
            {
                if (abilityPoints < HolyPowerDescriptions.Length)
                {
                    return HolyPowerDescriptions[abilityPoints];
                }
                else
                {
                    return HolyPowerDescriptions[HolyPowerDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 13)
            {
                if (abilityPoints < HolyShockDescriptions.Length)
                {
                    return HolyShockDescriptions[abilityPoints];
                }
                else
                {
                    return HolyShockDescriptions[HolyShockDescriptions.Length - 1];
                }
            }
            else
            {
                return "No Description available";
            }
        }
    }

    public static class Protection
    {
        public static readonly string[] AbilityNames = {
            "Improved Devotion Aura",
            "Redoubt",
            "Precision",
            "Guardian's Favor",
            "Toughness",
            "Blessing of Kings",
            "Improved Righteous Fury",
            "Shield Specialization",
            "Anticipation",
            "Improved Hammer of Justice",
            "Improved Concentration Aura",
            "Blessing of Sanctuary",
            "Reckoning",
            "One-Handed Weapon Specialization",
            "Holy Shield"
        };

        public static readonly string[] ImprovedDevotionAuraDescriptions = {
            "Increases the Armor bonus of your Devotion Aura by 5%.",
            "Increases the Armor bonus of your Devotion Aura by 10%.",
            "Increases the Armor bonus of your Devotion Aura by 15%.",
            "Increases the Armor bonus of your Devotion Aura by 20%.",
            "Increases the Armor bonus of your Devotion Aura by 25%."
        };

        public static readonly string[] RedoubtDescriptions = {
            "Increases your chance to block attacks with your shield by 6% after being the victim of a critical strike. Lasts 10 sec or 5 blocks.",
            "Increases your chance to block attacks with your shield by 12% after being the victim of a critical strike. Lasts 10 sec or 5 blocks.",
            "Increases your chance to block attacks with your shield by 18% after being the victim of a critical strike. Lasts 10 sec or 5 blocks.",
            "Increases your chance to block attacks with your shield by 24% after being the victim of a critical strike. Lasts 10 sec or 5 blocks.",
            "Increases your chance to block attacks with your shield by 30% after being the victim of a critical strike. Lasts 10 sec or 5 blocks."
        };

        public static readonly string[] PrecisionDescriptions = {
            "Increases your chance to hit with melee weapons by 1%.",
            "Increases your chance to hit with melee weapons by 2%.",
            "Increases your chance to hit with melee weapons by 3%."
        };

        public static readonly string[] GuardiansFavorDescriptions = {
            "Reduces the cooldown of your Blessing of Protection by 60 sec and increases the duration of your Blessing of Freedom by 3 sec.",
            "Reduces the cooldown of your Blessing of Protection by 120 sec and increases the duration of your Blessing of Freedom by 6 sec."
        };

        public static readonly string[] ToughnessDescriptions = {
            "Increases your armor value from items by 2%.",
            "Increases your armor value from items by 4%.",
            "Increases your armor value from items by 6%.",
            "Increases your armor value from items by 8%.",
            "Increases your armor value from items by 10%."
        };

        public static readonly string[] BlessingOfKingsDescriptions = {
            "Places a Belssing on the friendly target, increasing total stats by 10% for 5 min. Players may only have one Blessing on them per Paladin at any one time."
        };

        public static readonly string[] ImprovedRighteousFuryDescriptions = {
            "Increases the amount of threat generated by your Righteous Fury spell by 16%.",
            "Increases the amount of threat generated by your Righteous Fury spell by 33%.",
            "Increases the amount of threat generated by your Righteous Fury spell by 50%."
        };

        public static readonly string[] ShieldSpecializationDescriptions = {
            "Increases the amount of damage absorbed by your shield by 10%.",
            "Increases the amount of damage absorbed by your shield by 20%.",
            "Increases the amount of damage absorbed by your shield by 30%."
        };

        public static readonly string[] AnticipationDescriptions = {
            "Increases your Defense skill by 2.",
            "Increases your Defense skill by 4.",
            "Increases your Defense skill by 6.",
            "Increases your Defense skill by 8.",
            "Increases your Defense skill by 10."
        };

        public static readonly string[] ImprovedHammerOfJusticeDescriptions = {
            "Decreases the cooldown of your Hammer of Justice spell by 5 sec.",
            "Decreases the cooldown of your Hammer of Justice spell by 10 sec.",
            "Decreases the cooldown of your Hammer of Justice spell by 15 sec."
        };

        public static readonly string[] ImprovedConcentrationAuraDescriptions = {
            "Increases the effect of your Concentration Aura by an additional 5% and gives all group members afflicted by the aura an additional 5% chance resist Silence and Interrupt effects.",
            "Increases the effect of your Concentration Aura by an additional 10% and gives all group members afflicted by the aura an additional 10% chance resist Silence and Interrupt effects.",
            "Increases the effect of your Concentration Aura by an additional 15% and gives all group members afflicted by the aura an additional 15% chance resist Silence and Interrupt effects."
        };

        public static readonly string[] BlessingOfSanctuaryDescriptions = {
            "Places a Blessing on the friendly target, reducing damage dealt from all sources by up to 10 for 5 min. In addition, when the target blocks a melee attack the attacker will take 14 Holy damage. Players may only have one Blessing on them per Paladin at any one time."
        };

        public static readonly string[] ReckoningDescriptions = {
            "Gives you a 20% chance to gain an extra attack after being the victim of a critical strike.",
            "Gives you a 40% chance to gain an extra attack after being the victim of a critical strike.",
            "Gives you a 60% chance to gain an extra attack after being the victim of a critical strike.",
            "Gives you a 80% chance to gain an extra attack after being the victim of a critical strike.",
            "Gives you a 100% chance to gain an extra attack after being the victim of a critical strike."
        };

        public static readonly string[] OneHandedWeaponSpecializationDescriptions = {
            "Increases the damage you deal with one-handed melee weapons by 2%.",
            "Increases the damage you deal with one-handed melee weapons by 4%.",
            "Increases the damage you deal with one-handed melee weapons by 6%.",
            "Increases the damage you deal with one-handed melee weapons by 8%.",
            "Increases the damage you deal with one-handed melee weapons by 10%."
        };

        public static readonly string[] HolyShieldDescriptions = {
            "Increases chance to block by 30% for 10 sec and deals 65 Holy damage for each attack blocked while active. Damage caused by Holy Shield causes 20% additional threat. Each block expends a charge. 4 charges."
        };

        public static string GetAbilityDesc(int abilityPosition, int abilityPoints)
        {
            if (abilityPosition == 0)
            {
                if (abilityPoints < ImprovedDevotionAuraDescriptions.Length)
                {
                    return ImprovedDevotionAuraDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedDevotionAuraDescriptions[ImprovedDevotionAuraDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 1)
            {
                if (abilityPoints < RedoubtDescriptions.Length)
                {
                    return RedoubtDescriptions[abilityPoints];
                }
                else
                {
                    return RedoubtDescriptions[RedoubtDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 2)
            {
                if (abilityPoints < PrecisionDescriptions.Length)
                {
                    return PrecisionDescriptions[abilityPoints];
                }
                else
                {
                    return PrecisionDescriptions[PrecisionDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 3)
            {
                if (abilityPoints < GuardiansFavorDescriptions.Length)
                {
                    return GuardiansFavorDescriptions[abilityPoints];
                }
                else
                {
                    return GuardiansFavorDescriptions[GuardiansFavorDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 4)
            {
                if (abilityPoints < ToughnessDescriptions.Length)
                {
                    return ToughnessDescriptions[abilityPoints];
                }
                else
                {
                    return ToughnessDescriptions[ToughnessDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 5)
            {
                if (abilityPoints < BlessingOfKingsDescriptions.Length)
                {
                    return BlessingOfKingsDescriptions[abilityPoints];
                }
                else
                {
                    return BlessingOfKingsDescriptions[BlessingOfKingsDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 6)
            {
                if (abilityPoints < ImprovedRighteousFuryDescriptions.Length)
                {
                    return ImprovedRighteousFuryDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedRighteousFuryDescriptions[ImprovedRighteousFuryDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 7)
            {
                if (abilityPoints < ShieldSpecializationDescriptions.Length)
                {
                    return ShieldSpecializationDescriptions[abilityPoints];
                }
                else
                {
                    return ShieldSpecializationDescriptions[ShieldSpecializationDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 8)
            {
                if (abilityPoints < AnticipationDescriptions.Length)
                {
                    return AnticipationDescriptions[abilityPoints];
                }
                else
                {
                    return AnticipationDescriptions[AnticipationDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 9)
            {
                if (abilityPoints < ImprovedHammerOfJusticeDescriptions.Length)
                {
                    return ImprovedHammerOfJusticeDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedHammerOfJusticeDescriptions[ImprovedHammerOfJusticeDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 10)
            {
                if (abilityPoints < ImprovedConcentrationAuraDescriptions.Length)
                {
                    return ImprovedConcentrationAuraDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedConcentrationAuraDescriptions[ImprovedConcentrationAuraDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 11)
            {
                if (abilityPoints < BlessingOfSanctuaryDescriptions.Length)
                {
                    return BlessingOfSanctuaryDescriptions[abilityPoints];
                }
                else
                {
                    return BlessingOfSanctuaryDescriptions[BlessingOfSanctuaryDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 12)
            {
                if (abilityPoints < ReckoningDescriptions.Length)
                {
                    return ReckoningDescriptions[abilityPoints];
                }
                else
                {
                    return ReckoningDescriptions[ReckoningDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 13)
            {
                if (abilityPoints < OneHandedWeaponSpecializationDescriptions.Length)
                {
                    return OneHandedWeaponSpecializationDescriptions[abilityPoints];
                }
                else
                {
                    return OneHandedWeaponSpecializationDescriptions[OneHandedWeaponSpecializationDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 14)
            {
                if (abilityPoints < HolyShieldDescriptions.Length)
                {
                    return HolyShieldDescriptions[abilityPoints];
                }
                else
                {
                    return HolyShieldDescriptions[HolyShieldDescriptions.Length - 1];
                }
            }
            else
            {
                return "No Description available";
            }
        }
    }

    public static class Retribution
    {
        public static readonly string[] AbilityNames = {
            "Improved Blessing of Might",
            "Benediction",
            "Improved Judgement",
            "Improved Seal of the Crusader",
            "Deflection",
            "Vindication",
            "Conviction",
            "Seal of Command",
            "Pursuit of Justice",
            "Eye for an Eye",
            "Improved Retribution Aura",
            "Two-Handed Weapon Specialization",
            "Sactity Aura",
            "Vengeance",
            "Repentance"
        };

        public static readonly string[] BenedictionDescriptions = {
            "Reduces the mana cost of your Judgment and Seal spell by 3%.",
            "Reduces the mana cost of your Judgment and Seal spell by 6%.",
            "Reduces the mana cost of your Judgment and Seal spell by 9%.",
            "Reduces the mana cost of your Judgment and Seal spell by 12.",
            "Reduces the mana cost of your Judgment and Seal spell by 15.%"
        };

        public static readonly string[] ImprovedBlessingofMightDescriptions = {
            "Increases the attack power bonus of your blessing of might by 4%.",
            "Increases the attack power bonus of your blessing of might by 8%.",
            "Increases the attack power bonus of your blessing of might by 12%.",
            "Increases the attack power bonus of your blessing of might by 16%.",
            "Increases the attack power bonus of your blessing of might by 20%."
        };

        public static readonly string[] ImprovedJudgmentDescriptions = {
            "Decreases the cooldown of your Judgment spell by 1 sec.",
            "Decreases the cooldown of your Judgment spell by 2 sec."
        };

        public static readonly string[] ImprovedSealoftheCrusaiderDescriptions = {
            "Increases the melee attack power bonus from your Seal of the Crusader and the Holy damage increase of your Judgment of the Crusader by 5%.",
            "Increases the melee attack power bonus from your Seal of the Crusader and the Holy damage increase of your Judgment of the Crusader by 10%.",
            "Increases the melee attack power bonus from your Seal of the Crusader and the Holy damage increase of your Judgment of the Crusader by 15%."
        };

        public static readonly string[] DeflectionDescriptions = {
            "Increases your parry chance by 1%.",
            "Increases your parry chance by 2%.",
            "Increases your parry chance by 3%.",
            "Increases your parry chance by 4%.",
            "Increases your parry chance by 5%."
        };

        public static readonly string[] VindicationDescriptions = {
            "Gives the Paladin's melee attacks a chance to reduce the target's Strength and Agility by 5% for 10 sec.",
            "Gives the Paladin's melee attacks a chance to reduce the target's Strength and Agility by 10% for 10 sec.",
            "Gives the Paladin's melee attacks a chance to reduce the target's Strength and Agility by 15% for 10 sec."
        };

        public static readonly string[] ConvictionDescriptions = {
            "Increases the chance to get a critical strike with melee weapons by 1%.",
            "Increases the chance to get a critical strike with melee weapons by 2%.",
            "Increases the chance to get a critical strike with melee weapons by 3%.",
            "Increases the chance to get a critical strike with melee weapons by 4%.",
            "Increases the chance to get a critical strike with melee weapons by 5%."
        };

        public static readonly string[] SealofCommandDescriptions = {
            "Gives the Paladin a chance to deal additional Holy damage equal to 70% of normal weapon damage. Only 1 Seal can be active on the Paladin at any one time. Lasts 30 sec. Unleashing the Seal's energy will judge an enemy, instantly causing 46.5 to 55.5 Holy damage, 93 to 102 if the target is stunned or incapacitated."
        };

        public static readonly string[] PursuitofJusticeDescriptions = {
            "Increases movement and mounted speed by 4%. This does not stack with other movement speed increasing effects. ",
            "Increases movement and mounted speed by 8%. This does not stack with other movement speed increasing effects. "
        };

        public static readonly string[] EyeforanEyeDescriptions = {
            "All spell criticals against you cause 15% of the damage taken to the caster as well. The damage cause by Eye for an Eye will not exceed 50% of the Paladin's total health.",
            "All spell criticals against you cause 30% of the damage taken to the caster as well. The damage cause by Eye for an Eye will not exceed 50% of the Paladin's total health."
        };

        public static readonly string[] ImprovedRetributionAuraDescriptions = {
            "Increases the damage done by your Retribution Aura by 25%.",
            "Increases the damage done by your Retribution Aura by 50%."
        };

        public static readonly string[] TwoHandedWeaponSpecializationDescriptions = {
            "Increases the damage you deal with two-handed melee weapons by 2%.",
            "Increases the damage you deal with two-handed melee weapons by 4%.",
            "Increases the damage you deal with two-handed melee weapons by 6%."
        };

        public static readonly string[] SancityAuraDescriptions = {
            "Increases the Holy damage done by party members within 30 yards by 10%. Player may only have one Aura on them per Paladin at any one time."
        };

        public static readonly string[] VengeanceDescriptions = {
            "Gives you a 3% bonus to Physical and Holy damage you deal for 8 sec after dealing a critical strike from a weapon swing, spell or ability.",
            "Gives you a 6% bonus to Physical and Holy damage you deal for 8 sec after dealing a critical strike from a weapon swing, spell or ability.",
            "Gives you a 9% bonus to Physical and Holy damage you deal for 8 sec after dealing a critical strike from a weapon swing, spell or ability.",
            "Gives you a 12% bonus to Physical and Holy damage you deal for 8 sec after dealing a critical strike from a weapon swing, spell or ability.",
            "Gives you a 15% bonus to Physical and Holy damage you deal for 8 sec after dealing a critical strike from a weapon swing, spell or ability."
        };

        public static readonly string[] RepentanceDescriptions = {
            "Puts the enemy target in a state of meditation, incapacitating them for 6 sec. Any damage caused will awaken the target. Only works against Humanoids."
        };

        public static string GetAbilityDesc(int abilityPosition, int abilityPoints)
        {
            if (abilityPosition == 0)
            {
                if (abilityPoints < ImprovedBlessingofMightDescriptions.Length)
                {
                    return ImprovedBlessingofMightDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedBlessingofMightDescriptions[ImprovedBlessingofMightDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 1)
            {
                if (abilityPoints < BenedictionDescriptions.Length)
                {
                    return BenedictionDescriptions[abilityPoints];
                }
                else
                {
                    return BenedictionDescriptions[BenedictionDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 2)
            {
                if (abilityPoints < ImprovedJudgmentDescriptions.Length)
                {
                    return ImprovedJudgmentDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedJudgmentDescriptions[ImprovedJudgmentDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 3)
            {
                if (abilityPoints < ImprovedSealoftheCrusaiderDescriptions.Length)
                {
                    return ImprovedSealoftheCrusaiderDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedSealoftheCrusaiderDescriptions[ImprovedSealoftheCrusaiderDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 4)
            {
                if (abilityPoints < DeflectionDescriptions.Length)
                {
                    return DeflectionDescriptions[abilityPoints];
                }
                else
                {
                    return DeflectionDescriptions[DeflectionDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 5)
            {
                if (abilityPoints < VindicationDescriptions.Length)
                {
                    return VindicationDescriptions[abilityPoints];
                }
                else
                {
                    return VindicationDescriptions[VindicationDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 6)
            {
                if (abilityPoints < ConvictionDescriptions.Length)
                {
                    return ConvictionDescriptions[abilityPoints];
                }
                else
                {
                    return ConvictionDescriptions[ConvictionDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 7)
            {
                if (abilityPoints < SealofCommandDescriptions.Length)
                {
                    return SealofCommandDescriptions[abilityPoints];
                }
                else
                {
                    return SealofCommandDescriptions[SealofCommandDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 8)
            {
                if (abilityPoints < PursuitofJusticeDescriptions.Length)
                {
                    return PursuitofJusticeDescriptions[abilityPoints];
                }
                else
                {
                    return PursuitofJusticeDescriptions[PursuitofJusticeDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 9)
            {
                if (abilityPoints < EyeforanEyeDescriptions.Length)
                {
                    return EyeforanEyeDescriptions[abilityPoints];
                }
                else
                {
                    return EyeforanEyeDescriptions[EyeforanEyeDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 10)
            {
                if (abilityPoints < ImprovedRetributionAuraDescriptions.Length)
                {
                    return ImprovedRetributionAuraDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedRetributionAuraDescriptions[ImprovedRetributionAuraDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 11)
            {
                if (abilityPoints < TwoHandedWeaponSpecializationDescriptions.Length)
                {
                    return TwoHandedWeaponSpecializationDescriptions[abilityPoints];
                }
                else
                {
                    return TwoHandedWeaponSpecializationDescriptions[TwoHandedWeaponSpecializationDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 12)
            {
                if (abilityPoints < SancityAuraDescriptions.Length)
                {
                    return SancityAuraDescriptions[abilityPoints];
                }
                else
                {
                    return SancityAuraDescriptions[SancityAuraDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 13)
            {
                if (abilityPoints < VengeanceDescriptions.Length)
                {
                    return VengeanceDescriptions[abilityPoints];
                }
                else
                {
                    return VengeanceDescriptions[VengeanceDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 14)
            {
                if (abilityPoints < RepentanceDescriptions.Length)
                {
                    return RepentanceDescriptions[abilityPoints];
                }
                else
                {
                    return RepentanceDescriptions[RepentanceDescriptions.Length - 1];
                }
            }
            else
            {
                return "No Description available";
            }
        }
    }

    public static class Arcane
    {
        public static readonly string[] AbilityNames = {
            "Arcane Subtlety",
            "Arcane Focus",
            "Improved Arcane Missiles",
            "Wand Specialization",
            "Magic Absorption",
            "Arcane Concentration",
            "Magic Attunement",
            "Improved Arcane Explosion",
            "Arcane Resilience",
            "Improved Mana Shield",
            "Improved Counterspell",
            "Arcane Meditation",
            "Presence of Mind",
            "Arcane Mind",
            "Arcane Instability",
            "Arcane Power"
        };


        public static readonly string[] ArcaneSubtletyDescriptions = {
            "Reduces your target's resistance to all your spells by 5 and reduces the threat caused by your Arcane spells by 20%.",
            "Reduces your target's resistance to all your spells by 10 and reduces the threat caused by your Arcane spells by 40%."
        };

        public static readonly string[] ArcaneFocusDescriptions = {
            "Reduces the chance that your opponent can resist your Arcane spells by 2%.",
            "Reduces the chance that your opponent can resist your Arcane spells by 4%.",
            "Reduces the chance that your opponent can resist your Arcane spells by 6%.",
            "Reduces the chance that your opponent can resist your Arcane spells by 8%.",
            "Reduces the chance that your opponent can resist your Arcane spells by 10%."
        };

        public static readonly string[] ImprovedArcaneMissilesDescriptions = {
            "Gives you a 20% chance to avoid interruption caused be damage while channeling Arcane Missiles.",
            "Gives you a 40% chance to avoid interruption caused be damage while channeling Arcane Missiles.",
            "Gives you a 60% chance to avoid interruption caused be damage while channeling Arcane Missiles.",
            "Gives you a 80% chance to avoid interruption caused be damage while channeling Arcane Missiles.",
            "Gives you a 100% chance to avoid interruption caused be damage while channeling Arcane Missiles."
        };

        public static readonly string[] WandSpecializationDescriptions = {
            "Increases your damage with Wands by 13%.",
            "Increases your damage with Wands by 25%."
        };

        public static readonly string[] MagicAbsorptionDescriptions = {
            "Increases all resistances by 2 and causes all spells you fully resist to restore 1% of your total mana. 1 sec. cooldown.",
            "Increases all resistances by 4 and causes all spells you fully resist to restore 2% of your total mana. 1 sec. cooldown.",
            "Increases all resistances by 6 and causes all spells you fully resist to restore 3% of your total mana. 1 sec. cooldown.",
            "Increases all resistances by 8 and causes all spells you fully resist to restore 4% of your total mana. 1 sec. cooldown.",
            "Increases all resistances by 10 and causes all spells you fully resist to restore 5% of your total mana. 1 sec. cooldown."
        };

        public static readonly string[] ArcaneConcentrationDescriptions = {
            "Gives you a 2% chance of entering a Clearcasting state after any damage spell hits a target. The Clearcasting state reduces the mana cost of your next damage spell by 100%.",
            "Gives you a 4% chance of entering a Clearcasting state after any damage spell hits a target. The Clearcasting state reduces the mana cost of your next damage spell by 100%.",
            "Gives you a 6% chance of entering a Clearcasting state after any damage spell hits a target. The Clearcasting state reduces the mana cost of your next damage spell by 100%.",
            "Gives you a 8% chance of entering a Clearcasting state after any damage spell hits a target. The Clearcasting state reduces the mana cost of your next damage spell by 100%.",
            "Gives you a 10% chance of entering a Clearcasting state after any damage spell hits a target. The Clearcasting state reduces the mana cost of your next damage spell by 100%."
        };

        public static readonly string[] MagicAttunementDescriptions = {
            "Increases the effect of your Amplify Magic and Dampen Magic spells by 25%.",
            "Increases the effect of your Amplify Magic and Dampen Magic spells by 50%."
        };

        public static readonly string[] ImprovedArcaneExplosionDescriptions = {
            "Increases the critical strike chance of your Arcane Explosion spell by an additional 2%.",
            "Increases the critical strike chance of your Arcane Explosion spell by an additional 4%.",
            "Increases the critical strike chance of your Arcane Explosion spell by an additional 6%."
        };

        public static readonly string[] ArcaneResilienceDescriptions = {
            "Increases your armor by an amount equal to 50% of your Intellect."
        };

        public static readonly string[] ImprovedManaShieldDescriptions = {
            "Decreases the mana lost per point of damage taken when Mana Shield is active by 10%.",
            "Decreases the mana lost per point of damage taken when Mana Shield is active by 20%."
        };

        public static readonly string[] ImprovedCounterspellDescriptions = {
            "Gives your Counterspell a 50% chance to silence the target for 4 sec.",
            "Gives your Counterspell a 100% chance to silence the target for 4 sec."
        };

        public static readonly string[] ArcaneMeditationDescriptions = {
            "Allows 5% of your Mana regeneration to continue while casting.",
            "Allows 10% of your Mana regeneration to continue while casting.",
            "Allows 15% of your Mana regeneration to continue while casting."
        };

        public static readonly string[] PresenceOfMindDescriptions = {
            "When activated, your next Mage spell with a casting time less than 10 sec. becomes an instant cast spell."
        };

        public static readonly string[] ArcaneMindDescriptions = {
            "Increases your maximum Mana by 2%.",
            "Increases your maximum Mana by 4%.",
            "Increases your maximum Mana by 6%.",
            "Increases your maximum Mana by 8%.",
            "Increases your maximum Mana by 10%."
        };

        public static readonly string[] ArcaneInstabilityDescriptions = {
            "Increases your spell damage and critical strike chance by 1%.",
            "Increases your spell damage and critical strike chance by 2%.",
            "Increases your spell damage and critical strike chance by 3%."
        };

        public static readonly string[] ArcanePowerDescriptions = {
            "When activated, your spells deal 30% more damage while costing 30% more mana to cast. This effect lasts 15 sec."
        };

        public static string GetAbilityDesc(int abilityPosition, int abilityPoints)
        {
            if (abilityPosition == 0)
            {
                if (abilityPoints < ArcaneSubtletyDescriptions.Length)
                {
                    return ArcaneSubtletyDescriptions[abilityPoints];
                }
                else
                {
                    return ArcaneSubtletyDescriptions[ArcaneSubtletyDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 1)
            {
                if (abilityPoints < ArcaneFocusDescriptions.Length)
                {
                    return ArcaneFocusDescriptions[abilityPoints];
                }
                else
                {
                    return ArcaneFocusDescriptions[ArcaneFocusDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 2)
            {
                if (abilityPoints < ImprovedArcaneMissilesDescriptions.Length)
                {
                    return ImprovedArcaneMissilesDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedArcaneMissilesDescriptions[ImprovedArcaneMissilesDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 3)
            {
                if (abilityPoints < WandSpecializationDescriptions.Length)
                {
                    return WandSpecializationDescriptions[abilityPoints];
                }
                else
                {
                    return WandSpecializationDescriptions[WandSpecializationDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 4)
            {
                if (abilityPoints < MagicAbsorptionDescriptions.Length)
                {
                    return MagicAbsorptionDescriptions[abilityPoints];
                }
                else
                {
                    return MagicAbsorptionDescriptions[MagicAbsorptionDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 5)
            {
                if (abilityPoints < ArcaneConcentrationDescriptions.Length)
                {
                    return ArcaneConcentrationDescriptions[abilityPoints];
                }
                else
                {
                    return ArcaneConcentrationDescriptions[ArcaneConcentrationDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 6)
            {
                if (abilityPoints < MagicAttunementDescriptions.Length)
                {
                    return MagicAttunementDescriptions[abilityPoints];
                }
                else
                {
                    return MagicAttunementDescriptions[MagicAttunementDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 7)
            {
                if (abilityPoints < ImprovedArcaneExplosionDescriptions.Length)
                {
                    return ImprovedArcaneExplosionDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedArcaneExplosionDescriptions[ImprovedArcaneExplosionDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 8)
            {
                if (abilityPoints < ArcaneResilienceDescriptions.Length)
                {
                    return ArcaneResilienceDescriptions[abilityPoints];
                }
                else
                {
                    return ArcaneResilienceDescriptions[ArcaneResilienceDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 9)
            {
                if (abilityPoints < ImprovedManaShieldDescriptions.Length)
                {
                    return ImprovedManaShieldDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedManaShieldDescriptions[ImprovedManaShieldDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 10)
            {
                if (abilityPoints < ImprovedCounterspellDescriptions.Length)
                {
                    return ImprovedCounterspellDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedCounterspellDescriptions[ImprovedCounterspellDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 11)
            {
                if (abilityPoints < ArcaneMeditationDescriptions.Length)
                {
                    return ArcaneMeditationDescriptions[abilityPoints];
                }
                else
                {
                    return ArcaneMeditationDescriptions[ArcaneMeditationDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 12)
            {
                if (abilityPoints < PresenceOfMindDescriptions.Length)
                {
                    return PresenceOfMindDescriptions[abilityPoints];
                }
                else
                {
                    return PresenceOfMindDescriptions[PresenceOfMindDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 13)
            {
                if (abilityPoints < ArcaneMindDescriptions.Length)
                {
                    return ArcaneMindDescriptions[abilityPoints];
                }
                else
                {
                    return ArcaneMindDescriptions[ArcaneMindDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 14)
            {
                if (abilityPoints < ArcaneInstabilityDescriptions.Length)
                {
                    return ArcaneInstabilityDescriptions[abilityPoints];
                }
                else
                {
                    return ArcaneInstabilityDescriptions[ArcaneInstabilityDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 15)
            {
                if (abilityPoints < ArcanePowerDescriptions.Length)
                {
                    return ArcanePowerDescriptions[abilityPoints];
                }
                else
                {
                    return ArcanePowerDescriptions[ArcanePowerDescriptions.Length - 1];
                }
            }
            else
            {
                return "No Description available";
            }
        }
    }

    public static class Fire
    {
        public static readonly string[] AbilityNames = {
            "Improved Fireball",
            "Impact",
            "Ignite",
            "Flame Throwing",
            "Improved Fire Blast",
            "Incinerate",
            "Improved Flamestrike",
            "Pyroblast",
            "Burning Soul",
            "Improved Scorch",
            "Improved Fire Ward",
            "Master of Elements",
            "Critical Mass",
            "Blast Wave",
            "Fire Power",
            "Combustion"
        };

        public static readonly string[] ImprovedFireballDescriptions = {
            "Reduces the casting time of your Fireball spell by 0.1 sec.",
            "Reduces the casting time of your Fireball spell by 0.2 sec.",
            "Reduces the casting time of your Fireball spell by 0.3 sec.",
            "Reduces the casting time of your Fireball spell by 0.4 sec.",
            "Reduces the casting time of your Fireball spell by 0.5 sec."
        };

        public static readonly string[] ImpactDescriptions = {
            "Gives your Fire spells a 2% chance to stun the target for 2 sec.",
            "Gives your Fire spells a 4% chance to stun the target for 2 sec.",
            "Gives your Fire spells a 6% chance to stun the target for 2 sec.",
            "Gives your Fire spells a 8% chance to stun the target for 2 sec.",
            "Gives your Fire spells a 10% chance to stun the target for 2 sec."
        };

        public static readonly string[] IgniteDescriptions = {
            "Your critical strikes from Fire damage spells cause the target to burn for an additional 8% of your spell's damage over 4 sec.",
            "Your critical strikes from Fire damage spells cause the target to burn for an additional 16% of your spell's damage over 4 sec.",
            "Your critical strikes from Fire damage spells cause the target to burn for an additional 24% of your spell's damage over 4 sec.",
            "Your critical strikes from Fire damage spells cause the target to burn for an additional 32% of your spell's damage over 4 sec.",
            "Your critical strikes from Fire damage spells cause the target to burn for an additional 40% of your spell's damage over 4 sec."
        };

        public static readonly string[] FlameThrowingDescriptions = {
            "Increases the range of your Fire spells by 3 yards.",
            "Increases the range of your Fire spells by 6 yards."
        };

        public static readonly string[] ImprovedFireBlastDescriptions = {
            "Reduces the cooldown of your Fire Blast spell by 0.5 sec.",
            "Reduces the cooldown of your Fire Blast spell by 1 sec.",
            "Reduces the cooldown of your Fire Blast spell by 1.5 sec."
        };

        public static readonly string[] IncinerateDescriptions = {
            "Increases the critical strike chance of your Fire Blast and Scorch spells by 2%.",
            "Increases the critical strike chance of your Fire Blast and Scorch spells by 4%."
        };

        public static readonly string[] ImprovedFlamestrikeDescriptions = {
            "Increases the critical strike chance of your Flamestrike ability by 5%.",
            "Increases the critical strike chance of your Flamestrike ability by 10%.",
            "Increases the critical strike chance of your Flamestrike ability by 15%."
        };

        public static readonly string[] PyroblastDescriptions = {
            "Hurls an immense fiery boulder that causes 141 to 188 Fire damage and an additional 56 Fire damage over 12 sec."
        };

        public static readonly string[] BurningSoulDescriptions = {
            "Gives your Fire spells a 35% chance to not lose casting time when you take damage and reduces the threat cause by your Fire spells by 15%.",
            "Gives your Fire spells a 70% chance to not lose casting time when you take damage and reduces the threat cause by your Fire spells by 30%."
        };

        public static readonly string[] ImprovedScorchDescriptions = {
            "Your Scorch spells have a 33% chance to cause your target to be vulnerable to Fire damage. This vulnerability increases the Fire damage dealt to your target by 3% and lasts 30 sec. Stacks up to 3 times.",
            "Your Scorch spells have a 66% chance to cause your target to be vulnerable to Fire damage. This vulnerability increases the Fire damage dealt to your target by 3% and lasts 30 sec. Stacks up to 3 times.",
            "Your Scorch spells have a 100% chance to cause your target to be vulnerable to Fire damage. This vulnerability increases the Fire damage dealt to your target by 3% and lasts 30 sec. Stacks up to 3 times."
        };

        public static readonly string[] ImprovedFireWardDescriptions = {
            "Causes your Fire Ward to have a 10% chance to reflect Fire spells while active.",
            "Causes your Fire Ward to have a 20% chance to reflect Fire spells while active."
        };

        public static readonly string[] MasterOfElementsDescriptions = {
            "Your Fire and Frost spell criticals will refund 10% of their base mana cost.",
            "Your Fire and Frost spell criticals will refund 20% of their base mana cost.",
            "Your Fire and Frost spell criticals will refund 30% of their base mana cost."
        };

        public static readonly string[] CriticalMassDescriptions = {
            "Increases the critical strike chance of your Fire spells by 2%.",
            "Increases the critical strike chance of your Fire spells by 4%.",
            "Increases the critical strike chance of your Fire spells by 6%."
        };

        public static readonly string[] BlastWaveDescriptions = {
            "A wave of flame radiates outward from the caster, damaging all enemies caught within the blast for 154 to 187 Fire damage, and dazing them for 6 sec."
        };

                public static readonly string[] FirePowerDescriptions = {
            "Increases the damage done by your Fire spells by 2%.",
            "Increases the damage done by your Fire spells by 4%.",
            "Increases the damage done by your Fire spells by 6%.",
            "Increases the damage done by your Fire spells by 8%.",
            "Increases the damage done by your Fire spells by 10%."
        };

        public static readonly string[] CombustionDescriptions = {
            "When activated, this spell causes each of your Fire damage spell hits to increase your critical strike chance with Fire damage spells by 10%. This effect lasts until you have caused 3 critical strikes with Fire spells."
        };

        public static string GetAbilityDesc(int abilityPosition, int abilityPoints)
        {
            if (abilityPosition == 0)
            {
                if (abilityPoints < ImprovedFireballDescriptions.Length)
                {
                    return ImprovedFireballDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedFireballDescriptions[ImprovedFireballDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 1)
            {
                if (abilityPoints < ImpactDescriptions.Length)
                {
                    return ImpactDescriptions[abilityPoints];
                }
                else
                {
                    return ImpactDescriptions[ImpactDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 2)
            {
                if (abilityPoints < IgniteDescriptions.Length)
                {
                    return IgniteDescriptions[abilityPoints];
                }
                else
                {
                    return IgniteDescriptions[IgniteDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 3)
            {
                if (abilityPoints < FlameThrowingDescriptions.Length)
                {
                    return FlameThrowingDescriptions[abilityPoints];
                }
                else
                {
                    return FlameThrowingDescriptions[FlameThrowingDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 4)
            {
                if (abilityPoints < ImprovedFireBlastDescriptions.Length)
                {
                    return ImprovedFireBlastDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedFireBlastDescriptions[ImprovedFireBlastDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 5)
            {
                if (abilityPoints < IncinerateDescriptions.Length)
                {
                    return IncinerateDescriptions[abilityPoints];
                }
                else
                {
                    return IncinerateDescriptions[IncinerateDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 6)
            {
                if (abilityPoints < ImprovedFlamestrikeDescriptions.Length)
                {
                    return ImprovedFlamestrikeDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedFlamestrikeDescriptions[ImprovedFlamestrikeDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 7)
            {
                if (abilityPoints < PyroblastDescriptions.Length)
                {
                    return PyroblastDescriptions[abilityPoints];
                }
                else
                {
                    return PyroblastDescriptions[PyroblastDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 8)
            {
                if (abilityPoints < BurningSoulDescriptions.Length)
                {
                    return BurningSoulDescriptions[abilityPoints];
                }
                else
                {
                    return BurningSoulDescriptions[BurningSoulDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 9)
            {
                if (abilityPoints < ImprovedScorchDescriptions.Length)
                {
                    return ImprovedScorchDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedScorchDescriptions[ImprovedScorchDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 10)
            {
                if (abilityPoints < ImprovedFireWardDescriptions.Length)
                {
                    return ImprovedFireWardDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedFireWardDescriptions[ImprovedFireWardDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 11)
            {
                if (abilityPoints < MasterOfElementsDescriptions.Length)
                {
                    return MasterOfElementsDescriptions[abilityPoints];
                }
                else
                {
                    return MasterOfElementsDescriptions[MasterOfElementsDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 12)
            {
                if (abilityPoints < CriticalMassDescriptions.Length)
                {
                    return CriticalMassDescriptions[abilityPoints];
                }
                else
                {
                    return CriticalMassDescriptions[CriticalMassDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 13)
            {
                if (abilityPoints < BlastWaveDescriptions.Length)
                {
                    return BlastWaveDescriptions[abilityPoints];
                }
                else
                {
                    return BlastWaveDescriptions[BlastWaveDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 14)
            {
                if (abilityPoints < FirePowerDescriptions.Length)
                {
                    return FirePowerDescriptions[abilityPoints];
                }
                else
                {
                    return FirePowerDescriptions[FirePowerDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 15)
            {
                if (abilityPoints < CombustionDescriptions.Length)
                {
                    return CombustionDescriptions[abilityPoints];
                }
                else
                {
                    return CombustionDescriptions[CombustionDescriptions.Length - 1];
                }
            }
            else
            {
                return "No Description available";
            }
        }
    }

    public static class Frost
    {
        public static readonly string[] AbilityNames = {
            "Frost Warding",
            "Improved Frostbolt",
            "Elemental Precision",
            "Ice Shards",
            "Frostbite",
            "Improved Frost Nova",
            "Permafrost",
            "Piercing Ice",
            "Cold Snap",
            "Improved Blizzard",
            "Arctic Reach",
            "Frost Channeling",
            "Shatter",
            "Ice Block",
            "Improved Cone of Cold",
            "Winter's Chill",
            "Ice Barrier"
        };

        public static readonly string[] FrostWardingDescriptions = {
            "Increases the armor and resistances given by your Frost Armor and Ice Armor spells by 15%. In addition, gives your Frost Ward a 10% chance to reflect Frost spells and effects while active.",
            "Increases the armor and resistances given by your Frost Armor and Ice Armor spells by 30%. In addition, gives your Frost Ward a 20% chance to reflect Frost spells and effects while active."
        };

        public static readonly string[] ImprovedFrostboltDescriptions = {
            "Reduces the casting time of your Frostbolt spell by 0.1 sec.",
            "Reduces the casting time of your Frostbolt spell by 0.2 sec.",
            "Reduces the casting time of your Frostbolt spell by 0.3 sec.",
            "Reduces the casting time of your Frostbolt spell by 0.4 sec.",
            "Reduces the casting time of your Frostbolt spell by 0.5 sec."
        };

        public static readonly string[] ElementalPrecisionDescriptions = {
            "Reduces the chance that your opponent can resist your Frost and Fire spells by 2%.",
            "Reduces the chance that your opponent can resist your Frost and Fire spells by 4%.",
            "Reduces the chance that your opponent can resist your Frost and Fire spells by 6%."
        };

        public static readonly string[] IceShardsDescriptions = {
            "Increases the critical strike damage bonus of your Frost spells by 20%.",
            "Increases the critical strike damage bonus of your Frost spells by 40%.",
            "Increases the critical strike damage bonus of your Frost spells by 60%.",
            "Increases the critical strike damage bonus of your Frost spells by 80%.",
            "Increases the critical strike damage bonus of your Frost spells by 100%."
        };

        public static readonly string[] FrostbiteDescriptions = {
            "Gives your Chill effects a 5% chance to freeze the target for 5 sec.",
            "Gives your Chill effects a 10% chance to freeze the target for 5 sec.",
            "Gives your Chill effects a 15% chance to freeze the target for 5 sec."
        };

        public static readonly string[] ImprovedFrostNovaDescriptions = {
            "Reduces the cooldown of your Frost Nova spell by 2 sec.",
            "Reduces the cooldown of your Frost Nova spell by 4 sec."
        };

        public static readonly string[] PermafrostDescriptions = {
            "Increases the duration of your Chill effects by 1 sec and reduces the target's speed by an additional 4%.",
            "Increases the duration of your Chill effects by 2 sec and reduces the target's speed by an additional 7%.",
            "Increases the duration of your Chill effects by 3 sec and reduces the target's speed by an additional 10%."
        };

        public static readonly string[] PiercingIceDescriptions = {
            "Increases the damage done by your Frost spells by 2%.",
            "Increases the damage done by your Frost spells by 4%.",
            "Increases the damage done by your Frost spells by 6%."
        };

        public static readonly string[] ColdSnapDescriptions = {
            "When activated, this spell finishes the cooldown on all your Frost spells."
        };

        public static readonly string[] ImprovedBlizzardDescriptions = {
            "Adds a chill effect to your Blizzard spell. This effect lowers the target's movement speed by 30%. Lasts 2 sec.",
            "Adds a chill effect to your Blizzard spell. This effect lowers the target's movement speed by 50%. Lasts 2 sec.",
            "Adds a chill effect to your Blizzard spell. This effect lowers the target's movement speed by 65%. Lasts 2 sec."
        };

        public static readonly string[] ArcticReachDescriptions = {
            "Increases the range of your Frostbolt and Blizzard spells and the radius of your Frost Nova and Cone of Cold spells by 10%.",
            "Increases the range of your Frostbolt and Blizzard spells and the radius of your Frost Nova and Cone of Cold spells by 20%."
        };

        public static readonly string[] FrostChannelingDescriptions = {
            "Reduces the mana cost of your Frost spells by 5% and reduces the thread caused by your Frost spells by 10%.",
            "Reduces the mana cost of your Frost spells by 10% and reduces the thread caused by your Frost spells by 20%.",
            "Reduces the mana cost of your Frost spells by 15% and reduces the thread caused by your Frost spells by 30%."
        };

        public static readonly string[] ShatterDescriptions = {
            "Increases the critical strike chance of all your spells against frozen targets by 10%.",
            "Increases the critical strike chance of all your spells against frozen targets by 20%.",
            "Increases the critical strike chance of all your spells against frozen targets by 30%.",
            "Increases the critical strike chance of all your spells against frozen targets by 40%.",
            "Increases the critical strike chance of all your spells against frozen targets by 50%."
        };

        public static readonly string[] IceBlockDescriptions = {
            "You become encased in a block of ice, protecting you from all physical attacks and spells for 10 sec, but during that time you cannot attack, move or cast spells."
        };

        public static readonly string[] ImprovedConeOfColdDescriptions = {
            "Increases the damage dealt by your Cone of Cold spell by 15%.",
            "Increases the damage dealt by your Cone of Cold spell by 25%.",
            "Increases the damage dealt by your Cone of Cold spell by 35%."
        };

        public static readonly string[] WintersChillDescriptions = {
            "Gives your Frost damage spells a 20% chance to apply the Winter's Chill effect, which increases the chance a Frost spell will critically hit the target by 2% for 15 sec. Stacks up to 5 times.",
            "Gives your Frost damage spells a 40% chance to apply the Winter's Chill effect, which increases the chance a Frost spell will critically hit the target by 2% for 15 sec. Stacks up to 5 times.",
            "Gives your Frost damage spells a 60% chance to apply the Winter's Chill effect, which increases the chance a Frost spell will critically hit the target by 2% for 15 sec. Stacks up to 5 times.",
            "Gives your Frost damage spells a 80% chance to apply the Winter's Chill effect, which increases the chance a Frost spell will critically hit the target by 2% for 15 sec. Stacks up to 5 times.",
            "Gives your Frost damage spells a 100% chance to apply the Winter's Chill effect, which increases the chance a Frost spell will critically hit the target by 2% for 15 sec. Stacks up to 5 times."
        };

        public static readonly string[] IceBarrierDescriptions = {
            "Instantly shields you, absorbing 438 damage. Lasts 1 min. While the shield holds, spells will not be interrupted."
        };

        public static string GetAbilityDesc(int abilityPosition, int abilityPoints)
        {
            if (abilityPosition == 0)
            {
                if (abilityPoints < FrostWardingDescriptions.Length)
                {
                    return FrostWardingDescriptions[abilityPoints];
                }
                else
                {
                    return FrostWardingDescriptions[FrostWardingDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 1)
            {
                if (abilityPoints < ImprovedFrostboltDescriptions.Length)
                {
                    return ImprovedFrostboltDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedFrostboltDescriptions[ImprovedFrostboltDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 2)
            {
                if (abilityPoints < ElementalPrecisionDescriptions.Length)
                {
                    return ElementalPrecisionDescriptions[abilityPoints];
                }
                else
                {
                    return ElementalPrecisionDescriptions[ElementalPrecisionDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 3)
            {
                if (abilityPoints < IceShardsDescriptions.Length)
                {
                    return IceShardsDescriptions[abilityPoints];
                }
                else
                {
                    return IceShardsDescriptions[IceShardsDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 4)
            {
                if (abilityPoints < FrostbiteDescriptions.Length)
                {
                    return FrostbiteDescriptions[abilityPoints];
                }
                else
                {
                    return FrostbiteDescriptions[FrostbiteDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 5)
            {
                if (abilityPoints < ImprovedFrostNovaDescriptions.Length)
                {
                    return ImprovedFrostNovaDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedFrostNovaDescriptions[ImprovedFrostNovaDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 6)
            {
                if (abilityPoints < PermafrostDescriptions.Length)
                {
                    return PermafrostDescriptions[abilityPoints];
                }
                else
                {
                    return PermafrostDescriptions[PermafrostDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 7)
            {
                if (abilityPoints < PiercingIceDescriptions.Length)
                {
                    return PiercingIceDescriptions[abilityPoints];
                }
                else
                {
                    return PiercingIceDescriptions[PiercingIceDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 8)
            {
                if (abilityPoints < ColdSnapDescriptions.Length)
                {
                    return ColdSnapDescriptions[abilityPoints];
                }
                else
                {
                    return ColdSnapDescriptions[ColdSnapDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 9)
            {
                if (abilityPoints < ImprovedBlizzardDescriptions.Length)
                {
                    return ImprovedBlizzardDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedBlizzardDescriptions[ImprovedBlizzardDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 10)
            {
                if (abilityPoints < ArcticReachDescriptions.Length)
                {
                    return ArcticReachDescriptions[abilityPoints];
                }
                else
                {
                    return ArcticReachDescriptions[ArcticReachDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 11)
            {
                if (abilityPoints < FrostChannelingDescriptions.Length)
                {
                    return FrostChannelingDescriptions[abilityPoints];
                }
                else
                {
                    return FrostChannelingDescriptions[FrostChannelingDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 12)
            {
                if (abilityPoints < ShatterDescriptions.Length)
                {
                    return ShatterDescriptions[abilityPoints];
                }
                else
                {
                    return ShatterDescriptions[ShatterDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 13)
            {
                if (abilityPoints < IceBlockDescriptions.Length)
                {
                    return IceBlockDescriptions[abilityPoints];
                }
                else
                {
                    return IceBlockDescriptions[IceBlockDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 14)
            {
                if (abilityPoints < ImprovedConeOfColdDescriptions.Length)
                {
                    return ImprovedConeOfColdDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedConeOfColdDescriptions[ImprovedConeOfColdDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 15)
            {
                if (abilityPoints < WintersChillDescriptions.Length)
                {
                    return WintersChillDescriptions[abilityPoints];
                }
                else
                {
                    return WintersChillDescriptions[WintersChillDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 16)
            {
                if (abilityPoints < IceBarrierDescriptions.Length)
                {
                    return IceBarrierDescriptions[abilityPoints];
                }
                else
                {
                    return IceBarrierDescriptions[IceBarrierDescriptions.Length - 1];
                }
            }
            else
            {
                return "No Description available";
            }
        }
    }

    public static class BeastMastery
    {
        public static readonly string[] AbilityNames = {
            "Improved Aspect of the Hawk",
            "Endurance Training",
            "Improved Eyes of the Beast",
            "Improved Aspect of the Monkey",
            "Thick Hide",
            "Improved Revive Pet",
            "Pathfinding",
            "Bestial Swiftness",
            "Unleashed Fury",
            "Improved Mend Pet",
            "Ferocity",
            "Spirit Bond",
            "Intimidation",
            "Bestial Discipline",
            "Frenzy",
            "Bestial Wrath"
        };

        public static readonly string[] ImprovedAspectOfTheHawkDescriptions = {
            "While Aspect of the Hawk is active, all normal ranged attacks have a 1% chance of increasing ranged attack speed by 30% for 12 sec.",
            "While Aspect of the Hawk is active, all normal ranged attacks have a 2% chance of increasing ranged attack speed by 30% for 12 sec.",
            "While Aspect of the Hawk is active, all normal ranged attacks have a 3% chance of increasing ranged attack speed by 30% for 12 sec.",
            "While Aspect of the Hawk is active, all normal ranged attacks have a 4% chance of increasing ranged attack speed by 30% for 12 sec.",
            "While Aspect of the Hawk is active, all normal ranged attacks have a 5% chance of increasing ranged attack speed by 30% for 12 sec."
        };

        public static readonly string[] EnduranceTrainingDescriptions = {
            "Increases the Health of your pets by 3%.",
            "Increases the Health of your pets by 6%.",
            "Increases the Health of your pets by 9%.",
            "Increases the Health of your pets by 12%.",
            "Increases the Health of your pets by 15%."
        };

        public static readonly string[] ImprovedEyesOfTheBeastDescriptions = {
            "Increases the duration of your Eyes of the Beast by 30 sec.",
            "Increases the duration of your Eyes of the Beast by 60 sec."
        };

        public static readonly string[] ImprovedAspectOfTheMonkeyDescriptions = {
            "Increases the Dodge bonus of your Aspect of the Monkey by 1%.",
            "Increases the Dodge bonus of your Aspect of the Monkey by 2%.",
            "Increases the Dodge bonus of your Aspect of the Monkey by 3%.",
            "Increases the Dodge bonus of your Aspect of the Monkey by 4%.",
            "Increases the Dodge bonus of your Aspect of the Monkey by 5%."
        };

        public static readonly string[] ThickHideDescriptions = {
            "Increases the Armor rating of your pets by 10%.",
            "Increases the Armor rating of your pets by 20%.",
            "Increases the Armor rating of your pets by 30%.",
            "Increases the Armor rating of your pets by 40%.",
            "Increases the Armor rating of your pets by 50%."
        };

        public static readonly string[] ImprovedRevivePetDescriptions = {
            "Revive Pet's casting time is reduced by 3 sec, mana cost is reduced by 20% and increases the health your pet returns with by an additional 15%.",
            "Revive Pet's casting time is reduced by 6 sec, mana cost is reduced by 40% and increases the health your pet returns with by an additional 30%."
        };

        public static readonly string[] PathfindingDescriptions = {
            "Increases the speed bonus of your Aspect of the Cheetah and Aspect of the Pack by 3%.",
            "Increases the speed bonus of your Aspect of the Cheetah and Aspect of the Pack by 6%."
        };

        public static readonly string[] BestialSwiftnessDescriptions = {
            "Increases the outdoor movement speed of your pets by 30%."
        };

        public static readonly string[] UnleashedFuryDescriptions = {
            "Increases the damage done by your pets by 4%.",
            "Increases the damage done by your pets by 8%.",
            "Increases the damage done by your pets by 12%.",
            "Increases the damage done by your pets by 16%.",
            "Increases the damage done by your pets by 20%."
        };

        public static readonly string[] ImprovedMendPetDescriptions = {
            "Gives the Mend Pet spell a 15% chance of cleansing 1 Curse, Disease, Magic or Poison effect from the pet each tick.",
            "Gives the Mend Pet spell a 50% chance of cleansing 1 Curse, Disease, Magic or Poison effect from the pet each tick."
        };

        public static readonly string[] FerocityDescriptions = {
            "Increases the critical strike chance of your pets by 3%.",
            "Increases the critical strike chance of your pets by 6%.",
            "Increases the critical strike chance of your pets by 9%.",
            "Increases the critical strike chance of your pets by 12%.",
            "Increases the critical strike chance of your pets by 15%."
        };

        public static readonly string[] SpiritBondDescriptions = {
            "While your pet is active, you and your pet will regenerate 1% of total health every 10 sec.",
            "While your pet is active, you and your pet will regenerate 2% of total health every 10 sec."
        };

        public static readonly string[] IntimidationDescriptions = {
            "Command your pet to intimidate the target on the next successful melee attack, causing a high amount of threat and stunning the target for 3 sec."
        };

        public static readonly string[] BestialDisciplineDescriptions = {
            "Increases the Focus regeneration of your pets by 10%.",
            "Increases the Focus regeneration of your pets by 20%."
        };

        public static readonly string[] FrenzyDescriptions = {
            "Gives your pet a 20% chance to gain a 30% attack speed increase for 8 sec after dealing a critical strike.",
            "Gives your pet a 40% chance to gain a 30% attack speed increase for 8 sec after dealing a critical strike.",
            "Gives your pet a 60% chance to gain a 30% attack speed increase for 8 sec after dealing a critical strike.",
            "Gives your pet a 80% chance to gain a 30% attack speed increase for 8 sec after dealing a critical strike.",
            "Gives your pet a 100% chance to gain a 30% attack speed increase for 8 sec after dealing a critical strike."
        };

        public static readonly string[] BestialWrathDescriptions = {
            "Send your pet into a rage causing 50% additional damage for 18 sec. While enraged, the beast does not feel pity or remorse or fear and it cannot be stopped unless killed."
        };

        public static string GetAbilityDesc(int abilityPosition, int abilityPoints)
        {
            if (abilityPosition == 0)
            {
                if (abilityPoints < ImprovedAspectOfTheHawkDescriptions.Length)
                {
                    return ImprovedAspectOfTheHawkDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedAspectOfTheHawkDescriptions[ImprovedAspectOfTheHawkDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 1)
            {
                if (abilityPoints < EnduranceTrainingDescriptions.Length)
                {
                    return EnduranceTrainingDescriptions[abilityPoints];
                }
                else
                {
                    return EnduranceTrainingDescriptions[EnduranceTrainingDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 2)
            {
                if (abilityPoints < ImprovedEyesOfTheBeastDescriptions.Length)
                {
                    return ImprovedEyesOfTheBeastDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedEyesOfTheBeastDescriptions[ImprovedEyesOfTheBeastDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 3)
            {
                if (abilityPoints < ImprovedAspectOfTheMonkeyDescriptions.Length)
                {
                    return ImprovedAspectOfTheMonkeyDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedAspectOfTheMonkeyDescriptions[ImprovedAspectOfTheMonkeyDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 4)
            {
                if (abilityPoints < ThickHideDescriptions.Length)
                {
                    return ThickHideDescriptions[abilityPoints];
                }
                else
                {
                    return ThickHideDescriptions[ThickHideDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 5)
            {
                if (abilityPoints < ImprovedRevivePetDescriptions.Length)
                {
                    return ImprovedRevivePetDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedRevivePetDescriptions[ImprovedRevivePetDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 6)
            {
                if (abilityPoints < PathfindingDescriptions.Length)
                {
                    return PathfindingDescriptions[abilityPoints];
                }
                else
                {
                    return PathfindingDescriptions[PathfindingDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 7)
            {
                if (abilityPoints < BestialSwiftnessDescriptions.Length)
                {
                    return BestialSwiftnessDescriptions[abilityPoints];
                }
                else
                {
                    return BestialSwiftnessDescriptions[BestialSwiftnessDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 8)
            {
                if (abilityPoints < UnleashedFuryDescriptions.Length)
                {
                    return UnleashedFuryDescriptions[abilityPoints];
                }
                else
                {
                    return UnleashedFuryDescriptions[UnleashedFuryDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 9)
            {
                if (abilityPoints < ImprovedMendPetDescriptions.Length)
                {
                    return ImprovedMendPetDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedMendPetDescriptions[ImprovedMendPetDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 10)
            {
                if (abilityPoints < FerocityDescriptions.Length)
                {
                    return FerocityDescriptions[abilityPoints];
                }
                else
                {
                    return FerocityDescriptions[FerocityDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 11)
            {
                if (abilityPoints < SpiritBondDescriptions.Length)
                {
                    return SpiritBondDescriptions[abilityPoints];
                }
                else
                {
                    return SpiritBondDescriptions[SpiritBondDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 12)
            {
                if (abilityPoints < IntimidationDescriptions.Length)
                {
                    return IntimidationDescriptions[abilityPoints];
                }
                else
                {
                    return IntimidationDescriptions[IntimidationDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 13)
            {
                if (abilityPoints < BestialDisciplineDescriptions.Length)
                {
                    return BestialDisciplineDescriptions[abilityPoints];
                }
                else
                {
                    return BestialDisciplineDescriptions[BestialDisciplineDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 14)
            {
                if (abilityPoints < FrenzyDescriptions.Length)
                {
                    return FrenzyDescriptions[abilityPoints];
                }
                else
                {
                    return FrenzyDescriptions[FrenzyDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 15)
            {
                if (abilityPoints < BestialWrathDescriptions.Length)
                {
                    return BestialWrathDescriptions[abilityPoints];
                }
                else
                {
                    return BestialWrathDescriptions[BestialWrathDescriptions.Length - 1];
                }
            }
            else
            {
                return "No Description available";
            }
        }
    }

    public static class Marksmanship
    {
        public static readonly string[] AbilityNames = {
            "Improved Concussive Shot",
            "Efficiency",
            "Improved Hunter's Mark",
            "Lethal Shots",
            "Aimed Shot",
            "Improved Arcane Shot",
            "Hawk Eye",
            "Improved Serpent Sting",
            "Mortal Shots",
            "Scatter Shot",
            "Barrage",
            "Improved Scorpid Sting",
            "Ranged Weapon Specialization",
            "Trueshot Aura"
        };

        public static readonly string[] ImprovedConcussiveShotDescriptions = {
            "Gives your Concussive Shot a 4% chance to stun the target for 3 sec.",
            "Gives your Concussive Shot a 8% chance to stun the target for 3 sec.",
            "Gives your Concussive Shot a 12% chance to stun the target for 3 sec.",
            "Gives your Concussive Shot a 16% chance to stun the target for 3 sec.",
            "Gives your Concussive Shot a 20% chance to stun the target for 3 sec."
        };

        public static readonly string[] EfficiencyDescriptions = {
            "Reduces the Mana cost of your Shots and Stings by 2%.",
            "Reduces the Mana cost of your Shots and Stings by 4%.",
            "Reduces the Mana cost of your Shots and Stings by 6%.",
            "Reduces the Mana cost of your Shots and Stings by 8%.",
            "Reduces the Mana cost of your Shots and Stings by 10%."
        };

        public static readonly string[] ImprovedHuntersMarkDescriptions = {
            "Increases the Ranged Attack Power bonus of your Hunter's Mark spell by 3%.",
            "Increases the Ranged Attack Power bonus of your Hunter's Mark spell by 6%.",
            "Increases the Ranged Attack Power bonus of your Hunter's Mark spell by 9%.",
            "Increases the Ranged Attack Power bonus of your Hunter's Mark spell by 12%.",
            "Increases the Ranged Attack Power bonus of your Hunter's Mark spell by 15%."
        };

        public static readonly string[] LethalShotsDescriptions = {
            "Increases your critical strike chance with ranged weapons by 1%.",
            "Increases your critical strike chance with ranged weapons by 2%.",
            "Increases your critical strike chance with ranged weapons by 3%.",
            "Increases your critical strike chance with ranged weapons by 4%.",
            "Increases your critical strike chance with ranged weapons by 5%."
        };

        public static readonly string[] AimedShotDescriptions = {
            "An aimed shot that increases ranged damage by 70."
        };

        public static readonly string[] ImprovedArcaneShotDescriptions = {
            "Reduces the cooldown of your Arcane Shot by 0.2 sec.",
            "Reduces the cooldown of your Arcane Shot by 0.4 sec.",
            "Reduces the cooldown of your Arcane Shot by 0.6 sec.",
            "Reduces the cooldown of your Arcane Shot by 0.8 sec.",
            "Reduces the cooldown of your Arcane Shot by 1 sec."
        };

        public static readonly string[] HawkEyeDescriptions = {
            "Increases the range of your ranged weapons by 2 yards.",
            "Increases the range of your ranged weapons by 4 yards.",
            "Increases the range of your ranged weapons by 6 yards."
        };

        public static readonly string[] ImprovedSerpentStingDescriptions = {
            "Increases the damage done by your Serpent Sting by 2%.",
            "Increases the damage done by your Serpent Sting by 4%.",
            "Increases the damage done by your Serpent Sting by 6%.",
            "Increases the damage done by your Serpent Sting by 8%.",
            "Increases the damage done by your Serpent Sting by 10%."
        };

        public static readonly string[] MortalShotsDescriptions = {
            "Increases your ranged weapon critical strike damage bonus by 6%.",
            "Increases your ranged weapon critical strike damage bonus by 12%.",
            "Increases your ranged weapon critical strike damage bonus by 18%.",
            "Increases your ranged weapon critical strike damage bonus by 24%.",
            "Increases your ranged weapon critical strike damage bonus by 30%."
        };

        public static readonly string[] ScatterShotDescriptions = {
            "A short-range shot that deals 50% weapon damage and disorients the target for 4 sec. Any damage caused will remove the effect. Turns off your attack when used."
        };

        public static readonly string[] BarrageDescriptions = {
            "Increases the damage done by your Multi-Shot and Volley spells by 5%.",
            "Increases the damage done by your Multi-Shot and Volley spells by 10%.",
            "Increases the damage done by your Multi-Shot and Volley spells by 15%."
        };

        public static readonly string[] ImprovedScorpidStingDescriptions = {
            "Reduces the Stamina of targets affected by your Scorpid Sting by 10% of the amount of Strength reduced.",
            "Reduces the Stamina of targets affected by your Scorpid Sting by 20% of the amount of Strength reduced.",
            "Reduces the Stamina of targets affected by your Scorpid Sting by 30% of the amount of Strength reduced."
        };

        public static readonly string[] RangedWeaponSpecializationDescriptions = {
            "Increases the damage you deal with ranged weapons by 1%.",
            "Increases the damage you deal with ranged weapons by 2%.",
            "Increases the damage you deal with ranged weapons by 3%.",
            "Increases the damage you deal with ranged weapons by 4%.",
            "Increases the damage you deal with ranged weapons by 5%."
        };

        public static readonly string[] TrueshotAuraDescriptions = {
            "Increases the attack power of party members within 45 yards by 50. Lasts 30 min."
        };

        public static string GetAbilityDesc(int abilityPosition, int abilityPoints)
        {
            if (abilityPosition == 0)
            {
                if (abilityPoints < ImprovedConcussiveShotDescriptions.Length)
                {
                    return ImprovedConcussiveShotDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedConcussiveShotDescriptions[ImprovedConcussiveShotDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 1)
            {
                if (abilityPoints < EfficiencyDescriptions.Length)
                {
                    return EfficiencyDescriptions[abilityPoints];
                }
                else
                {
                    return EfficiencyDescriptions[EfficiencyDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 2)
            {
                if (abilityPoints < ImprovedHuntersMarkDescriptions.Length)
                {
                    return ImprovedHuntersMarkDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedHuntersMarkDescriptions[ImprovedHuntersMarkDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 3)
            {
                if (abilityPoints < LethalShotsDescriptions.Length)
                {
                    return LethalShotsDescriptions[abilityPoints];
                }
                else
                {
                    return LethalShotsDescriptions[LethalShotsDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 4)
            {
                if (abilityPoints < AimedShotDescriptions.Length)
                {
                    return AimedShotDescriptions[abilityPoints];
                }
                else
                {
                    return AimedShotDescriptions[AimedShotDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 5)
            {
                if (abilityPoints < ImprovedArcaneShotDescriptions.Length)
                {
                    return ImprovedArcaneShotDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedArcaneShotDescriptions[ImprovedArcaneShotDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 6)
            {
                if (abilityPoints < HawkEyeDescriptions.Length)
                {
                    return HawkEyeDescriptions[abilityPoints];
                }
                else
                {
                    return HawkEyeDescriptions[HawkEyeDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 7)
            {
                if (abilityPoints < ImprovedSerpentStingDescriptions.Length)
                {
                    return ImprovedSerpentStingDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedSerpentStingDescriptions[ImprovedSerpentStingDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 8)
            {
                if (abilityPoints < MortalShotsDescriptions.Length)
                {
                    return MortalShotsDescriptions[abilityPoints];
                }
                else
                {
                    return MortalShotsDescriptions[MortalShotsDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 9)
            {
                if (abilityPoints < ScatterShotDescriptions.Length)
                {
                    return ScatterShotDescriptions[abilityPoints];
                }
                else
                {
                    return ScatterShotDescriptions[ScatterShotDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 10)
            {
                if (abilityPoints < BarrageDescriptions.Length)
                {
                    return BarrageDescriptions[abilityPoints];
                }
                else
                {
                    return BarrageDescriptions[BarrageDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 11)
            {
                if (abilityPoints < ImprovedScorpidStingDescriptions.Length)
                {
                    return ImprovedScorpidStingDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedScorpidStingDescriptions[ImprovedScorpidStingDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 12)
            {
                if (abilityPoints < RangedWeaponSpecializationDescriptions.Length)
                {
                    return RangedWeaponSpecializationDescriptions[abilityPoints];
                }
                else
                {
                    return RangedWeaponSpecializationDescriptions[RangedWeaponSpecializationDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 13)
            {
                if (abilityPoints < TrueshotAuraDescriptions.Length)
                {
                    return TrueshotAuraDescriptions[abilityPoints];
                }
                else
                {
                    return TrueshotAuraDescriptions[TrueshotAuraDescriptions.Length - 1];
                }
            }
            else
            {
                return "No Description available";
            }
        }
    }

    public static class Survival
    {
        public static readonly string[] AbilityNames = {
            "Monster Slaying",
            "Humanoid Slaying",
            "Deflection",
            "Entrapment",
            "Savage Strikes",
            "Improved Wing Clip",
            "Clever Traps",
            "Survivalist",
            "Deterrence",
            "Trap Mastery",
            "Surefooted",
            "Improved Feign Death",
            "Killer Instinct",
            "Counterattack",
            "Lightning Reflexes",
            "Wyvern Sting"
        };

        public static readonly string[] MonsterSlayingDescriptions = {
            "Increases all damage caused against Beasts, Giants and Dragonkin targets by 1% and increases the critical damage caused against Beasts, Giants and Dragonkin targets by an additional 1%.",
            "Increases all damage caused against Beasts, Giants and Dragonkin targets by 2% and increases the critical damage caused against Beasts, Giants and Dragonkin targets by an additional 2%.",
            "Increases all damage caused against Beasts, Giants and Dragonkin targets by 3% and increases the critical damage caused against Beasts, Giants and Dragonkin targets by an additional 3%."
        };

        public static readonly string[] HumanoidSlayingDescriptions = {
            "Increases all damage caused against Humanoid targets by 1% and increases the critical damage caused against Humanoid targets by an additional 1%.",
            "Increases all damage caused against Humanoid targets by 2% and increases the critical damage caused against Humanoid targets by an additional 2%.",
            "Increases all damage caused against Humanoid targets by 3% and increases the critical damage caused against Humanoid targets by an additional 3%."
        };

        public static readonly string[] DeflectionDescriptions = {
            "Increases your Parry chance by 1%.",
            "Increases your Parry chance by 2%.",
            "Increases your Parry chance by 3%.",
            "Increases your Parry chance by 4%.",
            "Increases your Parry chance by 5%."
        };

        public static readonly string[] EntrapmentDescriptions = {
            "Gives your Immolation Trap, Frost Trap and Explosive Trap a 5% chance to entrap the target, preventing them from moving for 5 sec.",
            "Gives your Immolation Trap, Frost Trap and Explosive Trap a 10% chance to entrap the target, preventing them from moving for 5 sec.",
            "Gives your Immolation Trap, Frost Trap and Explosive Trap a 15% chance to entrap the target, preventing them from moving for 5 sec.",
            "Gives your Immolation Trap, Frost Trap and Explosive Trap a 20% chance to entrap the target, preventing them from moving for 5 sec.",
            "Gives your Immolation Trap, Frost Trap and Explosive Trap a 25% chance to entrap the target, preventing them from moving for 5 sec."
        };

        public static readonly string[] SavageStrikesDescriptions = {
            "Increases the critical strike chance of Raptor Strike and Mongoose Bite by 10%.",
            "Increases the critical strike chance of Raptor Strike and Mongoose Bite by 20%."
        };

        public static readonly string[] ImprovedWingClipDescriptions = {
            "Gives your Wing Clip ability a 4% chance to immobilize the target for 5 sec.",
            "Gives your Wing Clip ability a 8% chance to immobilize the target for 5 sec.",
            "Gives your Wing Clip ability a 12% chance to immobilize the target for 5 sec.",
            "Gives your Wing Clip ability a 16% chance to immobilize the target for 5 sec.",
            "Gives your Wing Clip ability a 20% chance to immobilize the target for 5 sec."
        };

        public static readonly string[] CleverTrapsDescriptions = {
            "Increases the duration of Freezing and Frost trap effects by 15% and the damage of Immolation and Explosive trap effects by 15%.",
            "Increases the duration of Freezing and Frost trap effects by 30% and the damage of Immolation and Explosive trap effects by 30%."
        };

        public static readonly string[] SurvivalistDescriptions = {
            "Increases total health by 2%.",
            "Increases total health by 4%.",
            "Increases total health by 6%.",
            "Increases total health by 8%.",
            "Increases total health by 10%."
        };

        public static readonly string[] DeterrenceDescriptions = {
            "When activated, increases your Dodge and Parry chance by 25% for 10 sec."
        };

        public static readonly string[] TrapMasteryDescriptions = {
            "Decreases the chance enemies will resist trap effects by 5%.",
            "Decreases the chance enemies will resist trap effects by 10%."
        };

        public static readonly string[] SurefootedDescriptions = {
            "Increases hit chance by 1% and increases the chance movement impairing effects will be resisted by an additional 5%.",
            "Increases hit chance by 2% and increases the chance movement impairing effects will be resisted by an additional 10%.",
            "Increases hit chance by 3% and increases the chance movement impairing effects will be resisted by an additional 15%."
        };

        public static readonly string[] ImprovedFeignDeathDescriptions = {
            "Reduces the chance your Feign Death ability will be resisted by 2%.",
            "Reduces the chance your Feign Death ability will be resisted by 4%."
        };

        public static readonly string[] KillerInstinctDescriptions = {
            "Increases your critical strike chance with all attacks by 1%.",
            "Increases your critical strike chance with all attacks by 2%.",
            "Increases your critical strike chance with all attacks by 3%."
        };

        public static readonly string[] CounterattackDescriptions = {
            "A strike that becomes active after parrying an opponent's attack. This attack deals 40 damage and immobilizes the target for 5 sec. Counterattack cannot be blocked, dodged or parried."
        };

        public static readonly string[] LightningReflexesDescriptions = {
            "Increases your Agility by 3%.",
            "Increases your Agility by 6%.",
            "Increases your Agility by 9%.",
            "Increases your Agility by 12%.",
            "Increases your Agility by 15%."
        };

        public static readonly string[] WyvernStingDescriptions = {
            "A stinging shot that puts the target to sleep for 12 sec. Any damage will cancel the effect. When the target wakes up, the Sting causes 50 Nature damage over 12 sec. Only useable out of combat. Only one Sting per Hunter can be active on the target at a time."
        };

        public static string GetAbilityDesc(int abilityPosition, int abilityPoints)
        {
            if (abilityPosition == 0)
            {
                if (abilityPoints < MonsterSlayingDescriptions.Length)
                {
                    return MonsterSlayingDescriptions[abilityPoints];
                }
                else
                {
                    return MonsterSlayingDescriptions[MonsterSlayingDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 1)
            {
                if (abilityPoints < HumanoidSlayingDescriptions.Length)
                {
                    return HumanoidSlayingDescriptions[abilityPoints];
                }
                else
                {
                    return HumanoidSlayingDescriptions[HumanoidSlayingDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 2)
            {
                if (abilityPoints < DeflectionDescriptions.Length)
                {
                    return DeflectionDescriptions[abilityPoints];
                }
                else
                {
                    return DeflectionDescriptions[DeflectionDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 3)
            {
                if (abilityPoints < EntrapmentDescriptions.Length)
                {
                    return EntrapmentDescriptions[abilityPoints];
                }
                else
                {
                    return EntrapmentDescriptions[EntrapmentDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 4)
            {
                if (abilityPoints < SavageStrikesDescriptions.Length)
                {
                    return SavageStrikesDescriptions[abilityPoints];
                }
                else
                {
                    return SavageStrikesDescriptions[SavageStrikesDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 5)
            {
                if (abilityPoints < ImprovedWingClipDescriptions.Length)
                {
                    return ImprovedWingClipDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedWingClipDescriptions[ImprovedWingClipDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 6)
            {
                if (abilityPoints < CleverTrapsDescriptions.Length)
                {
                    return CleverTrapsDescriptions[abilityPoints];
                }
                else
                {
                    return CleverTrapsDescriptions[CleverTrapsDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 7)
            {
                if (abilityPoints < SurvivalistDescriptions.Length)
                {
                    return SurvivalistDescriptions[abilityPoints];
                }
                else
                {
                    return SurvivalistDescriptions[SurvivalistDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 8)
            {
                if (abilityPoints < DeterrenceDescriptions.Length)
                {
                    return DeterrenceDescriptions[abilityPoints];
                }
                else
                {
                    return DeterrenceDescriptions[DeterrenceDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 9)
            {
                if (abilityPoints < TrapMasteryDescriptions.Length)
                {
                    return TrapMasteryDescriptions[abilityPoints];
                }
                else
                {
                    return TrapMasteryDescriptions[TrapMasteryDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 10)
            {
                if (abilityPoints < SurefootedDescriptions.Length)
                {
                    return SurefootedDescriptions[abilityPoints];
                }
                else
                {
                    return SurefootedDescriptions[SurefootedDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 11)
            {
                if (abilityPoints < ImprovedFeignDeathDescriptions.Length)
                {
                    return ImprovedFeignDeathDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedFeignDeathDescriptions[ImprovedFeignDeathDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 12)
            {
                if (abilityPoints < KillerInstinctDescriptions.Length)
                {
                    return KillerInstinctDescriptions[abilityPoints];
                }
                else
                {
                    return KillerInstinctDescriptions[KillerInstinctDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 13)
            {
                if (abilityPoints < CounterattackDescriptions.Length)
                {
                    return CounterattackDescriptions[abilityPoints];
                }
                else
                {
                    return CounterattackDescriptions[CounterattackDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 14)
            {
                if (abilityPoints < LightningReflexesDescriptions.Length)
                {
                    return LightningReflexesDescriptions[abilityPoints];
                }
                else
                {
                    return LightningReflexesDescriptions[LightningReflexesDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 15)
            {
                if (abilityPoints < WyvernStingDescriptions.Length)
                {
                    return WyvernStingDescriptions[abilityPoints];
                }
                else
                {
                    return WyvernStingDescriptions[WyvernStingDescriptions.Length - 1];
                }
            }
            else
            {
                return "No Description available";
            }
        }
    }

    public static class Balance
    {
        public static readonly string[] AbilityNames = {
            "Improved Wrath",
            "Nature's Grasp",
            "Improved Nature's Grasp",
            "Improved Entangling Roots",
            "Improved Moonfire",
            "Natural Weapons",
            "Natural Shapeshifter",
            "Improved Thorns",
            "Omen of Clarity",
            "Nature's Reach",
            "Vengeance",
            "Improved Starfire",
            "Nature's Grace",
            "Moonglow",
            "Moonfury",
            "Moonkin Form"
        };

        public static readonly string[] ImprovedWrathDescriptions = {
            "Reduces the cast time of your Wrath spell by 0.1 sec.",
            "Reduces the cast time of your Wrath spell by 0.2 sec.",
            "Reduces the cast time of your Wrath spell by 0.3 sec.",
            "Reduces the cast time of your Wrath spell by 0.4 sec.",
            "Reduces the cast time of your Wrath spell by 0.5 sec."
        };

        public static readonly string[] NaturesGraspDescriptions = {
            "While active, any time an enemy strikes the caster they have a 35% chance to become afflicted by Entangling Roots (Rank 1). Only usable outdoors. 1 charge. Lasts 45 sec."
        };

        public static readonly string[] ImprovedNaturesGraspDescriptions = {
            "Increases the chance for your Nature's Grasp to entangle an enemy by 15%.",
            "Increases the chance for your Nature's Grasp to entangle an enemy by 30%.",
            "Increases the chance for your Nature's Grasp to entangle an enemy by 45%.",
            "Increases the chance for your Nature's Grasp to entangle an enemy by 60%."
        };

        public static readonly string[] ImprovedEntanglingRootsDescriptions = {
            "Gives you a 40% chance to avoid interruption caused by damage while casting Entangling Roots.",
            "Gives you a 70% chance to avoid interruption caused by damage while casting Entangling Roots.",
            "Gives you a 100% chance to avoid interruption caused by damage while casting Entangling Roots."
        };

        public static readonly string[] ImprovedMoonfireDescriptions = {
            "Increases the damage and critical strike chance of your Moonfire spell by 2%.",
            "Increases the damage and critical strike chance of your Moonfire spell by 4%.",
            "Increases the damage and critical strike chance of your Moonfire spell by 6%.",
            "Increases the damage and critical strike chance of your Moonfire spell by 8%.",
            "Increases the damage and critical strike chance of your Moonfire spell by 10%."
        };

        public static readonly string[] NaturalWeaponsDescriptions = {
            "Increases the damage you deal with all physical attacks in all forms by 2%.",
            "Increases the damage you deal with all physical attacks in all forms by 4%.",
            "Increases the damage you deal with all physical attacks in all forms by 6%.",
            "Increases the damage you deal with all physical attacks in all forms by 8%.",
            "Increases the damage you deal with all physical attacks in all forms by 10%."
        };

        public static readonly string[] NaturalShapeshifterDescriptions = {
            "Reduces the mana cost of all shapeshifting by 10%.",
            "Reduces the mana cost of all shapeshifting by 20%.",
            "Reduces the mana cost of all shapeshifting by 30%."
        };

        public static readonly string[] ImprovedThornsDescriptions = {
            "Increases damage caused by your Thorns spell by 25%.",
            "Increases damage caused by your Thorns spell by 50%.",
            "Increases damage caused by your Thorns spell by 75%."
        };

        public static readonly string[] OmenOfClarityDescriptions = {
            "Imbues the Druid with natural energy. Each of the Druid's melee attacks has a chance of causing the caster to enter a  Clearcasting state. The Clearcasting state reduces the Mana, Rage or Energy cost of your next damage or healing spell or offensive ability by 100%. Lasts 10min."
        };

        public static readonly string[] NaturesReachDescriptions = {
            "Increases the range of your Wrath, Entangling Roots, Faerie Fire, Moonfire, Starfire and Hurricane spells by 10%.",
            "Increases the range of your Wrath, Entangling Roots, Faerie Fire, Moonfire, Starfire and Hurricane spells by 20%."
        };

        public static readonly string[] VengenaceDescriptions = {
            "Increases the critical strike damage bonus of your Starfire, Moonfire and Wrath spells by 20%.",
            "Increases the critical strike damage bonus of your Starfire, Moonfire and Wrath spells by 40%.",
            "Increases the critical strike damage bonus of your Starfire, Moonfire and Wrath spells by 60%.",
            "Increases the critical strike damage bonus of your Starfire, Moonfire and Wrath spells by 80%.",
            "Increases the critical strike damage bonus of your Starfire, Moonfire and Wrath spells by 100%."
        };

        public static readonly string[] ImprovedStarfireDescriptions = {
            "Reduces the cast time of Starfire by 0.1 sec. and has a 3% chance to stun the target for 3sec.",
            "Reduces the cast time of Starfire by 0.2 sec. and has a 6% chance to stun the target for 3sec.",
            "Reduces the cast time of Starfire by 0.3 sec. and has a 9% chance to stun the target for 3sec.",
            "Reduces the cast time of Starfire by 0.4 sec. and has a 12% chance to stun the target for 3sec.",
            "Reduces the cast time of Starfire by 0.5 sec. and has a 15% chance to stun the target for 3sec."
        };

        public static readonly string[] NaturesGraceDescriptions = {
            "All spell criticals grace you with a blessing of nature, reducing the casting time of your next spell by 0.5 sec."
        };

        public static readonly string[] MoonglowDescriptions = {
            "Reduces the Mana cost of your Moonfire, Starfire, Wrath, Healing Touch, Regrowth and Rejuvenation spells by 3%.",
            "Reduces the Mana cost of your Moonfire, Starfire, Wrath, Healing Touch, Regrowth and Rejuvenation spells by 6%.",
            "Reduces the Mana cost of your Moonfire, Starfire, Wrath, Healing Touch, Regrowth and Rejuvenation spells by 9%."
        };

        public static readonly string[] MoonfuryDescriptions = {
            "Increases the damage done by your Starfire, Moonfire and Wrath spells by 2%.",
            "Increases the damage done by your Starfire, Moonfire and Wrath spells by 4%.",
            "Increases the damage done by your Starfire, Moonfire and Wrath spells by 6%.",
            "Increases the damage done by your Starfire, Moonfire and Wrath spells by 8%.",
            "Increases the damage done by your Starfire, Moonfire and Wrath spells by 10%."
        };

        public static readonly string[] MoonkinFormDescriptions = {
            "Transforms the Druid into Moonkin Form. While in this form the armor contribution by items is increased by 360% and all party members within 30 yards have their spell critical chance increased by 3%. The Moonkin can only cast Balance spells while shapeshifted. The act of shapeshifting frees the caster of Polymorph and Movement Impairing effects."
        };

        public static string GetAbilityDesc(int abilityPosition, int abilityPoints)
        {
            if (abilityPosition == 0)
            {
                if (abilityPoints < ImprovedWrathDescriptions.Length)
                {
                    return ImprovedWrathDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedWrathDescriptions[ImprovedWrathDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 1)
            {
                if (abilityPoints < NaturesGraspDescriptions.Length)
                {
                    return NaturesGraspDescriptions[abilityPoints];
                }
                else
                {
                    return NaturesGraspDescriptions[NaturesGraspDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 2)
            {
                if (abilityPoints < ImprovedNaturesGraspDescriptions.Length)
                {
                    return ImprovedNaturesGraspDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedNaturesGraspDescriptions[ImprovedNaturesGraspDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 3)
            {
                if (abilityPoints < ImprovedEntanglingRootsDescriptions.Length)
                {
                    return ImprovedEntanglingRootsDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedEntanglingRootsDescriptions[ImprovedEntanglingRootsDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 4)
            {
                if (abilityPoints < ImprovedMoonfireDescriptions.Length)
                {
                    return ImprovedMoonfireDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedMoonfireDescriptions[ImprovedMoonfireDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 5)
            {
                if (abilityPoints < NaturalWeaponsDescriptions.Length)
                {
                    return NaturalWeaponsDescriptions[abilityPoints];
                }
                else
                {
                    return NaturalWeaponsDescriptions[NaturalWeaponsDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 6)
            {
                if (abilityPoints < NaturalShapeshifterDescriptions.Length)
                {
                    return NaturalShapeshifterDescriptions[abilityPoints];
                }
                else
                {
                    return NaturalShapeshifterDescriptions[NaturalShapeshifterDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 7)
            {
                if (abilityPoints < ImprovedThornsDescriptions.Length)
                {
                    return ImprovedThornsDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedThornsDescriptions[ImprovedThornsDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 8)
            {
                if (abilityPoints < OmenOfClarityDescriptions.Length)
                {
                    return OmenOfClarityDescriptions[abilityPoints];
                }
                else
                {
                    return OmenOfClarityDescriptions[OmenOfClarityDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 9)
            {
                if (abilityPoints < NaturesReachDescriptions.Length)
                {
                    return NaturesReachDescriptions[abilityPoints];
                }
                else
                {
                    return NaturesReachDescriptions[NaturesReachDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 10)
            {
                if (abilityPoints < VengenaceDescriptions.Length)
                {
                    return VengenaceDescriptions[abilityPoints];
                }
                else
                {
                    return VengenaceDescriptions[VengenaceDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 11)
            {
                if (abilityPoints < ImprovedStarfireDescriptions.Length)
                {
                    return ImprovedStarfireDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedStarfireDescriptions[ImprovedStarfireDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 12)
            {
                if (abilityPoints < NaturesGraceDescriptions.Length)
                {
                    return NaturesGraceDescriptions[abilityPoints];
                }
                else
                {
                    return NaturesGraceDescriptions[NaturesGraceDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 13)
            {
                if (abilityPoints < MoonglowDescriptions.Length)
                {
                    return MoonglowDescriptions[abilityPoints];
                }
                else
                {
                    return MoonglowDescriptions[MoonglowDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 14)
            {
                if (abilityPoints < MoonfuryDescriptions.Length)
                {
                    return MoonfuryDescriptions[abilityPoints];
                }
                else
                {
                    return MoonfuryDescriptions[MoonfuryDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 15)
            {
                if (abilityPoints < MoonkinFormDescriptions.Length)
                {
                    return MoonkinFormDescriptions[abilityPoints];
                }
                else
                {
                    return MoonkinFormDescriptions[MoonkinFormDescriptions.Length - 1];
                }
            }
            else
            {
                return "No Description available";
            }
        }
    }

    public static class FeralCombat
    {
        public static readonly string[] AbilityNames = {
            "Ferocity",
            "Feral Aggression",
            "Feral Instinct",
            "Brutal Impact",
            "Thick Hide",
            "Feline Swiftness",
            "Feral Charge",
            "Sharpened Claws",
            "Improved Shred",
            "Predatory Strikes",
            "Blood Frenzy",
            "Primal Fury",
            "Savage Fury",
            "Faerie Fire (Feral)",
            "Heart of the Wild",
            "Leader of the Pack"
        };

        public static readonly string[] FerocityDescriptions = {
            "Reduces the cost of your Maul, Swipe, Claw and Rake abilities by 1 Rage or Energy.",
            "Reduces the cost of your Maul, Swipe, Claw and Rake abilities by 2 Rage or Energy.",
            "Reduces the cost of your Maul, Swipe, Claw and Rake abilities by 3 Rage or Energy.",
            "Reduces the cost of your Maul, Swipe, Claw and Rake abilities by 4 Rage or Energy.",
            "Reduces the cost of your Maul, Swipe, Claw and Rake abilities by 5 Rage or Energy."
        };

        public static readonly string[] FeralAggressionDescriptions = {
            "Increases the Attack Power reduction of your Demoralizing Roar by 8% and the damage caused by your Ferocious Bite by 3%.",
            "Increases the Attack Power reduction of your Demoralizing Roar by 16% and the damage caused by your Ferocious Bite by 6%.",
            "Increases the Attack Power reduction of your Demoralizing Roar by 24% and the damage caused by your Ferocious Bite by 9%.",
            "Increases the Attack Power reduction of your Demoralizing Roar by 32% and the damage caused by your Ferocious Bite by 12%.",
            "Increases the Attack Power reduction of your Demoralizing Roar by 40% and the damage caused by your Ferocious Bite by 15%."
        };

        public static readonly string[] FeralInstinctDescriptions = {
            "Increases threat caused in Bear and Dire Bear Form by 3% and reduces the chance enemies have to detect you while Prowling.",
            "Increases threat caused in Bear and Dire Bear Form by 6% and reduces the chance enemies have to detect you while Prowling.",
            "Increases threat caused in Bear and Dire Bear Form by 9% and reduces the chance enemies have to detect you while Prowling.",
            "Increases threat caused in Bear and Dire Bear Form by 12% and reduces the chance enemies have to detect you while Prowling.",
            "Increases threat caused in Bear and Dire Bear Form by 15% and reduces the chance enemies have to detect you while Prowling."
        };

        public static readonly string[] BrutalImpactDescriptions = {
            "Increases the stun duration of your Bash and Pounce abilities by 0.5 sec.",
            "Increases the stun duration of your Bash and Pounce abilities by 1 sec."
        };

        public static readonly string[] ThickHideDescriptions = {
            "Increases your armor contribution from items by  2%.",
            "Increases your armor contribution from items by  4%.",
            "Increases your armor contribution from items by  6%.",
            "Increases your armor contribution from items by  8%.",
            "Increases your armor contribution from items by  10%."
        };

        public static readonly string[] FelineSwiftnessDescriptions = {
            "Increases your movement speed by 15% while outdoors in Cat Form and increases your change to dodge while in Cat Form by 2%.",
            "Increases your movement speed by 30% while outdoors in Cat Form and increases your change to dodge while in Cat Form by 4%."
        };

        public static readonly string[] FeralChargeDescriptions = {
            "Causes you to charge an enemy, immobilizing and interrupting any spell being cast for 4 sec."
        };

        public static readonly string[] SharpenedClawsDescriptions = {
            "Increases your critical strike chance while in Bear, Dire Bear or Cat Form by 2%.",
            "Increases your critical strike chance while in Bear, Dire Bear or Cat Form by 4%.",
            "Increases your critical strike chance while in Bear, Dire Bear or Cat Form by 6%."
        };

        public static readonly string[] ImprovedShredDescriptions = {
            "Reduces the Energy cost of your Shred ability by 6.",
            "Reduces the Energy cost of your Shred ability by 12."
        };

        public static readonly string[] PredatoryStrikesDescriptions = {
            "Increases your melee attack power in Cat, Bear and Dire Bear Forms by 50% of your level.",
            "Increases your melee attack power in Cat, Bear and Dire Bear Forms by 100% of your level.",
            "Increases your melee attack power in Cat, Bear and Dire Bear Forms by 150% of your level."
        };

        public static readonly string[] BloodFrenzyDescriptions = {
            "Your critical strikes from Cat Form abilities that add combo points have a 50% chance to add an additional combo point.",
            "Your critical strikes from Cat Form abilities that add combo points have a 100% chance to add an additional combo point."
        };

        public static readonly string[] PrimalFuryDescriptions = {
            "Gives you a 50% chance to gain an additional 5 Rage anytime you get a critical strike while in Bear and Dire Bear Form.",
            "Gives you a 100% chance to gain an additional 5 Rage anytime you get a critical strike while in Bear and Dire Bear Form."
        };

        public static readonly string[] SavageFuryDescriptions = {
            "Increases the damage caused by your Claw, Rake, Maul and Swipe abilities by 10%.",
            "Increases the damage caused by your Claw, Rake, Maul and Swipe abilities by 20%."
        };

        public static readonly string[] FaerieFireFeralDescriptions = {
            "Decrease the armor of the target by 175 for 40 sec. While affected, the target cannot stealth or turn invisible."
        };

        public static readonly string[] HeartOfTheWildDescriptions = {
            "Increases your Intellect by 4%. In addition, while in Bear or Dire Bear Form your Stamina is increased by 4% and while in Cat Form your Strength is increased by 4%.",
            "Increases your Intellect by 8%. In addition, while in Bear or Dire Bear Form your Stamina is increased by 8% and while in Cat Form your Strength is increased by 8%.",
            "Increases your Intellect by 12%. In addition, while in Bear or Dire Bear Form your Stamina is increased by 12% and while in Cat Form your Strength is increased by 12%.",
            "Increases your Intellect by 16%. In addition, while in Bear or Dire Bear Form your Stamina is increased by 16% and while in Cat Form your Strength is increased by 16%.",
            "Increases your Intellect by 20%. In addition, while in Bear or Dire Bear Form your Stamina is increased by 20% and while in Cat Form your Strength is increased by 20%."
        };

        public static readonly string[] LeaderOfThePackDescriptions = {
            "While in Cat, Bear or Dire Bear Form, the Leader of the Pack increases ranged and melee critical chance of all party members within 45 yards by 3%."
        };

        public static string GetAbilityDesc(int abilityPosition, int abilityPoints)
        {
            if (abilityPosition == 0)
            {
                if (abilityPoints < FerocityDescriptions.Length)
                {
                    return FerocityDescriptions[abilityPoints];
                }
                else
                {
                    return FerocityDescriptions[FerocityDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 1)
            {
                if (abilityPoints < FeralAggressionDescriptions.Length)
                {
                    return FeralAggressionDescriptions[abilityPoints];
                }
                else
                {
                    return FeralAggressionDescriptions[FeralAggressionDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 2)
            {
                if (abilityPoints < FeralInstinctDescriptions.Length)
                {
                    return FeralInstinctDescriptions[abilityPoints];
                }
                else
                {
                    return FeralInstinctDescriptions[FeralInstinctDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 3)
            {
                if (abilityPoints < BrutalImpactDescriptions.Length)
                {
                    return BrutalImpactDescriptions[abilityPoints];
                }
                else
                {
                    return BrutalImpactDescriptions[BrutalImpactDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 4)
            {
                if (abilityPoints < ThickHideDescriptions.Length)
                {
                    return ThickHideDescriptions[abilityPoints];
                }
                else
                {
                    return ThickHideDescriptions[ThickHideDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 5)
            {
                if (abilityPoints < FelineSwiftnessDescriptions.Length)
                {
                    return FelineSwiftnessDescriptions[abilityPoints];
                }
                else
                {
                    return FelineSwiftnessDescriptions[FelineSwiftnessDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 6)
            {
                if (abilityPoints < FeralChargeDescriptions.Length)
                {
                    return FeralChargeDescriptions[abilityPoints];
                }
                else
                {
                    return FeralChargeDescriptions[FeralChargeDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 7)
            {
                if (abilityPoints < SharpenedClawsDescriptions.Length)
                {
                    return SharpenedClawsDescriptions[abilityPoints];
                }
                else
                {
                    return SharpenedClawsDescriptions[SharpenedClawsDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 8)
            {
                if (abilityPoints < ImprovedShredDescriptions.Length)
                {
                    return ImprovedShredDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedShredDescriptions[ImprovedShredDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 9)
            {
                if (abilityPoints < PredatoryStrikesDescriptions.Length)
                {
                    return PredatoryStrikesDescriptions[abilityPoints];
                }
                else
                {
                    return PredatoryStrikesDescriptions[PredatoryStrikesDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 10)
            {
                if (abilityPoints < BloodFrenzyDescriptions.Length)
                {
                    return BloodFrenzyDescriptions[abilityPoints];
                }
                else
                {
                    return BloodFrenzyDescriptions[BloodFrenzyDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 11)
            {
                if (abilityPoints < PrimalFuryDescriptions.Length)
                {
                    return PrimalFuryDescriptions[abilityPoints];
                }
                else
                {
                    return PrimalFuryDescriptions[PrimalFuryDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 12)
            {
                if (abilityPoints < SavageFuryDescriptions.Length)
                {
                    return SavageFuryDescriptions[abilityPoints];
                }
                else
                {
                    return SavageFuryDescriptions[SavageFuryDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 13)
            {
                if (abilityPoints < FaerieFireFeralDescriptions.Length)
                {
                    return FaerieFireFeralDescriptions[abilityPoints];
                }
                else
                {
                    return FaerieFireFeralDescriptions[FaerieFireFeralDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 14)
            {
                if (abilityPoints < HeartOfTheWildDescriptions.Length)
                {
                    return HeartOfTheWildDescriptions[abilityPoints];
                }
                else
                {
                    return HeartOfTheWildDescriptions[HeartOfTheWildDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 15)
            {
                if (abilityPoints < LeaderOfThePackDescriptions.Length)
                {
                    return LeaderOfThePackDescriptions[abilityPoints];
                }
                else
                {
                    return LeaderOfThePackDescriptions[LeaderOfThePackDescriptions.Length - 1];
                }
            }
            else
            {
                return "No Description available";
            }
        }
    }

    public static class RestorationDruid
    {
        public static readonly string[] AbilityNames = {
            "Improved Mark of the Wild",
            "Furor",
            "Improved Healing Touch",
            "Nature's Focus",
            "Improved Enrage",
            "Reflection",
            "Insect Swarm",
            "Subtlety",
            "Tranquil Spirit",
            "Improved Rejuvenation",
            "Nature's Swiftness",
            "Gift of Nature",
            "Improved Tranquility",
            "Improved Regrowth",
            "Swiftmend"
        };

        public static readonly string[] ImprovedMarkOfTheWildDescriptions = {
            "Increases the effects of your Mark of the Wild and Gift of the Wild spells by 7%.",
            "Increases the effects of your Mark of the Wild and Gift of the Wild spells by 14%.",
            "Increases the effects of your Mark of the Wild and Gift of the Wild spells by 21%.",
            "Increases the effects of your Mark of the Wild and Gift of the Wild spells by 28%.",
            "Increases the effects of your Mark of the Wild and Gift of the Wild spells by 35%."
        };

        public static readonly string[] FurorDescriptions = {
            "Gives you a 20% chance to gain 10 Rage when you shapeshift into Bear and Dire Bear Form or 40 Energy when you shapeshift into Cat Form.",
            "Gives you a 40% chance to gain 10 Rage when you shapeshift into Bear and Dire Bear Form or 40 Energy when you shapeshift into Cat Form.",
            "Gives you a 60% chance to gain 10 Rage when you shapeshift into Bear and Dire Bear Form or 40 Energy when you shapeshift into Cat Form.",
            "Gives you a 80% chance to gain 10 Rage when you shapeshift into Bear and Dire Bear Form or 40 Energy when you shapeshift into Cat Form.",
            "Gives you a 100% chance to gain 10 Rage when you shapeshift into Bear and Dire Bear Form or 40 Energy when you shapeshift into Cat Form."
        };

        public static readonly string[] ImprovedHealingTouchDescriptions = {
            "Reduces the cast time of your Healing Touch spell by 0.1 sec.",
            "Reduces the cast time of your Healing Touch spell by 0.2 sec.",
            "Reduces the cast time of your Healing Touch spell by 0.3 sec.",
            "Reduces the cast time of your Healing Touch spell by 0.4 sec.",
            "Reduces the cast time of your Healing Touch spell by 0.5 sec."
        };

        public static readonly string[] NaturesFocusDescriptions = {
            "Gives you a 14% chance to avoid interruption caused by damage while casting the Healing Touch, Regrowth and Tranquility spells.",
            "Gives you a 28% chance to avoid interruption caused by damage while casting the Healing Touch, Regrowth and Tranquility spells.",
            "Gives you a 42% chance to avoid interruption caused by damage while casting the Healing Touch, Regrowth and Tranquility spells.",
            "Gives you a 56% chance to avoid interruption caused by damage while casting the Healing Touch, Regrowth and Tranquility spells.",
            "Gives you a 70% chance to avoid interruption caused by damage while casting the Healing Touch, Regrowth and Tranquility spells."
        };

        public static readonly string[] ImprovedEnrageDescriptions = {
            "The Enrage ability now instantly generates 5 Rage.",
            "The Enrage ability now instantly generates 10 Rage."
        };

        public static readonly string[] ReflectionDescriptions = {
            "Allows 5% of your Mana regeneration to continue while casting.",
            "Allows 10% of your Mana regeneration to continue while casting.",
            "Allows 15% of your Mana regeneration to continue while casting."
        };

        public static readonly string[] InsectSwarmDescriptions = {
            "The enemy target is swarmed by insects, decreasing their chance to hit by 2% and causing 66 Nature damage over 12 sec."
        };

        public static readonly string[] SubtletyDescriptions = {
            "Reduces the threat generated by your healing spells by 4%.",
            "Reduces the threat generated by your healing spells by 8%.",
            "Reduces the threat generated by your healing spells by 12%.",
            "Reduces the threat generated by your healing spells by 16%.",
            "Reduces the threat generated by your healing spells by 20%."
        };

        public static readonly string[] TranquilSpiritDescriptions = {
            "Reduces the Mana cost of your Healing Touch and Tranquility spells by 2%.",
            "Reduces the Mana cost of your Healing Touch and Tranquility spells by 4%.",
            "Reduces the Mana cost of your Healing Touch and Tranquility spells by 6%.",
            "Reduces the Mana cost of your Healing Touch and Tranquility spells by 8%.",
            "Reduces the Mana cost of your Healing Touch and Tranquility spells by 10%."
        };

        public static readonly string[] ImprovedRejuvenationDescriptions = {
            "Increases the effect of your Rejuvenation spell by 5%.",
            "Increases the effect of your Rejuvenation spell by 10%.",
            "Increases the effect of your Rejuvenation spell by 15%."
        };

        public static readonly string[] NaturesSwiftnessDescriptions = {
            "When activated, your next Nature spell becomes an instant cast spell."
        };

        public static readonly string[] GiftOfNatureDescriptions = {
            "Increases the effect of all healing spells by 2%.",
            "Increases the effect of all healing spells by 4%.",
            "Increases the effect of all healing spells by 6%.",
            "Increases the effect of all healing spells by 8%.",
            "Increases the effect of all healing spells by 10%."
        };

        public static readonly string[] ImprovedTranquilityDescriptions = {
            "Reduces threat caused by Tranquility by 50%.",
            "Reduces threat caused by Tranquility by 100%."
        };

        public static readonly string[] ImprovedRegrowthDescriptions = {
            "Increases the critical effect chance of your Regrowth spell by 10%.",
            "Increases the critical effect chance of your Regrowth spell by 20%.",
            "Increases the critical effect chance of your Regrowth spell by 30%.",
            "Increases the critical effect chance of your Regrowth spell by 40%.",
            "Increases the critical effect chance of your Regrowth spell by 50%."
        };

        public static readonly string[] SwiftmendDescriptions = {
            "Consumes a Rejuvenation or Regrowth effect on a friendly target to instantly heal them an amount equal to 12 sec. of Rejuvenation or 18 sec. of Regrowth."
        };

        public static string GetAbilityDesc(int abilityPosition, int abilityPoints)
        {
            if (abilityPosition == 0)
            {
                if (abilityPoints < ImprovedMarkOfTheWildDescriptions.Length)
                {
                    return ImprovedMarkOfTheWildDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedMarkOfTheWildDescriptions[ImprovedMarkOfTheWildDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 1)
            {
                if (abilityPoints < FurorDescriptions.Length)
                {
                    return FurorDescriptions[abilityPoints];
                }
                else
                {
                    return FurorDescriptions[FurorDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 2)
            {
                if (abilityPoints < ImprovedHealingTouchDescriptions.Length)
                {
                    return ImprovedHealingTouchDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedHealingTouchDescriptions[ImprovedHealingTouchDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 3)
            {
                if (abilityPoints < NaturesFocusDescriptions.Length)
                {
                    return NaturesFocusDescriptions[abilityPoints];
                }
                else
                {
                    return NaturesFocusDescriptions[NaturesFocusDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 4)
            {
                if (abilityPoints < ImprovedEnrageDescriptions.Length)
                {
                    return ImprovedEnrageDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedEnrageDescriptions[ImprovedEnrageDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 5)
            {
                if (abilityPoints < ReflectionDescriptions.Length)
                {
                    return ReflectionDescriptions[abilityPoints];
                }
                else
                {
                    return ReflectionDescriptions[ReflectionDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 6)
            {
                if (abilityPoints < InsectSwarmDescriptions.Length)
                {
                    return InsectSwarmDescriptions[abilityPoints];
                }
                else
                {
                    return InsectSwarmDescriptions[InsectSwarmDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 7)
            {
                if (abilityPoints < SubtletyDescriptions.Length)
                {
                    return SubtletyDescriptions[abilityPoints];
                }
                else
                {
                    return SubtletyDescriptions[SubtletyDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 8)
            {
                if (abilityPoints < TranquilSpiritDescriptions.Length)
                {
                    return TranquilSpiritDescriptions[abilityPoints];
                }
                else
                {
                    return TranquilSpiritDescriptions[TranquilSpiritDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 9)
            {
                if (abilityPoints < ImprovedRejuvenationDescriptions.Length)
                {
                    return ImprovedRejuvenationDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedRejuvenationDescriptions[ImprovedRejuvenationDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 10)
            {
                if (abilityPoints < NaturesSwiftnessDescriptions.Length)
                {
                    return NaturesSwiftnessDescriptions[abilityPoints];
                }
                else
                {
                    return NaturesSwiftnessDescriptions[NaturesSwiftnessDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 11)
            {
                if (abilityPoints < GiftOfNatureDescriptions.Length)
                {
                    return GiftOfNatureDescriptions[abilityPoints];
                }
                else
                {
                    return GiftOfNatureDescriptions[GiftOfNatureDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 12)
            {
                if (abilityPoints < ImprovedTranquilityDescriptions.Length)
                {
                    return ImprovedTranquilityDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedTranquilityDescriptions[ImprovedTranquilityDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 13)
            {
                if (abilityPoints < ImprovedRegrowthDescriptions.Length)
                {
                    return ImprovedRegrowthDescriptions[abilityPoints];
                }
                else
                {
                    return ImprovedRegrowthDescriptions[ImprovedRegrowthDescriptions.Length - 1];
                }
            }
            else if (abilityPosition == 14)
            {
                if (abilityPoints < SwiftmendDescriptions.Length)
                {
                    return SwiftmendDescriptions[abilityPoints];
                }
                else
                {
                    return SwiftmendDescriptions[SwiftmendDescriptions.Length - 1];
                }
            }
            else
            {
                return "No Description available";
            }
        }
    }
}